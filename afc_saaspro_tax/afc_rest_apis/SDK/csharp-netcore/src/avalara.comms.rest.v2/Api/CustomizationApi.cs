/* 
 * SaasPro
 *
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using avalara.comms.rest.v2.Client;
using avalara.comms.rest.v2.Model;

namespace avalara.comms.rest.v2.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomizationApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>ClientProfileConfigResponse</returns>
        ClientProfileConfigResponse ApiV2ProfilesGetProfilesGet (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?));

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>ApiResponse of ClientProfileConfigResponse</returns>
        ApiResponse<ClientProfileConfigResponse> ApiV2ProfilesGetProfilesGetWithHttpInfo (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomizationApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>Task of ClientProfileConfigResponse</returns>
        System.Threading.Tasks.Task<ClientProfileConfigResponse> ApiV2ProfilesGetProfilesGetAsync (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?));

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>Task of ApiResponse (ClientProfileConfigResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ClientProfileConfigResponse>> ApiV2ProfilesGetProfilesGetAsyncWithHttpInfo (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomizationApi : ICustomizationApiSync, ICustomizationApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CustomizationApi : ICustomizationApi
    {
        private avalara.comms.rest.v2.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomizationApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CustomizationApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomizationApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CustomizationApi(String basePath)
        {
            this.Configuration = avalara.comms.rest.v2.Client.Configuration.MergeConfigurations(
                avalara.comms.rest.v2.Client.GlobalConfiguration.Instance,
                new avalara.comms.rest.v2.Client.Configuration { BasePath = basePath }
            );
            this.Client = new avalara.comms.rest.v2.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new avalara.comms.rest.v2.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = avalara.comms.rest.v2.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomizationApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CustomizationApi(avalara.comms.rest.v2.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = avalara.comms.rest.v2.Client.Configuration.MergeConfigurations(
                avalara.comms.rest.v2.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new avalara.comms.rest.v2.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new avalara.comms.rest.v2.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = avalara.comms.rest.v2.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomizationApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public CustomizationApi(avalara.comms.rest.v2.Client.ISynchronousClient client,avalara.comms.rest.v2.Client.IAsynchronousClient asyncClient, avalara.comms.rest.v2.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = avalara.comms.rest.v2.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public avalara.comms.rest.v2.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public avalara.comms.rest.v2.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public avalara.comms.rest.v2.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public avalara.comms.rest.v2.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items 
        /// </summary>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>ClientProfileConfigResponse</returns>
        public ClientProfileConfigResponse ApiV2ProfilesGetProfilesGet (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?))
        {
             avalara.comms.rest.v2.Client.ApiResponse<ClientProfileConfigResponse> localVarResponse = ApiV2ProfilesGetProfilesGetWithHttpInfo(requestedClientId, requestedProfileId, itemType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items 
        /// </summary>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>ApiResponse of ClientProfileConfigResponse</returns>
        public avalara.comms.rest.v2.Client.ApiResponse< ClientProfileConfigResponse > ApiV2ProfilesGetProfilesGetWithHttpInfo (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?))
        {
            avalara.comms.rest.v2.Client.RequestOptions localVarRequestOptions = new avalara.comms.rest.v2.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = avalara.comms.rest.v2.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = avalara.comms.rest.v2.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (requestedClientId != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "RequestedClientId", requestedClientId));
            }
            if (requestedProfileId != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "RequestedProfileId", requestedProfileId));
            }
            if (itemType != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "ItemType", itemType));
            }

            // authentication (Basic) required

            // make the HTTP request
            var localVarResponse = this.Client.Get< ClientProfileConfigResponse >("/api/v2/profiles/GetProfiles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ProfilesGetProfilesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items 
        /// </summary>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>Task of ClientProfileConfigResponse</returns>
        public async System.Threading.Tasks.Task<ClientProfileConfigResponse> ApiV2ProfilesGetProfilesGetAsync (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?))
        {
             avalara.comms.rest.v2.Client.ApiResponse<ClientProfileConfigResponse> localVarResponse = await ApiV2ProfilesGetProfilesGetAsyncWithHttpInfo(requestedClientId, requestedProfileId, itemType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Retrieves one or more profiles with associated settings and configurable items 
        /// </summary>
        /// <exception cref="avalara.comms.rest.v2.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestedClientId">Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable. (optional)</param>
        /// <param name="requestedProfileId">Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set. (optional)</param>
        /// <param name="itemType">Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All (optional)</param>
        /// <returns>Task of ApiResponse (ClientProfileConfigResponse)</returns>
        public async System.Threading.Tasks.Task<avalara.comms.rest.v2.Client.ApiResponse<ClientProfileConfigResponse>> ApiV2ProfilesGetProfilesGetAsyncWithHttpInfo (int? requestedClientId = default(int?), int? requestedProfileId = default(int?), ClientProfileConfigTypes? itemType = default(ClientProfileConfigTypes?))
        {

            avalara.comms.rest.v2.Client.RequestOptions localVarRequestOptions = new avalara.comms.rest.v2.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "text/plain",
                "application/json",
                "text/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (requestedClientId != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "RequestedClientId", requestedClientId));
            }
            if (requestedProfileId != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "RequestedProfileId", requestedProfileId));
            }
            if (itemType != null)
            {
                localVarRequestOptions.QueryParameters.Add(avalara.comms.rest.v2.Client.ClientUtils.ParameterToMultiMap("", "ItemType", itemType));
            }

            // authentication (Basic) required

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ClientProfileConfigResponse>("/api/v2/profiles/GetProfiles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ProfilesGetProfilesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
