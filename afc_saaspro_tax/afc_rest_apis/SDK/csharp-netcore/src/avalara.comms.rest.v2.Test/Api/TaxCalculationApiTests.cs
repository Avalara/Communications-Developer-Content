/* 
 * SaasPro
 *
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using avalara.comms.rest.v2.Client;
using avalara.comms.rest.v2.Api;
using avalara.comms.rest.v2.Model;

namespace avalara.comms.rest.v2.Test
{
    /// <summary>
    ///  Class for testing TaxCalculationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaxCalculationApiTests : IDisposable
    {
        private TaxCalculationApi instance;

        public TaxCalculationApiTests()
        {
            instance = new TaxCalculationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TaxCalculationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TaxCalculationApi
            //Assert.IsType(typeof(TaxCalculationApi), instance, "instance is a TaxCalculationApi");
        }

        
        /// <summary>
        /// Test ApiV2AfcCalcTaxesPost
        /// </summary>
        [Fact]
        public void ApiV2AfcCalcTaxesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CalcTaxesRequest calcTaxesRequest = null;
            //var response = instance.ApiV2AfcCalcTaxesPost(calcTaxesRequest);
            //Assert.IsType<CalcTaxesResponse> (response, "response is CalcTaxesResponse");
        }
        
        /// <summary>
        /// Test ApiV2AfcCommitPost
        /// </summary>
        [Fact]
        public void ApiV2AfcCommitPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CommitRequest commitRequest = null;
            //var response = instance.ApiV2AfcCommitPost(commitRequest);
            //Assert.IsType<CommitResponse> (response, "response is CommitResponse");
        }
        
    }

}
