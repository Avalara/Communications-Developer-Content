/* 
 * SaasPro
 *
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using avalara.comms.rest.v2.Api;
using avalara.comms.rest.v2.Model;
using avalara.comms.rest.v2.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace avalara.comms.rest.v2.Test
{
    /// <summary>
    ///  Class for testing SetTaxCalculationSettingRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SetTaxCalculationSettingRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SetTaxCalculationSettingRequest
        //private SetTaxCalculationSettingRequest instance;

        public SetTaxCalculationSettingRequestTests()
        {
            // TODO uncomment below to create an instance of SetTaxCalculationSettingRequest
            //instance = new SetTaxCalculationSettingRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SetTaxCalculationSettingRequest
        /// </summary>
        [Fact]
        public void SetTaxCalculationSettingRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SetTaxCalculationSettingRequest
            //Assert.IsInstanceOfType<SetTaxCalculationSettingRequest> (instance, "variable 'instance' is a SetTaxCalculationSettingRequest");
        }


        /// <summary>
        /// Test the property 'ProfileConfigId'
        /// </summary>
        [Fact]
        public void ProfileConfigIdTest()
        {
            // TODO unit test for the property 'ProfileConfigId'
        }
        /// <summary>
        /// Test the property 'LinkProfileIds'
        /// </summary>
        [Fact]
        public void LinkProfileIdsTest()
        {
            // TODO unit test for the property 'LinkProfileIds'
        }
        /// <summary>
        /// Test the property 'UnlinkProfileIds'
        /// </summary>
        [Fact]
        public void UnlinkProfileIdsTest()
        {
            // TODO unit test for the property 'UnlinkProfileIds'
        }
        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }
        /// <summary>
        /// Test the property 'Deactivate'
        /// </summary>
        [Fact]
        public void DeactivateTest()
        {
            // TODO unit test for the property 'Deactivate'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'ReplaceExistingLinks'
        /// </summary>
        [Fact]
        public void ReplaceExistingLinksTest()
        {
            // TODO unit test for the property 'ReplaceExistingLinks'
        }
        /// <summary>
        /// Test the property 'Settings'
        /// </summary>
        [Fact]
        public void SettingsTest()
        {
            // TODO unit test for the property 'Settings'
        }
        /// <summary>
        /// Test the property 'Exclusions'
        /// </summary>
        [Fact]
        public void ExclusionsTest()
        {
            // TODO unit test for the property 'Exclusions'
        }
        /// <summary>
        /// Test the property 'Bundles'
        /// </summary>
        [Fact]
        public void BundlesTest()
        {
            // TODO unit test for the property 'Bundles'
        }
        /// <summary>
        /// Test the property 'Nexus'
        /// </summary>
        [Fact]
        public void NexusTest()
        {
            // TODO unit test for the property 'Nexus'
        }
        /// <summary>
        /// Test the property 'Overrides'
        /// </summary>
        [Fact]
        public void OverridesTest()
        {
            // TODO unit test for the property 'Overrides'
        }

    }

}
