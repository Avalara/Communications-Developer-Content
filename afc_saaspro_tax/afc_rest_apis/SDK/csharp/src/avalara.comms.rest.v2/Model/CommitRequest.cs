/* 
 * SaasPro
 *
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = avalara.comms.rest.v2.Client.OpenAPIDateConverter;

namespace avalara.comms.rest.v2.Model
{
    /// <summary>
    /// Parameter for CommitTransactions API.
    /// </summary>
    [DataContract]
    public partial class CommitRequest :  IEquatable<CommitRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommitRequest" /> class.
        /// </summary>
        /// <param name="doc">doc.</param>
        /// <param name="cmmt">cmmt.</param>
        /// <param name="opt">opt.</param>
        public CommitRequest(string doc = default(string), bool? cmmt = default(bool?), List<KeyValuePair> opt = default(List<KeyValuePair>))
        {
            this.Doc = doc;
            this.Cmmt = cmmt;
            this.Opt = opt;
            this.Doc = doc;
            this.Cmmt = cmmt;
            this.Opt = opt;
        }
        
        /// <summary>
        /// Gets or Sets Doc
        /// </summary>
        [DataMember(Name="doc", EmitDefaultValue=true)]
        public string Doc { get; set; }

        /// <summary>
        /// Gets or Sets Cmmt
        /// </summary>
        [DataMember(Name="cmmt", EmitDefaultValue=true)]
        public bool? Cmmt { get; set; }

        /// <summary>
        /// Gets or Sets Opt
        /// </summary>
        [DataMember(Name="opt", EmitDefaultValue=true)]
        public List<KeyValuePair> Opt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CommitRequest {\n");
            sb.Append("  Doc: ").Append(Doc).Append("\n");
            sb.Append("  Cmmt: ").Append(Cmmt).Append("\n");
            sb.Append("  Opt: ").Append(Opt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CommitRequest);
        }

        /// <summary>
        /// Returns true if CommitRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CommitRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CommitRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Doc == input.Doc ||
                    (this.Doc != null &&
                    this.Doc.Equals(input.Doc))
                ) && 
                (
                    this.Cmmt == input.Cmmt ||
                    (this.Cmmt != null &&
                    this.Cmmt.Equals(input.Cmmt))
                ) && 
                (
                    this.Opt == input.Opt ||
                    this.Opt != null &&
                    input.Opt != null &&
                    this.Opt.SequenceEqual(input.Opt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Doc != null)
                    hashCode = hashCode * 59 + this.Doc.GetHashCode();
                if (this.Cmmt != null)
                    hashCode = hashCode * 59 + this.Cmmt.GetHashCode();
                if (this.Opt != null)
                    hashCode = hashCode * 59 + this.Opt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
