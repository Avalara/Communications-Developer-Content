/* 
 * SaasPro
 *
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = avalara.comms.rest.v2.Client.OpenAPIDateConverter;

namespace avalara.comms.rest.v2.Model
{
    /// <summary>
    /// Choice of tax calculation setting types.
    /// </summary>
    /// <value>Choice of tax calculation setting types.</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum TaxCalculationSettingTypes
    {
        /// <summary>
        /// Enum All for value: All
        /// </summary>
        [EnumMember(Value = "All")]
        All = 1,

        /// <summary>
        /// Enum Configuration for value: Configuration
        /// </summary>
        [EnumMember(Value = "Configuration")]
        Configuration = 2,

        /// <summary>
        /// Enum Bundle for value: Bundle
        /// </summary>
        [EnumMember(Value = "Bundle")]
        Bundle = 3,

        /// <summary>
        /// Enum Exclusion for value: Exclusion
        /// </summary>
        [EnumMember(Value = "Exclusion")]
        Exclusion = 4,

        /// <summary>
        /// Enum Override for value: Override
        /// </summary>
        [EnumMember(Value = "Override")]
        Override = 5,

        /// <summary>
        /// Enum Nexus for value: Nexus
        /// </summary>
        [EnumMember(Value = "Nexus")]
        Nexus = 6,

        /// <summary>
        /// Enum Exemption for value: Exemption
        /// </summary>
        [EnumMember(Value = "Exemption")]
        Exemption = 7

    }

}
