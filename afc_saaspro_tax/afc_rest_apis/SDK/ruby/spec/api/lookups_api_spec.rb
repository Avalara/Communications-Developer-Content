=begin
#SaasPro

#APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::LookupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LookupsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::LookupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LookupsApi' do
    it 'should create an instance of LookupsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::LookupsApi)
    end
  end

  # unit tests for api_v2_afc_location_pcode_get
  # Get location data associated with a PCode
  # Request will return all jurisdictions associated with the PCode
  # @param pcode 
  # @param [Hash] opts the optional parameters
  # @return [PCodeLookupResult]
  describe 'api_v2_afc_location_pcode_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_afc_primary_p_code_get
  # Get primary location data associated with a PCode
  # Request will return primary jurisdiction associated with the PCode
  # @param p_code 
  # @param [Hash] opts the optional parameters
  # @return [PCodeLookupResult]
  describe 'api_v2_afc_primary_p_code_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_afc_serviceinfo_get
  # Retrieves server time, service build version and engine version
  # @param [Hash] opts the optional parameters
  # @return [ServiceInfo]
  describe 'api_v2_afc_serviceinfo_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_afc_taxtype_tax_type_get
  # Get the tax information (description and category) for a tax type ID
  # This method returns the description for the specified tax type ID. If tax type * is supplied it will return all tax types.
  # @param tax_type Tax type ID for the tax type.
  # @param [Hash] opts the optional parameters
  # @return [Array<TaxTypeData>]
  describe 'api_v2_afc_taxtype_tax_type_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_afc_tspairs_get
  # Get transaction/service pair information
  # This method returns the description for the transaction type, service type and the ts pairs.
  # @param [Hash] opts the optional parameters
  # @return [Array<TSPairData>]
  describe 'api_v2_afc_tspairs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
