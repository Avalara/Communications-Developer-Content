=begin
#SaasPro

#APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::JurisdictionDeterminationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'JurisdictionDeterminationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::JurisdictionDeterminationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of JurisdictionDeterminationApi' do
    it 'should create an instance of JurisdictionDeterminationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::JurisdictionDeterminationApi)
    end
  end

  # unit tests for api_v2_afc_p_code_post
  # Get PCode(s) associated with a location - Ctry/State/County/City/Zip/NpaNxx/Fips.
  # Requests supports using best match or exact match as well as limiting the number of matches returned. Use a * on the end of Fips/Npanxx Codes to find a range of values.
  # @param [Hash] opts the optional parameters
  # @option opts [PCodeLookupRequest] :p_code_lookup_request 
  # @return [PCodeLookupResult]
  describe 'api_v2_afc_p_code_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_geo_batch_log_process_id_get
  # Retrieves log on Geo Batch file
  # @param process_id Process Id for Geo Batch File.
  # @param [Hash] opts the optional parameters
  # @return [GeoBatchLog]
  describe 'api_v2_geo_batch_log_process_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_geo_batch_status_process_id_get
  # Retrieves information on Geo Batch file status
  # @param process_id Process Id for Geo Batch File.
  # @param [Hash] opts the optional parameters
  # @return [GeoBatchStatus]
  describe 'api_v2_geo_batch_status_process_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_geo_batch_upload_post
  # Uploads file to Geo Batch.
  # @param [Hash] opts the optional parameters
  # @option opts [File] :geo_batch_file 
  # @return [GeoBatchSubmitFileResponse]
  describe 'api_v2_geo_batch_upload_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v2_geo_geocode_post
  # Geocodes one or multiple street addresses and/or lat/long coordinate pairs.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<GeocodeRequest>] :geocode_request List of street addresses and/or lat/long coordinate pairs to geocode.
  # @return [Array<GeocodeResult>]
  describe 'api_v2_geo_geocode_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
