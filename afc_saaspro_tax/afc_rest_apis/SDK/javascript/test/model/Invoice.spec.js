/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SaasPro);
  }
}(this, function(expect, SaasPro) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SaasPro.Invoice();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Invoice', function() {
    it('should create an instance of Invoice', function() {
      // uncomment below and update the code to test Invoice
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be.a(SaasPro.Invoice);
    });

    it('should have the property doc (base name: "doc")', function() {
      // uncomment below and update the code to test the property doc
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property cmmt (base name: "cmmt")', function() {
      // uncomment below and update the code to test the property cmmt
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property bill (base name: "bill")', function() {
      // uncomment below and update the code to test the property bill
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property cust (base name: "cust")', function() {
      // uncomment below and update the code to test the property cust
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property lfln (base name: "lfln")', function() {
      // uncomment below and update the code to test the property lfln
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property exms (base name: "exms")', function() {
      // uncomment below and update the code to test the property exms
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property itms (base name: "itms")', function() {
      // uncomment below and update the code to test the property itms
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invm (base name: "invm")', function() {
      // uncomment below and update the code to test the property invm
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property dtl (base name: "dtl")', function() {
      // uncomment below and update the code to test the property dtl
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property summ (base name: "summ")', function() {
      // uncomment below and update the code to test the property summ
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property opt (base name: "opt")', function() {
      // uncomment below and update the code to test the property opt
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property acct (base name: "acct")', function() {
      // uncomment below and update the code to test the property acct
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property custref (base name: "custref")', function() {
      // uncomment below and update the code to test the property custref
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invn (base name: "invn")', function() {
      // uncomment below and update the code to test the property invn
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property bcyc (base name: "bcyc")', function() {
      // uncomment below and update the code to test the property bcyc
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property bpd (base name: "bpd")', function() {
      // uncomment below and update the code to test the property bpd
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property ccycd (base name: "ccycd")', function() {
      // uncomment below and update the code to test the property ccycd
      //var instane = new SaasPro.Invoice();
      //expect(instance).to.be();
    });

  });

}));
