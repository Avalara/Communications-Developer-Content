/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SaasPro);
  }
}(this, function(expect, SaasPro) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SaasPro.LineItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LineItem', function() {
    it('should create an instance of LineItem', function() {
      // uncomment below and update the code to test LineItem
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be.a(SaasPro.LineItem);
    });

    it('should have the property ref (base name: "ref")', function() {
      // uncomment below and update the code to test the property ref
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property chg (base name: "chg")', function() {
      // uncomment below and update the code to test the property chg
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property line (base name: "line")', function() {
      // uncomment below and update the code to test the property line
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property loc (base name: "loc")', function() {
      // uncomment below and update the code to test the property loc
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property min (base name: "min")', function() {
      // uncomment below and update the code to test the property min
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property sale (base name: "sale")', function() {
      // uncomment below and update the code to test the property sale
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property plsp (base name: "plsp")', function() {
      // uncomment below and update the code to test the property plsp
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property incl (base name: "incl")', function() {
      // uncomment below and update the code to test the property incl
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property pror (base name: "pror")', function() {
      // uncomment below and update the code to test the property pror
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property proadj (base name: "proadj")', function() {
      // uncomment below and update the code to test the property proadj
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property tran (base name: "tran")', function() {
      // uncomment below and update the code to test the property tran
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property serv (base name: "serv")', function() {
      // uncomment below and update the code to test the property serv
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property dbt (base name: "dbt")', function() {
      // uncomment below and update the code to test the property dbt
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property adj (base name: "adj")', function() {
      // uncomment below and update the code to test the property adj
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property adjm (base name: "adjm")', function() {
      // uncomment below and update the code to test the property adjm
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property disc (base name: "disc")', function() {
      // uncomment below and update the code to test the property disc
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property opt (base name: "opt")', function() {
      // uncomment below and update the code to test the property opt
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property prop (base name: "prop")', function() {
      // uncomment below and update the code to test the property prop
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property bill (base name: "bill")', function() {
      // uncomment below and update the code to test the property bill
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property cust (base name: "cust")', function() {
      // uncomment below and update the code to test the property cust
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lfln (base name: "lfln")', function() {
      // uncomment below and update the code to test the property lfln
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property qty (base name: "qty")', function() {
      // uncomment below and update the code to test the property qty
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property glref (base name: "glref")', function() {
      // uncomment below and update the code to test the property glref
      //var instane = new SaasPro.LineItem();
      //expect(instance).to.be();
    });

  });

}));
