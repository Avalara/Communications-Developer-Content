/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SetTaxCalculationSettingRequest from '../model/SetTaxCalculationSettingRequest';
import TaxCalculationSettingTypes from '../model/TaxCalculationSettingTypes';
import TaxCalculationSettingsResponse from '../model/TaxCalculationSettingsResponse';

/**
* Customization service.
* @module api/CustomizationApi
* @version v2
*/
export default class CustomizationApi {

    /**
    * Constructs a new CustomizationApi. 
    * @alias module:api/CustomizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2ProfilesGetProfilesGet operation.
     * @callback module:api/CustomizationApi~apiV2ProfilesGetProfilesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaxCalculationSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves one or more profiles with associated settings and configurable items
     * @param {Object} opts Optional parameters
     * @param {Number} opts.requestedClientId Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable.
     * @param {Number} opts.requestedProfileId Configuration profile id to be fetched  Use 0 to indicate all profiles  Null value will use profile id from request or 0 if not set.
     * @param {module:model/TaxCalculationSettingTypes} opts.itemType Item Type  Examples:    Configuration, Bundle, Exclusion, Override, All
     * @param {module:api/CustomizationApi~apiV2ProfilesGetProfilesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaxCalculationSettingsResponse}
     */
    apiV2ProfilesGetProfilesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'RequestedClientId': opts['requestedClientId'],
        'RequestedProfileId': opts['requestedProfileId'],
        'ItemType': opts['itemType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = TaxCalculationSettingsResponse;
      return this.apiClient.callApi(
        '/api/v2/profiles/GetProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ProfilesSetBundlesPost operation.
     * @callback module:api/CustomizationApi~apiV2ProfilesSetBundlesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaxCalculationSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates bundle packages and associated profile mappings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SetTaxCalculationSettingRequest} opts.setTaxCalculationSettingRequest 
     * @param {module:api/CustomizationApi~apiV2ProfilesSetBundlesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaxCalculationSettingsResponse}
     */
    apiV2ProfilesSetBundlesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['setTaxCalculationSettingRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = TaxCalculationSettingsResponse;
      return this.apiClient.callApi(
        '/api/v2/profiles/SetBundles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ProfilesSetConfigPost operation.
     * @callback module:api/CustomizationApi~apiV2ProfilesSetConfigPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaxCalculationSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates configuration settings and associated profile mappings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SetTaxCalculationSettingRequest} opts.setTaxCalculationSettingRequest 
     * @param {module:api/CustomizationApi~apiV2ProfilesSetConfigPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaxCalculationSettingsResponse}
     */
    apiV2ProfilesSetConfigPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['setTaxCalculationSettingRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = TaxCalculationSettingsResponse;
      return this.apiClient.callApi(
        '/api/v2/profiles/SetConfig', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ProfilesSetExclusionsPost operation.
     * @callback module:api/CustomizationApi~apiV2ProfilesSetExclusionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaxCalculationSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates exclusions and associated profile mappings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SetTaxCalculationSettingRequest} opts.setTaxCalculationSettingRequest 
     * @param {module:api/CustomizationApi~apiV2ProfilesSetExclusionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaxCalculationSettingsResponse}
     */
    apiV2ProfilesSetExclusionsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['setTaxCalculationSettingRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = TaxCalculationSettingsResponse;
      return this.apiClient.callApi(
        '/api/v2/profiles/SetExclusions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ProfilesSetOverridesPost operation.
     * @callback module:api/CustomizationApi~apiV2ProfilesSetOverridesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaxCalculationSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates overrides and associated profile mappings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SetTaxCalculationSettingRequest} opts.setTaxCalculationSettingRequest 
     * @param {module:api/CustomizationApi~apiV2ProfilesSetOverridesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaxCalculationSettingsResponse}
     */
    apiV2ProfilesSetOverridesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['setTaxCalculationSettingRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = TaxCalculationSettingsResponse;
      return this.apiClient.callApi(
        '/api/v2/profiles/SetOverrides', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
