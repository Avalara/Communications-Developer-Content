/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import GeoBatchDownloadResponse from './GeoBatchDownloadResponse';

/**
 * The GeoBatchStatus model module.
 * @module model/GeoBatchStatus
 * @version v2
 */
class GeoBatchStatus {
    /**
     * Constructs a new <code>GeoBatchStatus</code>.
     * Individual File Status For Geo Batch result
     * @alias module:model/GeoBatchStatus
     */
    constructor() { 
        
        GeoBatchStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeoBatchStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeoBatchStatus} obj Optional instance to populate.
     * @return {module:model/GeoBatchStatus} The populated <code>GeoBatchStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeoBatchStatus();

            if (data.hasOwnProperty('ProcessId')) {
                obj['ProcessId'] = ApiClient.convertToType(data['ProcessId'], 'Number');
            }
            if (data.hasOwnProperty('RequestDate')) {
                obj['RequestDate'] = ApiClient.convertToType(data['RequestDate'], 'Date');
            }
            if (data.hasOwnProperty('ProcessingStart')) {
                obj['ProcessingStart'] = ApiClient.convertToType(data['ProcessingStart'], 'Date');
            }
            if (data.hasOwnProperty('ProcessingEnd')) {
                obj['ProcessingEnd'] = ApiClient.convertToType(data['ProcessingEnd'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Downloads')) {
                obj['Downloads'] = ApiClient.convertToType(data['Downloads'], GeoBatchDownloadResponse);
            }
            if (data.hasOwnProperty('Error')) {
                obj['Error'] = ApiClient.convertToType(data['Error'], [Error]);
            }
        }
        return obj;
    }


}

/**
 * Process ID for Batch file.
 * @member {Number} ProcessId
 */
GeoBatchStatus.prototype['ProcessId'] = undefined;

/**
 * Request Date.
 * @member {Date} RequestDate
 */
GeoBatchStatus.prototype['RequestDate'] = undefined;

/**
 * Processing Start.
 * @member {Date} ProcessingStart
 */
GeoBatchStatus.prototype['ProcessingStart'] = undefined;

/**
 * Processing End.
 * @member {Date} ProcessingEnd
 */
GeoBatchStatus.prototype['ProcessingEnd'] = undefined;

/**
 * Status Of Batch File.
 * @member {String} Status
 */
GeoBatchStatus.prototype['Status'] = undefined;

/**
 * Output File Name.
 * @member {module:model/GeoBatchDownloadResponse} Downloads
 */
GeoBatchStatus.prototype['Downloads'] = undefined;

/**
 * Error information.
 * @member {Array.<module:model/Error>} Error
 */
GeoBatchStatus.prototype['Error'] = undefined;






export default GeoBatchStatus;

