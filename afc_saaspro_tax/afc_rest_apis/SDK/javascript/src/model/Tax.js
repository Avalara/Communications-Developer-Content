/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Tax model module.
 * @module model/Tax
 * @version v2
 */
class Tax {
    /**
     * Constructs a new <code>Tax</code>.
     * Tax data for individual line item.
     * @alias module:model/Tax
     */
    constructor() { 
        
        Tax.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Tax</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tax} obj Optional instance to populate.
     * @return {module:model/Tax} The populated <code>Tax</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tax();

            if (data.hasOwnProperty('bill')) {
                obj['bill'] = ApiClient.convertToType(data['bill'], 'Boolean');
            }
            if (data.hasOwnProperty('cmpl')) {
                obj['cmpl'] = ApiClient.convertToType(data['cmpl'], 'Boolean');
            }
            if (data.hasOwnProperty('tm')) {
                obj['tm'] = ApiClient.convertToType(data['tm'], 'Number');
            }
            if (data.hasOwnProperty('calc')) {
                obj['calc'] = ApiClient.convertToType(data['calc'], 'Number');
            }
            if (data.hasOwnProperty('cat')) {
                obj['cat'] = ApiClient.convertToType(data['cat'], 'String');
            }
            if (data.hasOwnProperty('cid')) {
                obj['cid'] = ApiClient.convertToType(data['cid'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('exm')) {
                obj['exm'] = ApiClient.convertToType(data['exm'], 'Number');
            }
            if (data.hasOwnProperty('lns')) {
                obj['lns'] = ApiClient.convertToType(data['lns'], 'Number');
            }
            if (data.hasOwnProperty('min')) {
                obj['min'] = ApiClient.convertToType(data['min'], 'Number');
            }
            if (data.hasOwnProperty('pcd')) {
                obj['pcd'] = ApiClient.convertToType(data['pcd'], 'Number');
            }
            if (data.hasOwnProperty('taxpcd')) {
                obj['taxpcd'] = ApiClient.convertToType(data['taxpcd'], 'Number');
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
            if (data.hasOwnProperty('sur')) {
                obj['sur'] = ApiClient.convertToType(data['sur'], 'Boolean');
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
            }
            if (data.hasOwnProperty('lvl')) {
                obj['lvl'] = ApiClient.convertToType(data['lvl'], 'Number');
            }
            if (data.hasOwnProperty('tid')) {
                obj['tid'] = ApiClient.convertToType(data['tid'], 'Number');
            }
            if (data.hasOwnProperty('usexm')) {
                obj['usexm'] = ApiClient.convertToType(data['usexm'], 'Boolean');
            }
            if (data.hasOwnProperty('notax')) {
                obj['notax'] = ApiClient.convertToType(data['notax'], 'Boolean');
            }
            if (data.hasOwnProperty('trans')) {
                obj['trans'] = ApiClient.convertToType(data['trans'], 'Number');
            }
            if (data.hasOwnProperty('svc')) {
                obj['svc'] = ApiClient.convertToType(data['svc'], 'Number');
            }
            if (data.hasOwnProperty('chg')) {
                obj['chg'] = ApiClient.convertToType(data['chg'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} bill
 */
Tax.prototype['bill'] = undefined;

/**
 * @member {Boolean} cmpl
 */
Tax.prototype['cmpl'] = undefined;

/**
 * @member {Number} tm
 */
Tax.prototype['tm'] = undefined;

/**
 * @member {Number} calc
 */
Tax.prototype['calc'] = undefined;

/**
 * @member {String} cat
 */
Tax.prototype['cat'] = undefined;

/**
 * @member {Number} cid
 */
Tax.prototype['cid'] = undefined;

/**
 * Tax name.
 * @member {String} name
 */
Tax.prototype['name'] = undefined;

/**
 * @member {Number} exm
 */
Tax.prototype['exm'] = undefined;

/**
 * @member {Number} lns
 */
Tax.prototype['lns'] = undefined;

/**
 * @member {Number} min
 */
Tax.prototype['min'] = undefined;

/**
 * @member {Number} pcd
 */
Tax.prototype['pcd'] = undefined;

/**
 * @member {Number} taxpcd
 */
Tax.prototype['taxpcd'] = undefined;

/**
 * Tax rate.
 * @member {Number} rate
 */
Tax.prototype['rate'] = undefined;

/**
 * @member {Boolean} sur
 */
Tax.prototype['sur'] = undefined;

/**
 * @member {Number} tax
 */
Tax.prototype['tax'] = undefined;

/**
 * @member {Number} lvl
 */
Tax.prototype['lvl'] = undefined;

/**
 * @member {Number} tid
 */
Tax.prototype['tid'] = undefined;

/**
 * @member {Boolean} usexm
 */
Tax.prototype['usexm'] = undefined;

/**
 * @member {Boolean} notax
 */
Tax.prototype['notax'] = undefined;

/**
 * @member {Number} trans
 */
Tax.prototype['trans'] = undefined;

/**
 * @member {Number} svc
 */
Tax.prototype['svc'] = undefined;

/**
 * @member {Number} chg
 */
Tax.prototype['chg'] = undefined;






export default Tax;

