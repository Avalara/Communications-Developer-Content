/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleConfig from './BundleConfig';
import Configuration from './Configuration';
import Error from './Error';
import ExclusionConfig from './ExclusionConfig';
import NexusConfig from './NexusConfig';
import OverrideConfig from './OverrideConfig';
import Status from './Status';
import Warning from './Warning';

/**
 * The TaxCalculationSettingsResponse model module.
 * @module model/TaxCalculationSettingsResponse
 * @version v2
 */
class TaxCalculationSettingsResponse {
    /**
     * Constructs a new <code>TaxCalculationSettingsResponse</code>.
     * Data for an invoice or quote line item.
     * @alias module:model/TaxCalculationSettingsResponse
     */
    constructor() { 
        
        TaxCalculationSettingsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaxCalculationSettingsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxCalculationSettingsResponse} obj Optional instance to populate.
     * @return {module:model/TaxCalculationSettingsResponse} The populated <code>TaxCalculationSettingsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxCalculationSettingsResponse();

            if (data.hasOwnProperty('ProfileConfigId')) {
                obj['ProfileConfigId'] = ApiClient.convertToType(data['ProfileConfigId'], 'Number');
            }
            if (data.hasOwnProperty('ProfileIds')) {
                obj['ProfileIds'] = ApiClient.convertToType(data['ProfileIds'], ['Number']);
            }
            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'Number');
            }
            if (data.hasOwnProperty('LastUpdateBy')) {
                obj['LastUpdateBy'] = ApiClient.convertToType(data['LastUpdateBy'], 'String');
            }
            if (data.hasOwnProperty('Active')) {
                obj['Active'] = ApiClient.convertToType(data['Active'], 'Boolean');
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = ApiClient.convertToType(data['Settings'], Configuration);
            }
            if (data.hasOwnProperty('Exclusions')) {
                obj['Exclusions'] = ApiClient.convertToType(data['Exclusions'], [ExclusionConfig]);
            }
            if (data.hasOwnProperty('Bundles')) {
                obj['Bundles'] = ApiClient.convertToType(data['Bundles'], [BundleConfig]);
            }
            if (data.hasOwnProperty('Nexus')) {
                obj['Nexus'] = ApiClient.convertToType(data['Nexus'], [NexusConfig]);
            }
            if (data.hasOwnProperty('Overrides')) {
                obj['Overrides'] = ApiClient.convertToType(data['Overrides'], OverrideConfig);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Error')) {
                obj['Error'] = ApiClient.convertToType(data['Error'], 'String');
            }
            if (data.hasOwnProperty('ItemType')) {
                obj['ItemType'] = ApiClient.convertToType(data['ItemType'], 'String');
            }
            if (data.hasOwnProperty('Errors')) {
                obj['Errors'] = ApiClient.convertToType(data['Errors'], [Error]);
            }
            if (data.hasOwnProperty('Warnings')) {
                obj['Warnings'] = ApiClient.convertToType(data['Warnings'], [Warning]);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], [Status]);
            }
        }
        return obj;
    }


}

/**
 * Unique profile configuration id associated with configuration item
 * @member {Number} ProfileConfigId
 */
TaxCalculationSettingsResponse.prototype['ProfileConfigId'] = undefined;

/**
 * Profile id's associated with configuration item
 * @member {Array.<Number>} ProfileIds
 */
TaxCalculationSettingsResponse.prototype['ProfileIds'] = undefined;

/**
 * Client id associated with configuration item
 * @member {Number} ClientId
 */
TaxCalculationSettingsResponse.prototype['ClientId'] = undefined;

/**
 * User who last updated the configuration item
 * @member {String} LastUpdateBy
 */
TaxCalculationSettingsResponse.prototype['LastUpdateBy'] = undefined;

/**
 * Active status of the configuration item
 * @member {Boolean} Active
 */
TaxCalculationSettingsResponse.prototype['Active'] = undefined;

/**
 * Configuration settings (as applicable)
 * @member {module:model/Configuration} Settings
 */
TaxCalculationSettingsResponse.prototype['Settings'] = undefined;

/**
 * Exclusions (as applicable)
 * @member {Array.<module:model/ExclusionConfig>} Exclusions
 */
TaxCalculationSettingsResponse.prototype['Exclusions'] = undefined;

/**
 * Bundles (as applicable)
 * @member {Array.<module:model/BundleConfig>} Bundles
 */
TaxCalculationSettingsResponse.prototype['Bundles'] = undefined;

/**
 * Nexus (as applicable)
 * @member {Array.<module:model/NexusConfig>} Nexus
 */
TaxCalculationSettingsResponse.prototype['Nexus'] = undefined;

/**
 * Overrides (as applicable - raw data)
 * @member {module:model/OverrideConfig} Overrides
 */
TaxCalculationSettingsResponse.prototype['Overrides'] = undefined;

/**
 * Description associated with this item
 * @member {String} Description
 */
TaxCalculationSettingsResponse.prototype['Description'] = undefined;

/**
 * Error information.
 * @member {String} Error
 */
TaxCalculationSettingsResponse.prototype['Error'] = undefined;

/**
 * Item Type  Examples:    Configuration, Bundle, Exclusion, Override
 * @member {String} ItemType
 */
TaxCalculationSettingsResponse.prototype['ItemType'] = undefined;

/**
 * Error information.
 * @member {Array.<module:model/Error>} Errors
 */
TaxCalculationSettingsResponse.prototype['Errors'] = undefined;

/**
 * Warning information.
 * @member {Array.<module:model/Warning>} Warnings
 */
TaxCalculationSettingsResponse.prototype['Warnings'] = undefined;

/**
 * Status information.
 * @member {Array.<module:model/Status>} Status
 */
TaxCalculationSettingsResponse.prototype['Status'] = undefined;






export default TaxCalculationSettingsResponse;

