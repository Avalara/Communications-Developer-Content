/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BundleItem model module.
 * @module model/BundleItem
 * @version v2
 */
class BundleItem {
    /**
     * Constructs a new <code>BundleItem</code>.
     * Bundled items associated with a bundle package
     * @alias module:model/BundleItem
     */
    constructor() { 
        
        BundleItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BundleItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BundleItem} obj Optional instance to populate.
     * @return {module:model/BundleItem} The populated <code>BundleItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BundleItem();

            if (data.hasOwnProperty('TransactionId')) {
                obj['TransactionId'] = ApiClient.convertToType(data['TransactionId'], 'Number');
            }
            if (data.hasOwnProperty('ServiceId')) {
                obj['ServiceId'] = ApiClient.convertToType(data['ServiceId'], 'Number');
            }
            if (data.hasOwnProperty('Percentage')) {
                obj['Percentage'] = ApiClient.convertToType(data['Percentage'], 'Number');
            }
            if (data.hasOwnProperty('FixedAmount')) {
                obj['FixedAmount'] = ApiClient.convertToType(data['FixedAmount'], 'Number');
            }
            if (data.hasOwnProperty('Lines')) {
                obj['Lines'] = ApiClient.convertToType(data['Lines'], 'Number');
            }
            if (data.hasOwnProperty('Minutes')) {
                obj['Minutes'] = ApiClient.convertToType(data['Minutes'], 'Number');
            }
            if (data.hasOwnProperty('TransactionDesc')) {
                obj['TransactionDesc'] = ApiClient.convertToType(data['TransactionDesc'], 'String');
            }
            if (data.hasOwnProperty('ServiceDesc')) {
                obj['ServiceDesc'] = ApiClient.convertToType(data['ServiceDesc'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Transaction id for item
 * @member {Number} TransactionId
 */
BundleItem.prototype['TransactionId'] = undefined;

/**
 * Service id for item
 * @member {Number} ServiceId
 */
BundleItem.prototype['ServiceId'] = undefined;

/**
 * Percentage of package charge to be applied to item
 * @member {Number} Percentage
 */
BundleItem.prototype['Percentage'] = undefined;

/**
 * Fixed charge to be applied to item
 * @member {Number} FixedAmount
 */
BundleItem.prototype['FixedAmount'] = undefined;

/**
 * Fixed lines to be applied to item
 * @member {Number} Lines
 */
BundleItem.prototype['Lines'] = undefined;

/**
 * Fixed minutes to be applied to item
 * @member {Number} Minutes
 */
BundleItem.prototype['Minutes'] = undefined;

/**
 * Transaction id for item
 * @member {String} TransactionDesc
 */
BundleItem.prototype['TransactionDesc'] = undefined;

/**
 * Service id for item
 * @member {String} ServiceDesc
 */
BundleItem.prototype['ServiceDesc'] = undefined;






export default BundleItem;

