/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PCodeLookupRequest model module.
 * @module model/PCodeLookupRequest
 * @version v2
 */
class PCodeLookupRequest {
    /**
     * Constructs a new <code>PCodeLookupRequest</code>.
     * @alias module:model/PCodeLookupRequest
     */
    constructor() { 
        
        PCodeLookupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PCodeLookupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PCodeLookupRequest} obj Optional instance to populate.
     * @return {module:model/PCodeLookupRequest} The populated <code>PCodeLookupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PCodeLookupRequest();

            if (data.hasOwnProperty('CountryIso')) {
                obj['CountryIso'] = ApiClient.convertToType(data['CountryIso'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('County')) {
                obj['County'] = ApiClient.convertToType(data['County'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('ZipCode')) {
                obj['ZipCode'] = ApiClient.convertToType(data['ZipCode'], 'String');
            }
            if (data.hasOwnProperty('BestMatch')) {
                obj['BestMatch'] = ApiClient.convertToType(data['BestMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('LimitResults')) {
                obj['LimitResults'] = ApiClient.convertToType(data['LimitResults'], 'Number');
            }
            if (data.hasOwnProperty('NpaNxx')) {
                obj['NpaNxx'] = ApiClient.convertToType(data['NpaNxx'], 'String');
            }
            if (data.hasOwnProperty('Fips')) {
                obj['Fips'] = ApiClient.convertToType(data['Fips'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} CountryIso
 */
PCodeLookupRequest.prototype['CountryIso'] = undefined;

/**
 * @member {String} State
 */
PCodeLookupRequest.prototype['State'] = undefined;

/**
 * @member {String} County
 */
PCodeLookupRequest.prototype['County'] = undefined;

/**
 * @member {String} City
 */
PCodeLookupRequest.prototype['City'] = undefined;

/**
 * @member {String} ZipCode
 */
PCodeLookupRequest.prototype['ZipCode'] = undefined;

/**
 * @member {Boolean} BestMatch
 */
PCodeLookupRequest.prototype['BestMatch'] = undefined;

/**
 * @member {Number} LimitResults
 */
PCodeLookupRequest.prototype['LimitResults'] = undefined;

/**
 * @member {String} NpaNxx
 */
PCodeLookupRequest.prototype['NpaNxx'] = undefined;

/**
 * @member {String} Fips
 */
PCodeLookupRequest.prototype['Fips'] = undefined;






export default PCodeLookupRequest;

