/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GeoBatchDownloadResponse model module.
 * @module model/GeoBatchDownloadResponse
 * @version v2
 */
class GeoBatchDownloadResponse {
    /**
     * Constructs a new <code>GeoBatchDownloadResponse</code>.
     * Response body for Geo Batch Submit File API.
     * @alias module:model/GeoBatchDownloadResponse
     */
    constructor() { 
        
        GeoBatchDownloadResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeoBatchDownloadResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeoBatchDownloadResponse} obj Optional instance to populate.
     * @return {module:model/GeoBatchDownloadResponse} The populated <code>GeoBatchDownloadResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeoBatchDownloadResponse();

            if (data.hasOwnProperty('InputFile')) {
                obj['InputFile'] = ApiClient.convertToType(data['InputFile'], 'String');
            }
            if (data.hasOwnProperty('InputFileDownload')) {
                obj['InputFileDownload'] = ApiClient.convertToType(data['InputFileDownload'], 'String');
            }
            if (data.hasOwnProperty('OutputFile')) {
                obj['OutputFile'] = ApiClient.convertToType(data['OutputFile'], 'String');
            }
            if (data.hasOwnProperty('OutputFileDownload')) {
                obj['OutputFileDownload'] = ApiClient.convertToType(data['OutputFileDownload'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Input File Name.
 * @member {String} InputFile
 */
GeoBatchDownloadResponse.prototype['InputFile'] = undefined;

/**
 * Input File Download.
 * @member {String} InputFileDownload
 */
GeoBatchDownloadResponse.prototype['InputFileDownload'] = undefined;

/**
 * Output File Name.
 * @member {String} OutputFile
 */
GeoBatchDownloadResponse.prototype['OutputFile'] = undefined;

/**
 * Output File Name.
 * @member {String} OutputFileDownload
 */
GeoBatchDownloadResponse.prototype['OutputFileDownload'] = undefined;






export default GeoBatchDownloadResponse;

