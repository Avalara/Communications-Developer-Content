/**
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleConfig from './BundleConfig';
import Configuration from './Configuration';
import ExclusionConfig from './ExclusionConfig';
import NexusConfig from './NexusConfig';

/**
 * The SetTaxCalculationSettingRequest model module.
 * @module model/SetTaxCalculationSettingRequest
 * @version v2
 */
class SetTaxCalculationSettingRequest {
    /**
     * Constructs a new <code>SetTaxCalculationSettingRequest</code>.
     * Data for an invoice or quote line item.
     * @alias module:model/SetTaxCalculationSettingRequest
     */
    constructor() { 
        
        SetTaxCalculationSettingRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SetTaxCalculationSettingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetTaxCalculationSettingRequest} obj Optional instance to populate.
     * @return {module:model/SetTaxCalculationSettingRequest} The populated <code>SetTaxCalculationSettingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetTaxCalculationSettingRequest();

            if (data.hasOwnProperty('ProfileConfigId')) {
                obj['ProfileConfigId'] = ApiClient.convertToType(data['ProfileConfigId'], 'Number');
            }
            if (data.hasOwnProperty('LinkProfileIds')) {
                obj['LinkProfileIds'] = ApiClient.convertToType(data['LinkProfileIds'], ['Number']);
            }
            if (data.hasOwnProperty('UnlinkProfileIds')) {
                obj['UnlinkProfileIds'] = ApiClient.convertToType(data['UnlinkProfileIds'], ['Number']);
            }
            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'Number');
            }
            if (data.hasOwnProperty('Deactivate')) {
                obj['Deactivate'] = ApiClient.convertToType(data['Deactivate'], 'Boolean');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ReplaceExistingLinks')) {
                obj['ReplaceExistingLinks'] = ApiClient.convertToType(data['ReplaceExistingLinks'], 'Boolean');
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = ApiClient.convertToType(data['Settings'], Configuration);
            }
            if (data.hasOwnProperty('Exclusions')) {
                obj['Exclusions'] = ApiClient.convertToType(data['Exclusions'], [ExclusionConfig]);
            }
            if (data.hasOwnProperty('Bundles')) {
                obj['Bundles'] = ApiClient.convertToType(data['Bundles'], [BundleConfig]);
            }
            if (data.hasOwnProperty('Nexus')) {
                obj['Nexus'] = ApiClient.convertToType(data['Nexus'], [NexusConfig]);
            }
            if (data.hasOwnProperty('Overrides')) {
                obj['Overrides'] = ApiClient.convertToType(data['Overrides'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Profile configuration id to be used when updating an existing profile  Use null for new configuration
 * @member {Number} ProfileConfigId
 */
SetTaxCalculationSettingRequest.prototype['ProfileConfigId'] = undefined;

/**
 * Profile(s) to be added to configuration  Leave null to not change profiles associated with configuration settings
 * @member {Array.<Number>} LinkProfileIds
 */
SetTaxCalculationSettingRequest.prototype['LinkProfileIds'] = undefined;

/**
 * Profile(s) to be added to configuration  Leave null to not change profiles associated with configuration settings
 * @member {Array.<Number>} UnlinkProfileIds
 */
SetTaxCalculationSettingRequest.prototype['UnlinkProfileIds'] = undefined;

/**
 * Client id associated with profile(s) to be fetched  Null value will use client id submitting the request or default client id as applicable
 * @member {Number} ClientId
 */
SetTaxCalculationSettingRequest.prototype['ClientId'] = undefined;

/**
 * True = Deactivate the configuration  Requires ProfileConfigId to be provided and valid.  Automatically removes any profile mappings associated with the configuration.
 * @member {Boolean} Deactivate
 */
SetTaxCalculationSettingRequest.prototype['Deactivate'] = undefined;

/**
 * Description to be applied to requested configuration
 * @member {String} Description
 */
SetTaxCalculationSettingRequest.prototype['Description'] = undefined;

/**
 * Flag indicating existing configuration links to profile should be replaced  This only applies when one or more profiles have been specified to be linked.   - If true, mapping conflicts will be resolved by removing other links.   - If false, mapping conflicts will cause the request to fail with an error returned.
 * @member {Boolean} ReplaceExistingLinks
 */
SetTaxCalculationSettingRequest.prototype['ReplaceExistingLinks'] = undefined;

/**
 * Configuration settings (required)
 * @member {module:model/Configuration} Settings
 */
SetTaxCalculationSettingRequest.prototype['Settings'] = undefined;

/**
 * List of exclusions
 * @member {Array.<module:model/ExclusionConfig>} Exclusions
 */
SetTaxCalculationSettingRequest.prototype['Exclusions'] = undefined;

/**
 * List of bundles
 * @member {Array.<module:model/BundleConfig>} Bundles
 */
SetTaxCalculationSettingRequest.prototype['Bundles'] = undefined;

/**
 * List of nexus
 * @member {Array.<module:model/NexusConfig>} Nexus
 */
SetTaxCalculationSettingRequest.prototype['Nexus'] = undefined;

/**
 * Overrides
 * @member {Array.<String>} Overrides
 */
SetTaxCalculationSettingRequest.prototype['Overrides'] = undefined;






export default SetTaxCalculationSettingRequest;

