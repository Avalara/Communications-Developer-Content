/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Tax data for summarized invoice taxes.
 */
@ApiModel(description = "Tax data for summarized invoice taxes.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-10T00:57:00.867-04:00[America/New_York]")
public class SummarizedTax {
  public static final String SERIALIZED_NAME_MAX = "max";
  @SerializedName(SERIALIZED_NAME_MAX)
  private Double max;

  public static final String SERIALIZED_NAME_MIN = "min";
  @SerializedName(SERIALIZED_NAME_MIN)
  private Double min;

  public static final String SERIALIZED_NAME_TCHG = "tchg";
  @SerializedName(SERIALIZED_NAME_TCHG)
  private Double tchg;

  public static final String SERIALIZED_NAME_CALC = "calc";
  @SerializedName(SERIALIZED_NAME_CALC)
  private Integer calc;

  public static final String SERIALIZED_NAME_CAT = "cat";
  @SerializedName(SERIALIZED_NAME_CAT)
  private String cat;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EXM = "exm";
  @SerializedName(SERIALIZED_NAME_EXM)
  private Double exm;

  public static final String SERIALIZED_NAME_LNS = "lns";
  @SerializedName(SERIALIZED_NAME_LNS)
  private Integer lns;

  public static final String SERIALIZED_NAME_PCD = "pcd";
  @SerializedName(SERIALIZED_NAME_PCD)
  private Integer pcd;

  public static final String SERIALIZED_NAME_TAXPCD = "taxpcd";
  @SerializedName(SERIALIZED_NAME_TAXPCD)
  private Integer taxpcd;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private Double rate;

  public static final String SERIALIZED_NAME_SUR = "sur";
  @SerializedName(SERIALIZED_NAME_SUR)
  private Boolean sur;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Double tax;

  public static final String SERIALIZED_NAME_LVL = "lvl";
  @SerializedName(SERIALIZED_NAME_LVL)
  private Integer lvl;

  public static final String SERIALIZED_NAME_TID = "tid";
  @SerializedName(SERIALIZED_NAME_TID)
  private Integer tid;

  public static final String SERIALIZED_NAME_USEXM = "usexm";
  @SerializedName(SERIALIZED_NAME_USEXM)
  private Boolean usexm;

  public static final String SERIALIZED_NAME_NOTAX = "notax";
  @SerializedName(SERIALIZED_NAME_NOTAX)
  private Boolean notax;

  public static final String SERIALIZED_NAME_TRANS = "trans";
  @SerializedName(SERIALIZED_NAME_TRANS)
  private Integer trans;

  public static final String SERIALIZED_NAME_SVC = "svc";
  @SerializedName(SERIALIZED_NAME_SVC)
  private Integer svc;

  public static final String SERIALIZED_NAME_CHG = "chg";
  @SerializedName(SERIALIZED_NAME_CHG)
  private Double chg;


  public SummarizedTax max(Double max) {
    
    this.max = max;
    return this;
  }

   /**
   * Maximum base for tax bracket.
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum base for tax bracket.")

  public Double getMax() {
    return max;
  }


  public void setMax(Double max) {
    this.max = max;
  }


  public SummarizedTax min(Double min) {
    
    this.min = min;
    return this;
  }

   /**
   * Minimum base for tax bracket.
   * @return min
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum base for tax bracket.")

  public Double getMin() {
    return min;
  }


  public void setMin(Double min) {
    this.min = min;
  }


  public SummarizedTax tchg(Double tchg) {
    
    this.tchg = tchg;
    return this;
  }

   /**
   * Total charge amount.
   * @return tchg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total charge amount.")

  public Double getTchg() {
    return tchg;
  }


  public void setTchg(Double tchg) {
    this.tchg = tchg;
  }


  public SummarizedTax calc(Integer calc) {
    
    this.calc = calc;
    return this;
  }

   /**
   * Calculation type.
   * @return calc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Calculation type.")

  public Integer getCalc() {
    return calc;
  }


  public void setCalc(Integer calc) {
    this.calc = calc;
  }


  public SummarizedTax cat(String cat) {
    
    this.cat = cat;
    return this;
  }

   /**
   * Tax category name.
   * @return cat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax category name.")

  public String getCat() {
    return cat;
  }


  public void setCat(String cat) {
    this.cat = cat;
  }


  public SummarizedTax cid(Integer cid) {
    
    this.cid = cid;
    return this;
  }

   /**
   * Tax category ID.
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax category ID.")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    this.cid = cid;
  }


  public SummarizedTax name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Tax name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SummarizedTax exm(Double exm) {
    
    this.exm = exm;
    return this;
  }

   /**
   * Exempt sale amount.
   * @return exm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exempt sale amount.")

  public Double getExm() {
    return exm;
  }


  public void setExm(Double exm) {
    this.exm = exm;
  }


  public SummarizedTax lns(Integer lns) {
    
    this.lns = lns;
    return this;
  }

   /**
   * Lines.
   * @return lns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lines.")

  public Integer getLns() {
    return lns;
  }


  public void setLns(Integer lns) {
    this.lns = lns;
  }


  public SummarizedTax pcd(Integer pcd) {
    
    this.pcd = pcd;
    return this;
  }

   /**
   * PCode for reporting jurisdiction.
   * @return pcd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PCode for reporting jurisdiction.")

  public Integer getPcd() {
    return pcd;
  }


  public void setPcd(Integer pcd) {
    this.pcd = pcd;
  }


  public SummarizedTax taxpcd(Integer taxpcd) {
    
    this.taxpcd = taxpcd;
    return this;
  }

   /**
   * PCode for taxing jurisdiction.  Only returned if return extended tax data flag is true
   * @return taxpcd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PCode for taxing jurisdiction.  Only returned if return extended tax data flag is true")

  public Integer getTaxpcd() {
    return taxpcd;
  }


  public void setTaxpcd(Integer taxpcd) {
    this.taxpcd = taxpcd;
  }


  public SummarizedTax rate(Double rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Tax rate.
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax rate.")

  public Double getRate() {
    return rate;
  }


  public void setRate(Double rate) {
    this.rate = rate;
  }


  public SummarizedTax sur(Boolean sur) {
    
    this.sur = sur;
    return this;
  }

   /**
   * Indicates if this tax is a surcharge.
   * @return sur
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this tax is a surcharge.")

  public Boolean getSur() {
    return sur;
  }


  public void setSur(Boolean sur) {
    this.sur = sur;
  }


  public SummarizedTax tax(Double tax) {
    
    this.tax = tax;
    return this;
  }

   /**
   * Tax amount.
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax amount.")

  public Double getTax() {
    return tax;
  }


  public void setTax(Double tax) {
    this.tax = tax;
  }


  public SummarizedTax lvl(Integer lvl) {
    
    this.lvl = lvl;
    return this;
  }

   /**
   * Tax level ID.
   * @return lvl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax level ID.")

  public Integer getLvl() {
    return lvl;
  }


  public void setLvl(Integer lvl) {
    this.lvl = lvl;
  }


  public SummarizedTax tid(Integer tid) {
    
    this.tid = tid;
    return this;
  }

   /**
   * Tax type ID.
   * @return tid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax type ID.")

  public Integer getTid() {
    return tid;
  }


  public void setTid(Integer tid) {
    this.tid = tid;
  }


  public SummarizedTax usexm(Boolean usexm) {
    
    this.usexm = usexm;
    return this;
  }

   /**
   * Flag indicating if tax was user exempted  Only returned if return extended tax data flag is true
   * @return usexm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating if tax was user exempted  Only returned if return extended tax data flag is true")

  public Boolean getUsexm() {
    return usexm;
  }


  public void setUsexm(Boolean usexm) {
    this.usexm = usexm;
  }


  public SummarizedTax notax(Boolean notax) {
    
    this.notax = notax;
    return this;
  }

   /**
   * Flag indicating the item is a no tax entry  There were no taxes generated, this entry is to convey back the taxing jurisdiction that was used in the response  Only returned if return extended tax data flag is true
   * @return notax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating the item is a no tax entry  There were no taxes generated, this entry is to convey back the taxing jurisdiction that was used in the response  Only returned if return extended tax data flag is true")

  public Boolean getNotax() {
    return notax;
  }


  public void setNotax(Boolean notax) {
    this.notax = notax;
  }


  public SummarizedTax trans(Integer trans) {
    
    this.trans = trans;
    return this;
  }

   /**
   * Transaction type used to calculate tax  For bundles will be specific bundled item transaction type  Only returned if return extended tax data flag is true
   * @return trans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transaction type used to calculate tax  For bundles will be specific bundled item transaction type  Only returned if return extended tax data flag is true")

  public Integer getTrans() {
    return trans;
  }


  public void setTrans(Integer trans) {
    this.trans = trans;
  }


  public SummarizedTax svc(Integer svc) {
    
    this.svc = svc;
    return this;
  }

   /**
   * Service type used to calculate tax  For bundles will be specific bundled item service type  Only returned if return extended tax data flag is true
   * @return svc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Service type used to calculate tax  For bundles will be specific bundled item service type  Only returned if return extended tax data flag is true")

  public Integer getSvc() {
    return svc;
  }


  public void setSvc(Integer svc) {
    this.svc = svc;
  }


  public SummarizedTax chg(Double chg) {
    
    this.chg = chg;
    return this;
  }

   /**
   * Charge used to calculate tax  For bundles will be the percentage of charge applied to bundled item  For tax inclusive calls will be the calculated charge  Only returned if return extended tax data flag is true
   * @return chg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Charge used to calculate tax  For bundles will be the percentage of charge applied to bundled item  For tax inclusive calls will be the calculated charge  Only returned if return extended tax data flag is true")

  public Double getChg() {
    return chg;
  }


  public void setChg(Double chg) {
    this.chg = chg;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SummarizedTax summarizedTax = (SummarizedTax) o;
    return Objects.equals(this.max, summarizedTax.max) &&
        Objects.equals(this.min, summarizedTax.min) &&
        Objects.equals(this.tchg, summarizedTax.tchg) &&
        Objects.equals(this.calc, summarizedTax.calc) &&
        Objects.equals(this.cat, summarizedTax.cat) &&
        Objects.equals(this.cid, summarizedTax.cid) &&
        Objects.equals(this.name, summarizedTax.name) &&
        Objects.equals(this.exm, summarizedTax.exm) &&
        Objects.equals(this.lns, summarizedTax.lns) &&
        Objects.equals(this.pcd, summarizedTax.pcd) &&
        Objects.equals(this.taxpcd, summarizedTax.taxpcd) &&
        Objects.equals(this.rate, summarizedTax.rate) &&
        Objects.equals(this.sur, summarizedTax.sur) &&
        Objects.equals(this.tax, summarizedTax.tax) &&
        Objects.equals(this.lvl, summarizedTax.lvl) &&
        Objects.equals(this.tid, summarizedTax.tid) &&
        Objects.equals(this.usexm, summarizedTax.usexm) &&
        Objects.equals(this.notax, summarizedTax.notax) &&
        Objects.equals(this.trans, summarizedTax.trans) &&
        Objects.equals(this.svc, summarizedTax.svc) &&
        Objects.equals(this.chg, summarizedTax.chg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(max, min, tchg, calc, cat, cid, name, exm, lns, pcd, taxpcd, rate, sur, tax, lvl, tid, usexm, notax, trans, svc, chg);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SummarizedTax {\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    tchg: ").append(toIndentedString(tchg)).append("\n");
    sb.append("    calc: ").append(toIndentedString(calc)).append("\n");
    sb.append("    cat: ").append(toIndentedString(cat)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    exm: ").append(toIndentedString(exm)).append("\n");
    sb.append("    lns: ").append(toIndentedString(lns)).append("\n");
    sb.append("    pcd: ").append(toIndentedString(pcd)).append("\n");
    sb.append("    taxpcd: ").append(toIndentedString(taxpcd)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    sur: ").append(toIndentedString(sur)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    lvl: ").append(toIndentedString(lvl)).append("\n");
    sb.append("    tid: ").append(toIndentedString(tid)).append("\n");
    sb.append("    usexm: ").append(toIndentedString(usexm)).append("\n");
    sb.append("    notax: ").append(toIndentedString(notax)).append("\n");
    sb.append("    trans: ").append(toIndentedString(trans)).append("\n");
    sb.append("    svc: ").append(toIndentedString(svc)).append("\n");
    sb.append("    chg: ").append(toIndentedString(chg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

