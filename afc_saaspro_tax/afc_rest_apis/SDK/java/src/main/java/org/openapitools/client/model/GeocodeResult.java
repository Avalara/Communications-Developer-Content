/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Address;

/**
 * Results for geocoding request.
 */
@ApiModel(description = "Results for geocoding request.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-10T00:57:00.867-04:00[America/New_York]")
public class GeocodeResult {
  public static final String SERIALIZED_NAME_REF = "ref";
  @SerializedName(SERIALIZED_NAME_REF)
  private String ref;

  public static final String SERIALIZED_NAME_CASS = "cass";
  @SerializedName(SERIALIZED_NAME_CASS)
  private Address cass;

  public static final String SERIALIZED_NAME_C_BLK = "cBlk";
  @SerializedName(SERIALIZED_NAME_C_BLK)
  private Integer cBlk;

  public static final String SERIALIZED_NAME_C_TRC = "cTrc";
  @SerializedName(SERIALIZED_NAME_C_TRC)
  private Integer cTrc;

  public static final String SERIALIZED_NAME_CNTY = "cnty";
  @SerializedName(SERIALIZED_NAME_CNTY)
  private String cnty;

  public static final String SERIALIZED_NAME_FEAT = "feat";
  @SerializedName(SERIALIZED_NAME_FEAT)
  private Integer feat;

  public static final String SERIALIZED_NAME_FIPS = "fips";
  @SerializedName(SERIALIZED_NAME_FIPS)
  private String fips;

  public static final String SERIALIZED_NAME_INC = "inc";
  @SerializedName(SERIALIZED_NAME_INC)
  private Boolean inc;

  public static final String SERIALIZED_NAME_JUR = "jur";
  @SerializedName(SERIALIZED_NAME_JUR)
  private String jur;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LONG = "long";
  @SerializedName(SERIALIZED_NAME_LONG)
  private Double _long;

  public static final String SERIALIZED_NAME_PCD = "pcd";
  @SerializedName(SERIALIZED_NAME_PCD)
  private Integer pcd;

  public static final String SERIALIZED_NAME_SCR = "scr";
  @SerializedName(SERIALIZED_NAME_SCR)
  private Double scr;

  public static final String SERIALIZED_NAME_ERR = "err";
  @SerializedName(SERIALIZED_NAME_ERR)
  private String err;


  public GeocodeResult ref(String ref) {
    
    this.ref = ref;
    return this;
  }

   /**
   * Reference Id from geocode request input.
   * @return ref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference Id from geocode request input.")

  public String getRef() {
    return ref;
  }


  public void setRef(String ref) {
    this.ref = ref;
  }


  public GeocodeResult cass(Address cass) {
    
    this.cass = cass;
    return this;
  }

   /**
   * Get cass
   * @return cass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Address getCass() {
    return cass;
  }


  public void setCass(Address cass) {
    this.cass = cass;
  }


  public GeocodeResult cBlk(Integer cBlk) {
    
    this.cBlk = cBlk;
    return this;
  }

   /**
   * Census block.
   * @return cBlk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Census block.")

  public Integer getcBlk() {
    return cBlk;
  }


  public void setcBlk(Integer cBlk) {
    this.cBlk = cBlk;
  }


  public GeocodeResult cTrc(Integer cTrc) {
    
    this.cTrc = cTrc;
    return this;
  }

   /**
   * Census tract.
   * @return cTrc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Census tract.")

  public Integer getcTrc() {
    return cTrc;
  }


  public void setcTrc(Integer cTrc) {
    this.cTrc = cTrc;
  }


  public GeocodeResult cnty(String cnty) {
    
    this.cnty = cnty;
    return this;
  }

   /**
   * County
   * @return cnty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "County")

  public String getCnty() {
    return cnty;
  }


  public void setCnty(String cnty) {
    this.cnty = cnty;
  }


  public GeocodeResult feat(Integer feat) {
    
    this.feat = feat;
    return this;
  }

   /**
   * Feature ID.
   * @return feat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Feature ID.")

  public Integer getFeat() {
    return feat;
  }


  public void setFeat(Integer feat) {
    this.feat = feat;
  }


  public GeocodeResult fips(String fips) {
    
    this.fips = fips;
    return this;
  }

   /**
   * FIPS Code.
   * @return fips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FIPS Code.")

  public String getFips() {
    return fips;
  }


  public void setFips(String fips) {
    this.fips = fips;
  }


  public GeocodeResult inc(Boolean inc) {
    
    this.inc = inc;
    return this;
  }

   /**
   * Indicates if address is within city limits.
   * @return inc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if address is within city limits.")

  public Boolean getInc() {
    return inc;
  }


  public void setInc(Boolean inc) {
    this.inc = inc;
  }


  public GeocodeResult jur(String jur) {
    
    this.jur = jur;
    return this;
  }

   /**
   * Tax jurisdiction name.
   * @return jur
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax jurisdiction name.")

  public String getJur() {
    return jur;
  }


  public void setJur(String jur) {
    this.jur = jur;
  }


  public GeocodeResult lat(Double lat) {
    
    this.lat = lat;
    return this;
  }

   /**
   * Latitude.
   * @return lat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Latitude.")

  public Double getLat() {
    return lat;
  }


  public void setLat(Double lat) {
    this.lat = lat;
  }


  public GeocodeResult _long(Double _long) {
    
    this._long = _long;
    return this;
  }

   /**
   * Longitude.
   * @return _long
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Longitude.")

  public Double getLong() {
    return _long;
  }


  public void setLong(Double _long) {
    this._long = _long;
  }


  public GeocodeResult pcd(Integer pcd) {
    
    this.pcd = pcd;
    return this;
  }

   /**
   * PCode for tax jurisdiction.
   * @return pcd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PCode for tax jurisdiction.")

  public Integer getPcd() {
    return pcd;
  }


  public void setPcd(Integer pcd) {
    this.pcd = pcd;
  }


  public GeocodeResult scr(Double scr) {
    
    this.scr = scr;
    return this;
  }

   /**
   * Score indicating accuracy of address match in mapping database.
   * @return scr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Score indicating accuracy of address match in mapping database.")

  public Double getScr() {
    return scr;
  }


  public void setScr(Double scr) {
    this.scr = scr;
  }


  public GeocodeResult err(String err) {
    
    this.err = err;
    return this;
  }

   /**
   * Error message.
   * @return err
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Error message.")

  public String getErr() {
    return err;
  }


  public void setErr(String err) {
    this.err = err;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeocodeResult geocodeResult = (GeocodeResult) o;
    return Objects.equals(this.ref, geocodeResult.ref) &&
        Objects.equals(this.cass, geocodeResult.cass) &&
        Objects.equals(this.cBlk, geocodeResult.cBlk) &&
        Objects.equals(this.cTrc, geocodeResult.cTrc) &&
        Objects.equals(this.cnty, geocodeResult.cnty) &&
        Objects.equals(this.feat, geocodeResult.feat) &&
        Objects.equals(this.fips, geocodeResult.fips) &&
        Objects.equals(this.inc, geocodeResult.inc) &&
        Objects.equals(this.jur, geocodeResult.jur) &&
        Objects.equals(this.lat, geocodeResult.lat) &&
        Objects.equals(this._long, geocodeResult._long) &&
        Objects.equals(this.pcd, geocodeResult.pcd) &&
        Objects.equals(this.scr, geocodeResult.scr) &&
        Objects.equals(this.err, geocodeResult.err);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ref, cass, cBlk, cTrc, cnty, feat, fips, inc, jur, lat, _long, pcd, scr, err);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeocodeResult {\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    cass: ").append(toIndentedString(cass)).append("\n");
    sb.append("    cBlk: ").append(toIndentedString(cBlk)).append("\n");
    sb.append("    cTrc: ").append(toIndentedString(cTrc)).append("\n");
    sb.append("    cnty: ").append(toIndentedString(cnty)).append("\n");
    sb.append("    feat: ").append(toIndentedString(feat)).append("\n");
    sb.append("    fips: ").append(toIndentedString(fips)).append("\n");
    sb.append("    inc: ").append(toIndentedString(inc)).append("\n");
    sb.append("    jur: ").append(toIndentedString(jur)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    pcd: ").append(toIndentedString(pcd)).append("\n");
    sb.append("    scr: ").append(toIndentedString(scr)).append("\n");
    sb.append("    err: ").append(toIndentedString(err)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

