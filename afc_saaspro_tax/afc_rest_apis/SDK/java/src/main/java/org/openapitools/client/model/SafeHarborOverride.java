/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Safe harbor rate override for a USF tax type.
 */
@ApiModel(description = "Safe harbor rate override for a USF tax type.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-04T16:10:49.104-04:00[America/New_York]")
public class SafeHarborOverride {
  public static final String SERIALIZED_NAME_SH = "sh";
  @SerializedName(SERIALIZED_NAME_SH)
  private Integer sh;

  public static final String SERIALIZED_NAME_OLD = "old";
  @SerializedName(SERIALIZED_NAME_OLD)
  private Double old;

  public static final String SERIALIZED_NAME_NEW = "new";
  @SerializedName(SERIALIZED_NAME_NEW)
  private Double _new;


  public SafeHarborOverride sh(Integer sh) {
    
    this.sh = sh;
    return this;
  }

   /**
   * Safe harbor type (1 &#x3D; Cellular, 2 &#x3D; VoIp, 4 &#x3D; Paging).
   * @return sh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Safe harbor type (1 = Cellular, 2 = VoIp, 4 = Paging).")

  public Integer getSh() {
    return sh;
  }


  public void setSh(Integer sh) {
    this.sh = sh;
  }


  public SafeHarborOverride old(Double old) {
    
    this.old = old;
    return this;
  }

   /**
   * Original Federal TAM value to override.
   * @return old
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original Federal TAM value to override.")

  public Double getOld() {
    return old;
  }


  public void setOld(Double old) {
    this.old = old;
  }


  public SafeHarborOverride _new(Double _new) {
    
    this._new = _new;
    return this;
  }

   /**
   * New TAM value that will replace the original TAM value.
   * @return _new
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "New TAM value that will replace the original TAM value.")

  public Double getNew() {
    return _new;
  }


  public void setNew(Double _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SafeHarborOverride safeHarborOverride = (SafeHarborOverride) o;
    return Objects.equals(this.sh, safeHarborOverride.sh) &&
        Objects.equals(this.old, safeHarborOverride.old) &&
        Objects.equals(this._new, safeHarborOverride._new);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(sh, old, _new);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SafeHarborOverride {\n");
    sb.append("    sh: ").append(toIndentedString(sh)).append("\n");
    sb.append("    old: ").append(toIndentedString(old)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

