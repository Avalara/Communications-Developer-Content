/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.GeoBatchDownloadResponse;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * Individual File Status For Geo Batch result
 */
@ApiModel(description = "Individual File Status For Geo Batch result")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-04T16:10:49.104-04:00[America/New_York]")
public class GeoBatchStatus {
  public static final String SERIALIZED_NAME_PROCESS_ID = "ProcessId";
  @SerializedName(SERIALIZED_NAME_PROCESS_ID)
  private Integer processId;

  public static final String SERIALIZED_NAME_REQUEST_DATE = "RequestDate";
  @SerializedName(SERIALIZED_NAME_REQUEST_DATE)
  private OffsetDateTime requestDate;

  public static final String SERIALIZED_NAME_PROCESSING_START = "ProcessingStart";
  @SerializedName(SERIALIZED_NAME_PROCESSING_START)
  private OffsetDateTime processingStart;

  public static final String SERIALIZED_NAME_PROCESSING_END = "ProcessingEnd";
  @SerializedName(SERIALIZED_NAME_PROCESSING_END)
  private OffsetDateTime processingEnd;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DOWNLOADS = "Downloads";
  @SerializedName(SERIALIZED_NAME_DOWNLOADS)
  private GeoBatchDownloadResponse downloads;

  public static final String SERIALIZED_NAME_ERROR = "Error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private List<Error> error = null;


  public GeoBatchStatus processId(Integer processId) {
    
    this.processId = processId;
    return this;
  }

   /**
   * Process ID for Batch file.
   * @return processId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Process ID for Batch file.")

  public Integer getProcessId() {
    return processId;
  }


  public void setProcessId(Integer processId) {
    this.processId = processId;
  }


  public GeoBatchStatus requestDate(OffsetDateTime requestDate) {
    
    this.requestDate = requestDate;
    return this;
  }

   /**
   * Request Date.
   * @return requestDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Request Date.")

  public OffsetDateTime getRequestDate() {
    return requestDate;
  }


  public void setRequestDate(OffsetDateTime requestDate) {
    this.requestDate = requestDate;
  }


  public GeoBatchStatus processingStart(OffsetDateTime processingStart) {
    
    this.processingStart = processingStart;
    return this;
  }

   /**
   * Processing Start.
   * @return processingStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Processing Start.")

  public OffsetDateTime getProcessingStart() {
    return processingStart;
  }


  public void setProcessingStart(OffsetDateTime processingStart) {
    this.processingStart = processingStart;
  }


  public GeoBatchStatus processingEnd(OffsetDateTime processingEnd) {
    
    this.processingEnd = processingEnd;
    return this;
  }

   /**
   * Processing End.
   * @return processingEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Processing End.")

  public OffsetDateTime getProcessingEnd() {
    return processingEnd;
  }


  public void setProcessingEnd(OffsetDateTime processingEnd) {
    this.processingEnd = processingEnd;
  }


  public GeoBatchStatus status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status Of Batch File.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status Of Batch File.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public GeoBatchStatus downloads(GeoBatchDownloadResponse downloads) {
    
    this.downloads = downloads;
    return this;
  }

   /**
   * Get downloads
   * @return downloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GeoBatchDownloadResponse getDownloads() {
    return downloads;
  }


  public void setDownloads(GeoBatchDownloadResponse downloads) {
    this.downloads = downloads;
  }


  public GeoBatchStatus error(List<Error> error) {
    
    this.error = error;
    return this;
  }

  public GeoBatchStatus addErrorItem(Error errorItem) {
    if (this.error == null) {
      this.error = new ArrayList<Error>();
    }
    this.error.add(errorItem);
    return this;
  }

   /**
   * Error information.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Error information.")

  public List<Error> getError() {
    return error;
  }


  public void setError(List<Error> error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeoBatchStatus geoBatchStatus = (GeoBatchStatus) o;
    return Objects.equals(this.processId, geoBatchStatus.processId) &&
        Objects.equals(this.requestDate, geoBatchStatus.requestDate) &&
        Objects.equals(this.processingStart, geoBatchStatus.processingStart) &&
        Objects.equals(this.processingEnd, geoBatchStatus.processingEnd) &&
        Objects.equals(this.status, geoBatchStatus.status) &&
        Objects.equals(this.downloads, geoBatchStatus.downloads) &&
        Objects.equals(this.error, geoBatchStatus.error);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(processId, requestDate, processingStart, processingEnd, status, downloads, error);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeoBatchStatus {\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    requestDate: ").append(toIndentedString(requestDate)).append("\n");
    sb.append("    processingStart: ").append(toIndentedString(processingStart)).append("\n");
    sb.append("    processingEnd: ").append(toIndentedString(processingEnd)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

