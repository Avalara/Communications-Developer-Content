/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Response body for Geo Batch Submit File API.
 */
@ApiModel(description = "Response body for Geo Batch Submit File API.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-04T16:10:49.104-04:00[America/New_York]")
public class GeoBatchDownloadResponse {
  public static final String SERIALIZED_NAME_INPUT_FILE = "InputFile";
  @SerializedName(SERIALIZED_NAME_INPUT_FILE)
  private String inputFile;

  public static final String SERIALIZED_NAME_INPUT_FILE_DOWNLOAD = "InputFileDownload";
  @SerializedName(SERIALIZED_NAME_INPUT_FILE_DOWNLOAD)
  private String inputFileDownload;

  public static final String SERIALIZED_NAME_OUTPUT_FILE = "OutputFile";
  @SerializedName(SERIALIZED_NAME_OUTPUT_FILE)
  private String outputFile;

  public static final String SERIALIZED_NAME_OUTPUT_FILE_DOWNLOAD = "OutputFileDownload";
  @SerializedName(SERIALIZED_NAME_OUTPUT_FILE_DOWNLOAD)
  private String outputFileDownload;


  public GeoBatchDownloadResponse inputFile(String inputFile) {
    
    this.inputFile = inputFile;
    return this;
  }

   /**
   * Input File Name.
   * @return inputFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Input File Name.")

  public String getInputFile() {
    return inputFile;
  }


  public void setInputFile(String inputFile) {
    this.inputFile = inputFile;
  }


  public GeoBatchDownloadResponse inputFileDownload(String inputFileDownload) {
    
    this.inputFileDownload = inputFileDownload;
    return this;
  }

   /**
   * Input File Download.
   * @return inputFileDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Input File Download.")

  public String getInputFileDownload() {
    return inputFileDownload;
  }


  public void setInputFileDownload(String inputFileDownload) {
    this.inputFileDownload = inputFileDownload;
  }


  public GeoBatchDownloadResponse outputFile(String outputFile) {
    
    this.outputFile = outputFile;
    return this;
  }

   /**
   * Output File Name.
   * @return outputFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Output File Name.")

  public String getOutputFile() {
    return outputFile;
  }


  public void setOutputFile(String outputFile) {
    this.outputFile = outputFile;
  }


  public GeoBatchDownloadResponse outputFileDownload(String outputFileDownload) {
    
    this.outputFileDownload = outputFileDownload;
    return this;
  }

   /**
   * Output File Name.
   * @return outputFileDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Output File Name.")

  public String getOutputFileDownload() {
    return outputFileDownload;
  }


  public void setOutputFileDownload(String outputFileDownload) {
    this.outputFileDownload = outputFileDownload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeoBatchDownloadResponse geoBatchDownloadResponse = (GeoBatchDownloadResponse) o;
    return Objects.equals(this.inputFile, geoBatchDownloadResponse.inputFile) &&
        Objects.equals(this.inputFileDownload, geoBatchDownloadResponse.inputFileDownload) &&
        Objects.equals(this.outputFile, geoBatchDownloadResponse.outputFile) &&
        Objects.equals(this.outputFileDownload, geoBatchDownloadResponse.outputFileDownload);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputFile, inputFileDownload, outputFile, outputFileDownload);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeoBatchDownloadResponse {\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    inputFileDownload: ").append(toIndentedString(inputFileDownload)).append("\n");
    sb.append("    outputFile: ").append(toIndentedString(outputFile)).append("\n");
    sb.append("    outputFileDownload: ").append(toIndentedString(outputFileDownload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

