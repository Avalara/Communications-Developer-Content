/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Container class for json properties associated with v2.CalcTaxes request configuration options
 */
@ApiModel(description = "Container class for json properties associated with v2.CalcTaxes request configuration options")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-10T00:57:00.867-04:00[America/New_York]")
public class RequestConfig {
  public static final String SERIALIZED_NAME_RETNB = "retnb";
  @SerializedName(SERIALIZED_NAME_RETNB)
  private Boolean retnb;

  public static final String SERIALIZED_NAME_RETEXT = "retext";
  @SerializedName(SERIALIZED_NAME_RETEXT)
  private Boolean retext;

  public static final String SERIALIZED_NAME_INCRF = "incrf";
  @SerializedName(SERIALIZED_NAME_INCRF)
  private Boolean incrf;


  public RequestConfig retnb(Boolean retnb) {
    
    this.retnb = retnb;
    return this;
  }

   /**
   * Flag indicating non-billable taxes should be returned.  If set, will override account setting  Default if not provided is account setting value
   * @return retnb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating non-billable taxes should be returned.  If set, will override account setting  Default if not provided is account setting value")

  public Boolean getRetnb() {
    return retnb;
  }


  public void setRetnb(Boolean retnb) {
    this.retnb = retnb;
  }


  public RequestConfig retext(Boolean retext) {
    
    this.retext = retext;
    return this;
  }

   /**
   * Flag indicating extended tax information should be returned.  Reference online documentation for more details
   * @return retext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating extended tax information should be returned.  Reference online documentation for more details")

  public Boolean getRetext() {
    return retext;
  }


  public void setRetext(Boolean retext) {
    this.retext = retext;
  }


  public RequestConfig incrf(Boolean incrf) {
    
    this.incrf = incrf;
    return this;
  }

   /**
   * Flag indicating reporting information should be returned.  Reference online documentation for more details
   * @return incrf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating reporting information should be returned.  Reference online documentation for more details")

  public Boolean getIncrf() {
    return incrf;
  }


  public void setIncrf(Boolean incrf) {
    this.incrf = incrf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestConfig requestConfig = (RequestConfig) o;
    return Objects.equals(this.retnb, requestConfig.retnb) &&
        Objects.equals(this.retext, requestConfig.retext) &&
        Objects.equals(this.incrf, requestConfig.incrf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(retnb, retext, incrf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestConfig {\n");
    sb.append("    retnb: ").append(toIndentedString(retnb)).append("\n");
    sb.append("    retext: ").append(toIndentedString(retext)).append("\n");
    sb.append("    incrf: ").append(toIndentedString(incrf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

