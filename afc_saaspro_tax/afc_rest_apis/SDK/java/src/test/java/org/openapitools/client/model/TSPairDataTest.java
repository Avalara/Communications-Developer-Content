/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TsPairData
 */
public class TsPairDataTest {
    private final TsPairData model = new TsPairData();

    /**
     * Model tests for TsPairData
     */
    @Test
    public void testTsPairData() {
        // TODO: test TsPairData
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'serviceType'
     */
    @Test
    public void serviceTypeTest() {
        // TODO: test serviceType
    }

    /**
     * Test the property 'marketType'
     */
    @Test
    public void marketTypeTest() {
        // TODO: test marketType
    }

    /**
     * Test the property 'interfaceType'
     */
    @Test
    public void interfaceTypeTest() {
        // TODO: test interfaceType
    }

    /**
     * Test the property 'inputType'
     */
    @Test
    public void inputTypeTest() {
        // TODO: test inputType
    }

    /**
     * Test the property 'isBundle'
     */
    @Test
    public void isBundleTest() {
        // TODO: test isBundle
    }

    /**
     * Test the property 'transactionDescription'
     */
    @Test
    public void transactionDescriptionTest() {
        // TODO: test transactionDescription
    }

    /**
     * Test the property 'serviceDescription'
     */
    @Test
    public void serviceDescriptionTest() {
        // TODO: test serviceDescription
    }

    /**
     * Test the property 'tsPairDescription'
     */
    @Test
    public void tsPairDescriptionTest() {
        // TODO: test tsPairDescription
    }

}
