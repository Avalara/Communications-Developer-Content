/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PCodeLookupRequest
 */
public class PCodeLookupRequestTest {
    private final PCodeLookupRequest model = new PCodeLookupRequest();

    /**
     * Model tests for PCodeLookupRequest
     */
    @Test
    public void testPCodeLookupRequest() {
        // TODO: test PCodeLookupRequest
    }

    /**
     * Test the property 'countryIso'
     */
    @Test
    public void countryIsoTest() {
        // TODO: test countryIso
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'county'
     */
    @Test
    public void countyTest() {
        // TODO: test county
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'zipCode'
     */
    @Test
    public void zipCodeTest() {
        // TODO: test zipCode
    }

    /**
     * Test the property 'bestMatch'
     */
    @Test
    public void bestMatchTest() {
        // TODO: test bestMatch
    }

    /**
     * Test the property 'limitResults'
     */
    @Test
    public void limitResultsTest() {
        // TODO: test limitResults
    }

    /**
     * Test the property 'npaNxx'
     */
    @Test
    public void npaNxxTest() {
        // TODO: test npaNxx
    }

    /**
     * Test the property 'fips'
     */
    @Test
    public void fipsTest() {
        // TODO: test fips
    }

}
