/*
 * SaasPro
 * APIs to interface with communications tax engine.<br />The API requires Basic authentication.<br />Users with access to multiple clients must also set request header parameter for <code>client_id</code>.<br />Set <code>client_profile_id</code> to specify profile to be used for taxation.<br /><br />Effective January 1st, 2022 all Avalara products will be enforcing TLS 1.2 server-side. Please ensure that your implementation sets a minimal of TLS 1.2 encryption when making web requests to Avalara APIs.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Location
 */
public class LocationTest {
    private final Location model = new Location();

    /**
     * Model tests for Location
     */
    @Test
    public void testLocation() {
        // TODO: test Location
    }

    /**
     * Test the property 'cnty'
     */
    @Test
    public void cntyTest() {
        // TODO: test cnty
    }

    /**
     * Test the property 'ctry'
     */
    @Test
    public void ctryTest() {
        // TODO: test ctry
    }

    /**
     * Test the property '_int'
     */
    @Test
    public void _intTest() {
        // TODO: test _int
    }

    /**
     * Test the property 'geo'
     */
    @Test
    public void geoTest() {
        // TODO: test geo
    }

    /**
     * Test the property 'pcd'
     */
    @Test
    public void pcdTest() {
        // TODO: test pcd
    }

    /**
     * Test the property 'npa'
     */
    @Test
    public void npaTest() {
        // TODO: test npa
    }

    /**
     * Test the property 'fips'
     */
    @Test
    public void fipsTest() {
        // TODO: test fips
    }

    /**
     * Test the property 'addr'
     */
    @Test
    public void addrTest() {
        // TODO: test addr
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'st'
     */
    @Test
    public void stTest() {
        // TODO: test st
    }

    /**
     * Test the property 'zip'
     */
    @Test
    public void zipTest() {
        // TODO: test zip
    }

}
