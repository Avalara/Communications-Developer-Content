<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.WinControls.ChartView</name>
    </assembly>
    <members>
        <member name="M:Telerik.WinControls.UI.ChartWrapper.OnContextMenuOpening(Telerik.WinControls.UI.ChartViewContextMenuOpeningEventArgs)">
            <summary>
            Raises the <see cref="E:ContextMenuOpening"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.ChartViewContextMenuOpeningEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartWrapper.OnLabelFormatting(System.Object,Telerik.WinControls.UI.ChartViewLabelFormattingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.WinControls.UI.ChartWrapper.LabelFormatting"/> event
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.CurrentViewIndexChanged">
            <summary>
            Occurs when the Current View Index is changed
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.SelectedPointChanging">
            <summary>
            Occurs when the selected point is changing
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.SelectedPointChanged">
            <summary>
            Occurs when the selected point changes
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.CreateRenderer">
            <summary>
            Fired when the area requies an renderer for the first time.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.DataError">
            <summary>
            Occurs when a data error is detected.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.CreatePointElement">
            <summary>
            Occurs when a new DataPointElement is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.CreatePoint">
            <summary>
            Occurs when a new DataPoint is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.ContextMenuOpening">
            <summary>
            Occurs when context menu is opening.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartWrapper.LabelFormatting">
            <summary>
            Fires when the content of a point label needs to be formatted for display.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartElementCollection.AddRange(Telerik.WinControls.UI.UIChartElement[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartAnnotationCollection.AddRange(Telerik.WinControls.UI.ChartAnnotation[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:Telerik.WinControls.UI.LegendItemCollection">
            <summary>
            Strongly typed collection of <see cref="T:Telerik.WinControls.UI.LegendItem"/> items.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartViewController">
            <summary>
            Represents a controller which can be added to the controllers collection of a <see cref="T:Telerik.WinControls.UI.RadChartView"/>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartViewController.ControllerAdded(Telerik.WinControls.UI.ChartView)">
            <summary>
            This method is called when the controller is added to the controllers collection of a chart view.
            </summary>
            <param name="view">The view this controller is added to.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartViewController.ControllerRemoved">
            <summary>
            This method is called when the controller is removed from the controllers collection of a chart view.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewController.View">
            <summary>
            Gets the chart view this conrtoller is added to.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewController.Area">
            <summary>
            Gets or sets the area this controller is added to.
            </summary>
            <value>
            The area.
            </value>
        </member>
        <member name="T:Telerik.WinControls.UI.SmartLabelsStrategyBase">
            <summary>
            Declares the methods and properties that are used when smart labels of RadChartView are positioned.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SmartLabelsStrategyBase.CalculateLocations(Telerik.WinControls.UI.ChartSeriesCollection,System.Drawing.Rectangle)">
            <summary>
            Within this method labels' positions are calculated and are set to the SmartLocation property of each label.
            </summary>
            <param name="series">All the series in the current chart view.</param>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.SmartLabelsStrategyBase.DistanceToLabel">
            <summary>
            Gets or sets the distance to add or substract from the label rectangle to label.
            </summary>
            <value>
            The distance to label.
            </value>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.CalculateLocations(Telerik.WinControls.UI.ChartSeriesCollection,System.Drawing.Rectangle)">
            <summary>
            Within this method labels' positions are calculated and are set to the SmartLocation property of each label.
            </summary>
            <param name="series">All the series in the current chart view.</param>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.FinalPositionsOptimization(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement})">
            <summary>
            Optimizes label positions after all labels have been processed.
            </summary>
            <param name="labels">The labels.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.RestrictWithinAxes(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.CartesianSeries)">
            <summary>
            Restricts rectangles within the chart axes.
            </summary>
            <param name="labels">The labels.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetElementToMove(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.ChartSeriesCollection)">
            <summary>
            Gets the element to move.
            </summary>
            <param name="labels">The labels.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetElementWithMostOverlaps(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.ChartSeriesCollection)">
            <summary>
            Gets the element with most overlaps.
            </summary>
            <param name="labels">The labels.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetBestPositionInUpwardDirection(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.LabelElement,Telerik.WinControls.UI.CartesianSeries)">
            <summary>
            Gets the best position in upward direction.
            </summary>
            <param name="labels">The labels.</param>
            <param name="labelToMove">The label to move.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetBestPositionInDownwardDirection(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.LabelElement,Telerik.WinControls.UI.CartesianSeries)">
            <summary>
            Gets the best position in downward direction.
            </summary>
            <param name="labels">The labels.</param>
            <param name="labelToMove">The label to move.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetBestPositionInLeftDirection(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.LabelElement,Telerik.WinControls.UI.CartesianSeries)">
            <summary>
            Gets the best position in left direction.
            </summary>
            <param name="labels">The labels.</param>
            <param name="labelToMove">The label to move.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.GetBestPositionInRightDirection(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.LabelElement,Telerik.WinControls.UI.CartesianSeries)">
            <summary>
            Gets the best position in right direction.
            </summary>
            <param name="labels">The labels.</param>
            <param name="labelToMove">The label to move.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.HasCollisions(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},Telerik.WinControls.UI.LabelElement,System.Drawing.Rectangle)">
            <summary>
            Determines whether the specified label rectangle has collisions with the rest of the labels.
            </summary>
            <param name="labels">The labels.</param>
            <param name="labelToMove">The label to move.</param>
            <param name="currentRect">The current rect for the label being moved.</param>
            <returns>
              <c>true</c> if the specified rect has collisions; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.SeriesLineIntersectsRect(Telerik.WinControls.UI.ChartSeries,System.Drawing.Rectangle)">
            <summary>
            Returns a value indicating whether the series line intersects with the rectangle.
            </summary>
            <param name="chartSeries">The chart series.</param>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.SeriesLineIntersectsLine(Telerik.WinControls.UI.ChartSeries,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns a value indicating whether the series line intersects with the given line.
            </summary>
            <param name="chartSeries">The chart series.</param>
            <param name="p1">The begin point of the line.</param>
            <param name="p2">The end point of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.LineIntersectsRect(System.Drawing.Point,System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Returns a value indicating whether a line represented with two points intersects the given rectangle.
            </summary>
            <param name="p1">The begin point of the line.</param>
            <param name="p2">The end point of the line.</param>
            <param name="r">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.LineIntersectsLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns a value indicating whether two lines intersect.
            </summary>
            <param name="l1p1">The begin point of the first line.</param>
            <param name="l1p2">The end point of the first line</param>
            <param name="l2p1">The begin point of the second line.</param>
            <param name="l2p2">The end point of the second line.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.UI.VerticalAdjusmentLabelsStrategy.DistanceBetweenLabels">
            <summary>
            Gets or sets the distance between labels.
            </summary>
            <value>
            The distance between labels.
            </value>
        </member>
        <member name="T:Telerik.WinControls.UI.EightPositionsLabelsStrategy">
            <summary>
            Represents a Fast Algorithm for Label Placement implementation for the RadChartView labels with 8 possible label positions.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.FourPositionsLabelsStrategy">
            <summary>
            Represents a Fast Algorithm for Label Placement implementation for the RadChartView labels.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.CalculateLocations(Telerik.WinControls.UI.ChartSeriesCollection,System.Drawing.Rectangle)">
            <summary>
            Within this method labels' positions are calculated and are set to the SmartLocation property of each label.
            </summary>
            <param name="series">All the series in the current chart view.</param>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.BuildAdjacencyMatrix(Telerik.WinControls.UI.ChartSeriesCollection)">
            <summary>
            Builds the adjacency matrix. A matrix that represents the collision graph of all labels.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.MaximumNonconflict">
            <summary>
            Places as much as possible labels into positions without overlaps.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.AssignMinimumOverlapLabels">
            <summary>
            Adds any labels that do not have a position set to the position with the least collisions.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.LocalOptimization">
            <summary>
            Peforms local optiomizations to labels that improve the global solution.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.AssignSmartRectangles(Telerik.WinControls.UI.ChartSeriesCollection)">
            <summary>
            Assigns the smart rectangles of labels.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.GetAllLabelPositions(Telerik.WinControls.UI.LabelElement)">
            <summary>
            Gets all the possible label positions.
            </summary>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.GetLabelRectangle(Telerik.WinControls.UI.LabelElement,System.Int32)">
            <summary>
            Gets the label rectangle from its position.
            </summary>
            <param name="label">The label.</param>
            <param name="labelPosition">The label position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.GetLabelLineSide(System.Int32)">
            <summary>
            Gets the label LineSide corresponding to the label position.
            </summary>
            <param name="labelPosition">The label position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.IsFinalSolution">
            <summary>
            Determines whether the current state of the adjacency matrix is a final solution.
            </summary>
            <returns>
              <c>true</c> if it is final solution; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.IsMatrixEmpty">
            <summary>
            Determines whether there are uncheck label positions in the adjacency matrix.
            </summary>
            <returns>
              <c>true</c> if [is matrix empty]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.FourPositionsLabelsStrategy.HasUnassignedLabels">
            <summary>
            Determines whether the are labels with unassigned label position.
            </summary>
            <returns>
              <c>true</c> if [has unassigned labels]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.UI.FourPositionsLabelsStrategy.PositionsPerLabel">
            <summary>
            Gets or sets the number of label positions the strategy will serach in.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.FourPositionsLabelsStrategy.MatrixStatus">
            <summary>
            Represents the possible values in the adjacency matrix.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.EightPositionsLabelsStrategy.GetLabelRectangle(Telerik.WinControls.UI.LabelElement,System.Int32)">
            <summary>
            Gets the label rectangle from its position.
            </summary>
            <param name="label">The label.</param>
            <param name="labelPosition">The label position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EightPositionsLabelsStrategy.GetLabelLineSide(System.Int32)">
            <summary>
            Gets the label LineSide corresponding to the label position.
            </summary>
            <param name="labelPosition">The label position.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.UI.EightPositionsLabelsStrategy.PositionsPerLabel">
            <summary>
            Gets or sets the number of label positions the strategy will serach in.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy">
            <summary>
            Represents a smart labels strategy for a pie chart that places labels in two horizontal columns of the chart without them overlapping.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ToRectangleF(Telerik.Charting.RadRect)">
            <summary>
            Converts a <see cref="T:Telerik.Charting.RadRect"/> to a RectangleF.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.CalculateLocations(Telerik.WinControls.UI.ChartSeriesCollection,System.Drawing.Rectangle)">
            <summary>
            Within this method labels' positions are calculated and are set to the SmartLocation property of each label.
            </summary>
            <param name="series">All the series in the current chart view.</param>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.GetSmartLayoutSlot(Telerik.WinControls.UI.PieSeries,Telerik.WinControls.UI.LabelElement,System.Double)">
            <summary>
            Gets the smart layout slot for a given label.
            </summary>
            <param name="series">The series.</param>
            <param name="label">The label.</param>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.CalculateOverlaps(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},System.Drawing.Rectangle)">
            <summary>
            Calculates the overlaps of labels.
            </summary>
            <param name="labels">The labels.</param>
            <param name="plotArea">The plot area.</param>
            <returns>An object holding information on the labels collisions.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.OptimizeColumnPositions(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Optimizes the labels positions in the two columns.
            </summary>
            <param name="column">The column.</param>
            <param name="plotArea">The plot area.</param>
            <param name="isLeftColumn">Indicates whether the left column is processed <c>true</c> or the right one <c>false</c>.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.OptimizeTopDown(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Begind the optimization from the top and proceeds down.
            </summary>
            <param name="labels">The labels.</param>
            <param name="plotArea">The plot area.</param>
            <param name="isLeftColumn">Indicates whether the left column is processed <c>true</c> or the right one <c>false</c>.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.OptimizeBottomUp(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Begind the optimization from the bottom and proceeds up.
            </summary>
            <param name="labels">The labels.</param>
            <param name="plotArea">The plot area.</param>
            <param name="isLeftColumn">Indicates whether the left column is processed <c>true</c> or the right one <c>false</c>.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.OptimizeCenterUpAndDown(System.Collections.Generic.List{Telerik.WinControls.UI.LabelElement},System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Begind the optimization from the center and proceeds up and down.
            </summary>
            <param name="labels">The labels.</param>
            <param name="plotArea">The plot area.</param>
            <param name="isLeftColumn">Indicates whether the left column is processed <c>true</c> or the right one <c>false</c>.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.DistanceBetweenLabels">
            <summary>
            Gets or sets the distance between labels.
            </summary>
            <value>
            The distance between labels.
            </value>
        </member>
        <member name="T:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.DescendingComparer`1">
            <summary>
            A decenting comparer.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.DescendingComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x" /> is less than <paramref name="y" />.
            Zero
            <paramref name="x" /> equals <paramref name="y" />.
            Greater than zero
            <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
        </member>
        <member name="T:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo">
            <summary>
            Holds information of the labels overlaps.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo"/> class.
            </summary>
            <param name="top">The top.</param>
            <param name="middle">The middle.</param>
            <param name="bottom">The bottom.</param>
            <param name="total">The total.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.Top">
            <summary>
            Gets the number of overlaps in the top third of the column.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.Middle">
            <summary>
            Gets the number of overlaps in the middle third of the column.
            </summary>
            <value>
            The middle.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.Bottom">
            <summary>
            Gets the number of overlaps in the bottom third of the column.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.Total">
            <summary>
            Gets the total number of overlaps.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.ClusterizationInfo.MostDenseArea">
            <summary>
            Gets the most dense area.
            </summary>
            <value>
            The most dense area.
            </value>
        </member>
        <member name="T:Telerik.WinControls.UI.PieTwoLabelColumnsStrategy.Density">
            <summary>
            Represents the possible types of label clusterization in a pie chart.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.SmartLabelsController">
            <summary>
            Creates a new instance of <see cref="T:Telerik.WinControls.UI.SmartLabelsController"/> which handles the smart labels placement in RadChartView.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SmartLabelsController.CalculateLabelsPositions(Telerik.WinControls.UI.ChartSeriesCollection,System.Drawing.Rectangle)">
            <summary>
            Calculates the labels positions using the current strategy.
            </summary>
            <param name="series">All the series in the chart view.</param>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SmartLabelsController.GetDefaultStrategy(Telerik.WinControls.UI.ChartArea)">
            <summary>
            Gets the default strategy for a given area type.
            </summary>
            <param name="area">The area.</param>
            <returns>The default strategy for the given area.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.SmartLabelsController.ControllerAdded(Telerik.WinControls.UI.ChartView)">
            <summary>
            This method is called when the controller is added to the controllers collection of an area.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SmartLabelsController.ControllerRemoved">
            <summary>
            This method is called when the controller is removed from the controllers collection of an area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SmartLabelsController.Strategy">
            <summary>
            Gets or sets the strategy used for resolving label collisions.
            </summary>
            <value>
            The strategy.
            </value>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartStillIndicatorsController.GetIndicatorValue(Telerik.WinControls.UI.ChartStillIndicator,Telerik.WinControls.UI.LineSeriesBase)">
            <summary>
            Returns the value under the given indicator for the given series.
            </summary>
            <param name="indicator">The indicator for which to calculate the value.</param>
            <param name="series">The series from which to get the value.</param>
            <returns>A double value if there is data under the indicator or null if there is no data for the given series.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartStillIndicatorsController.OnStillIndicatorMoving(Telerik.WinControls.UI.StillIndicatorEventArgs)">
            <summary>
            Raises the <see cref="E:StillIndicatorMoving"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.StillIndicatorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartStillIndicatorsController.OnStillIndicatorMoved(Telerik.WinControls.UI.StillIndicatorEventArgs)">
            <summary>
            Raises the <see cref="E:StillIndicatorMoved"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.StillIndicatorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartStillIndicatorsController.Indicators">
            <summary>
            Gets the collection of indicators that are currently shown in the chart view.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartStillIndicatorsController.AdditionalHitTestArea">
            <summary>
            Gets or sets the size of the additional area around the indicator which will start a drag operation of the indicator.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartStillIndicatorsController.StillIndicatorMoving">
            <summary>
            Occurs when an indicator is being dragged by the user.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartStillIndicatorsController.StillIndicatorMoved">
            <summary>
            Occurs when the user finishes dragging an indicator.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TrackballInfoElement.Offset">
            <summary>
            Gets or sets the offset on which the element should be positioned.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.LocationChangedEventArgs.#ctor(System.Drawing.PointF,Telerik.WinControls.UI.TrackballInfoElement,System.Collections.Generic.List{Telerik.WinControls.UI.DataPointInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.LocationChangedEventArgs"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.LocationChangedEventArgs.Location">
            <summary>
            Gets the new location of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LocationChangedEventArgs.Points">
            <summary>
            Gets the points on which the trackball will move.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LocationChangedEventArgs.Element">
            <summary>
            Gets the trackball info element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LocationChangedEventArgs.Offset">
            <summary>
            Gets or sets the offset according the location where the trackball info will be positioned.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TextNeededEventArgs.#ctor(Telerik.WinControls.UI.TrackballInfoElement,System.Collections.Generic.List{Telerik.WinControls.UI.DataPointInfo},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.TextNeededEventArgs"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.TextNeededEventArgs.Points">
            <summary>
            Gets the points on which the trackball will move next.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TextNeededEventArgs.Element">
            <summary>
            Gets the trackball info element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TextNeededEventArgs.Text">
            <summary>
            Gets or sets the text to be displayed on the trackball info element.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartElement">
            <summary>
            Base class for nodes that may have chidren.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartNode">
            <summary>
            Base class for all models that form the ChartArea tree.
            </summary>
        </member>
        <member name="T:Telerik.Charting.PropertyBagObject">
            <summary>
            Represents a <see cref="T:Telerik.Charting.DisposableObject"/> that stores its properties within a property bag.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DisposableObject">
            <summary>
            Represents an object that implements the <see cref="T:System.IDisposable"/> interface and automatically releases any events, attached to this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.DisposableObject"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.Dispose">
            <summary>
            Releases all resources, used by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DisposableObject.DisposeUnmanagedResources">
            <summary>
            Disposes all unmanaged resources allocated by this instance.
            </summary>
        </member>
        <member name="E:Telerik.Charting.DisposableObject.Disposing">
            <summary>
            Raised when the object enters its Dispose routine.
            </summary>
        </member>
        <member name="E:Telerik.Charting.DisposableObject.Disposed">
            <summary>
            Raised when the object has finished its Dispose routine.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.IsDisposing">
            <summary>
            Gets a value indicating whether the object is currently in a Dispose cycle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object is already disposed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DisposableObject.Events">
            <summary>
            Gets the list of all events, associated with this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PropertyBagObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.PropertyBagObject"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PropertyBagObject.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ChartNode"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartNode.Arrange(Telerik.Charting.RadRect,System.Boolean)">
            <summary>
            Arranges the node within the specified layout slot.
            </summary>
            <param name="rect"></param>
            <param name="shouldRoundLayout"></param>
        </member>
        <member name="M:Telerik.Charting.ChartNode.Invalidate">
            <summary>
            Delegates an "Invalidate" request to the owning <see cref="T:Telerik.Charting.IChartView"/> instance (if any).
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartNode.ApplyLayoutRounding">
            <summary>
            Performs pixel-snapping and corrects floating-point calculations errors.
            </summary>
        </member>
        <member name="E:Telerik.Charting.ChartNode.PropertyChanged">
            <summary>
            Occurs when a value of some property has changed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.IsArrangeValid">
            <summary>
            Gets a value indicating whether the node is laid-out on the chart scene.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.NodeState">
            <summary>
            Gets the current state of the node.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.Index">
            <summary>
            Gets the index of this node in its parent <see cref="T:Telerik.Charting.ChartElement"/> nodes collection.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.CollectionIndex">
            <summary>
            Gets the index of this node in its owning typed collection.
            An <see cref="T:Telerik.Charting.AxisLabelModel"/> for example will have this property set to the index of the label within the <see cref="P:Telerik.Charting.AxisModel.Labels"/> collection.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.IsTreeLoaded">
            <summary>
            Gets a value indicating whether the logical tree this node is part of is loaded.
            </summary>
            <remarks>
            This actually checks for a valid <see cref="T:Telerik.Charting.ChartAreaModel"/> reference and asks whether the area itself is loaded.
            This value may differ from the current <see cref="P:Telerik.Charting.ChartNode.NodeState"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Charting.ChartNode.LayoutSlot">
            <summary>
            Gets the rectangle (in physical coordinates) where this node resides.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.Parent">
            <summary>
            Gets the <see cref="T:Telerik.Charting.ChartElement"/> where this node resides.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.Presenter">
            <summary>
            Gets the <see cref="T:Telerik.Charting.IChartElementPresenter"/> instance where this node is visualized.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.TrackPropertyChanging">
            <summary>
            Gets or sets a value indicating whether the node will go through the OnPropertyChanging routine when a property is about to be changed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartNode.TrackPropertyChanged">
            <summary>
            Gets or sets a value indicating whether the node will go through the OnPropertyChanged routine when a property has changed.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ChartElement"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartElement.FindAncestor``1">
            <summary>
            Searches up the parent chain and returns the first parent of type T.
            </summary>
            <typeparam name="T">Must be a <see cref="T:Telerik.Charting.ChartElement"/>.</typeparam>
        </member>
        <member name="M:Telerik.Charting.ChartElement.IsAncestorOf(Telerik.Charting.ChartNode)">
            <summary>
            Gets a boolean value that determines whether a given element
            resides in the element hierarchy of this element.
            </summary>
            <param name="node">An instance of the <see cref="T:Telerik.Charting.ChartNode"/>
            class which is checked.</param>
        </member>
        <member name="M:Telerik.Charting.ChartElement.FindDescendant``1">
            <summary>
            Searches down the subtree of elements, using breadth-first approach, and returns the first descendant of type T.
            </summary>
            <typeparam name="T">Must be a <see cref="T:Telerik.Charting.ChartNode"/>.</typeparam>
        </member>
        <member name="M:Telerik.Charting.ChartElement.FindDescendant(System.Predicate{Telerik.Charting.ChartNode})">
            <summary>
            Searches down the subtree of elements, using breadth-first approach, and returns the first descendant of type T.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartElement.EnumDescendants">
            <summary>
            Provides flexible routine for traversing all descendants of this instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartElement.EnumDescendants(Telerik.Charting.TreeTraversalMode)">
            <summary>
            Provides flexible routine for traversing all descendants of this instance.
            </summary>
            <param name="traverseMode">The mode used to traverse the subtree.</param>
        </member>
        <member name="M:Telerik.Charting.ChartElement.EnumDescendants(System.Predicate{Telerik.Charting.ChartNode},Telerik.Charting.TreeTraversalMode)">
            <summary>
            Provides flexible routine for traversing all descendants of this instance that match the provided predicate.
            </summary>
            <param name="predicate">The predicate that defines the match criteria.</param>
            <param name="traverseMode">The mode used to traverse the subtree.</param>
        </member>
        <member name="M:Telerik.Charting.ChartElement.DisposeManagedResources">
            <summary>
            Disposes all managed resources allocated by this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartElement.Presenter">
            <summary>
            Gets the <see cref="T:Telerik.Charting.IChartElementPresenter"/> instance where this element is presented.
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisModel.ApplyLayoutRounding">
            <summary>
            Performs pixel-snapping and corrects floating-point calculations errors.
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisModel.GetCombineGroupKey(Telerik.Charting.DataPoint)">
            <summary>
            Gets the key used to group series when combination mode like Stack is specified.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.AxisModel.GetStackSumValue(Telerik.Charting.DataPoint,System.Boolean@,System.Double@,System.Double@)">
            <summary>
            Gets the stack sum value for each DataPoint in a stack group used by a CombineStrategy.
            The result is the transformed value of the stack sum of the DataPoint values.
            </summary>
            <param name="point"></param>
            <param name="positive">Determines whether the point value is positive relative to the plot origin.</param>
            <param name="positiveValuesSum">The present sum of positive DataPoint values in the stack. Updated if the DataPoint value is positive.</param>
            <param name="negativeValuesSum">The present sum of negative DataPoint values in the stack. Updated if the DataPoint value is negative.</param>
            <returns>The transformed value of the stack sum of the DataPoint values.</returns>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LabelFormat">
            <summary>
            Gets or sets the string that formats the labels of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LastLabelVisibility">
            <summary>
            Gets or sets the strategy that defines the last axis label visibility.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LabelFitMode">
            <summary>
            Gets or sets a value that determines how the axis labels will be laid out when they are overlapping each other.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LabelInterval">
            <summary>
            Gets or sets the step at which labels are positioned.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LabelOffset">
            <summary>
            Gets or sets index offset from the first label to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.MajorTickOffset">
            <summary>
            Gets or sets index offset of the first tick to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.IsInverse">
            <summary>
            Gets or sets a value indicating whether this axis is inverse.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.MajorTicks">
            <summary>
            Gets the collection with all the major ticks, currently present on the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.Labels">
            <summary>
            Gets all the labels currently present on the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.TickThickness">
            <summary>
            Gets or sets the thickness of a single tick presented on the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.ShowLabels">
            <summary>
            Gets or sets a value indicating whether labels will be displayed on this axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.MajorTickLength">
            <summary>
            Gets or sets the length of a single tick presented on the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LineThickness">
            <summary>
            Gets or sets the thickness of the axis line.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.HorizontalLocation">
            <summary>
            Gets or sets the horizontal location of an axis (rendered vertically) in relation to the plot area.
            </summary>
            <value>The horizontal location.</value>
        </member>
        <member name="P:Telerik.Charting.AxisModel.VerticalLocation">
            <summary>
            Gets or sets the vertical location of an axis (rendered horizontally) in relation to the plot area.
            </summary>
            <value>The vertical location.</value>
        </member>
        <member name="P:Telerik.Charting.AxisModel.BottomOrLeftTick">
            <summary>
            Gets the bottom/left tick present on the axis. Valid when the axis is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.TopOrRightTick">
            <summary>
            Gets the top/right tick present on the axis. Valid when the axis is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.Type">
            <summary>
            Gets or sets the type (X or Y) of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.Title">
            <summary>
            Gets the <see cref="T:Telerik.Charting.AxisTitleModel"/> instance that represents the title of this axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.ActualPlotMode">
            <summary>
            Gets the plot mode actually used by this axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.Ticks">
            <summary>
            Gets the collection with all the tick currently present on this axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.ScaleBreaks">
            <summary>
            Gets the collection holding the scale breaks of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.FirstTick">
            <summary>
            Gets the first tick present on the axis. Valid when the axis is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AxisModel.LastTick">
            <summary>
            Gets the first tick present on the axis. Valid when the axis is loaded.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ContentNode">
            <summary>
            Base class for all models with content that form the ChartArea tree.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ContentNode.Content">
            <summary>
            Gets or sets the content associated with the node.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisType">
            <summary>
            Defines the possible type for an axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisType.First">
            <summary>
            Defines the first axis. This value is coordinate-system specific.
            It represents the X (or the Horizontal) axis for a Cartesian coordinate system and the Value (or the Radius) axis for a Polar coordinate system.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisType.Second">
            <summary>
            Defines the second axis. This value is coordinate-system specific.
            It represents the Y (or Vertical) axis for a Cartesian coordinate system and the Angle axis for a Polar coordinate system.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IAxisSupportsCombinedSeriesPlot">
            <summary>
            Identifies axes that can be used as stack axes when plotting <see cref="T:Telerik.Charting.ISupportCombineMode"/> chart series instances.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalAxisModel.MajorTickInterval">
            <summary>
            Gets or sets the step at which ticks are positioned.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalAxisModel.PlotMode">
            <summary>
            Gets or sets the plot mode used to position points along the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalAxisModel.GapLength">
            <summary>
            Gets or sets the length of the gap to be applied for each category.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalAxisModel.ActualPlotMode">
            <summary>
            Gets the plot mode actually used by this axis.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Charting.AxisHorizontalLocation">
            <summary>
            Defines the supported locations that an axis rendered vertically can have.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisHorizontalLocation.Left">
            <summary>
            Axis (rendered vertically) should be located to the left of the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisHorizontalLocation.Right">
            <summary>
            Axis (rendered vertically) should be located to the right of the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisLabelFitMode">
            <summary>
            Determines the label fit mode of the chart axis labels.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLabelFitMode.None">
            <summary>
            Does not attempt to fit the axis labels.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLabelFitMode.MultiLine">
            <summary>
            Arranges axis labels on multiple lines with each label on a different line
            than its neighbor labels.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLabelFitMode.Rotate">
            <summary>
            Arranges the axis labels so that they are rotated some degrees around their top left corner.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisLastLabelVisibility">
            <summary>
            Defines the strategy that will update the last label of the axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLastLabelVisibility.Visible">
            <summary>
            The desired space is reserved so that the label is fully visible.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLastLabelVisibility.Hidden">
            <summary>
            The last label is not displayed.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisLastLabelVisibility.Clip">
            <summary>
            The last label is displayed but no space if reserved so that it is fully visible.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisPlotMode">
            <summary>
            Defines how data points are plotted by an axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.BetweenTicks">
            <summary>
            Points are plotted in the middle of the range, defined between each two ticks.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.OnTicks">
            <summary>
            Points are plotted over each tick.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisPlotMode.OnTicksPadded">
            <summary>
            Points are plotted over each tick with half a step padding applied on both ends of the axis.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisVerticalLocation">
            <summary>
            Defines the supported locations that an axis rendered horizontally can have.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisVerticalLocation.Bottom">
            <summary>
            Axis (rendered horizontally) should be located below the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AxisVerticalLocation.Top">
            <summary>
            Axis (rendered horizontally) should be located above the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DateTimeComponent">
            <summary>
            Represents a component of the <see cref="T:System.DateTime"/> structure.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Ticks">
            <summary>
            The <see cref="P:System.DateTime.Ticks"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Year">
            <summary>
            The <see cref="P:System.DateTime.Year"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Quarter">
            <summary>
            The Quarter component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Month">
            <summary>
            The <see cref="P:System.DateTime.Month"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Week">
            <summary>
            The Week component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Hour">
            <summary>
            The <see cref="P:System.DateTime.Hour"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Minute">
            <summary>
            The <see cref="P:System.DateTime.Minute"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Second">
            <summary>
            The <see cref="P:System.DateTime.Second"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Millisecond">
            <summary>
            The <see cref="P:System.DateTime.Millisecond"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Date">
            <summary>
            The <see cref="P:System.DateTime.Date"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.TimeOfDay">
            <summary>
            The <see cref="P:System.DateTime.TimeOfDay"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.Day">
            <summary>
            The <see cref="P:System.DateTime.Day"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.DayOfWeek">
            <summary>
            The <see cref="P:System.DateTime.DayOfWeek"/> component.
            </summary>
        </member>
        <member name="F:Telerik.Charting.DateTimeComponent.DayOfYear">
            <summary>
            The <see cref="P:System.DateTime.DayOfYear"/> component.
            </summary>
        </member>
        <member name="M:Telerik.Charting.AxisModelLayoutStrategy.GetVisibleRange(Telerik.Charting.RadSize)">
            <summary>
            Gets the currently visible axis range within the [0, 1] order.
            We are using decimal here for higher precision; the Double type generates ridiculous floating-point errors - e.g. 1.2 / 0.2 != 6 but rather 5.999999999999991.
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="T:Telerik.Charting.PolarAxisPosition">
            <summary>
            Defines the position of the Radius axis within a RadPolarChart.
            </summary>
        </member>
        <member name="F:Telerik.Charting.PolarAxisPosition.Top">
            <summary>
            Axis is aligned vertically from the center of the polar area to the topmost edge of the ellipse.
            </summary>
        </member>
        <member name="F:Telerik.Charting.PolarAxisPosition.Right">
            <summary>
            Axis is aligned horizontally from the center of the polar area to the rightmost edge of the ellipse.
            </summary>
        </member>
        <member name="T:Telerik.Charting.TimeInterval">
            <summary>
            Specifies the predefined time interval types.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Year">
            <summary>
            1 Year (365 days).
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Quarter">
            <summary>
            1 Quarter (3 months).
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Month">
            <summary>
            1 Month.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Week">
            <summary>
            1 Week (7 days).
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Day">
            <summary>
            1 Day.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Hour">
            <summary>
            1 Hour.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Minute">
            <summary>
            1 Minute.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Second">
            <summary>
            1 Minute.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TimeInterval.Millisecond">
            <summary>
            1 Millisecond.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DateTimeContinuousAxisModel">
            <summary>
            Defines a DateTime axis that uses the actual timeline to plot series points.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.PlotMode">
            <summary>
            Gets or sets the plot mode used to position points along the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MajorStep">
            <summary>
            Gets or sets custom major step of the axis. The TimeSpan between each tick is calculated by using this value and the MajorStepUnit.
            Specify double.PositiveInfinity or double.NegativeInfinity to clear the custom value and to generate the step automatically.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MajorStepUnit">
            <summary>
            Gets or sets the unit that defines the custom major step of the axis.
            If no explicit step is defined, the axis will automatically calculate one, depending on the smallest difference between any two dates.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.Minimum">
            <summary>
            Gets or sets the custom minimum of the axis.
            Specify DateTime.MinValue to clear the property value so that the minimum is auto-generated.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.Maximum">
            <summary>
            Gets or sets the custom maximum of the axis.
            Specify DateTime.MaxValue to clear the property value so that the maximum is auto-generated.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MaximumTicks">
            <summary>
            Gets or sets the maximum ticks that might be displayed on the axis. There are corner cases when ticks may become really huge number. Defaults to 31.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MaximumTicksFlag">
            <summary>
            This property is used to avoid the out-of-the-box detection of whole monts/years in the UpdateUnits method.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MonthStep">
            <summary>
            Gets the month step. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.YearStep">
            <summary>
            Gets the year step. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.DateTimePoints">
            <summary>
            Gets the DateTime points. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.ActualRange">
            <summary>
            Gets the actual range. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.PlotInformation">
            <summary>
            Gets the plot information. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.TickInterval">
            <summary>
            Gets the tick interval. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DateTimeContinuousAxisModel.MinDelta">
            <summary>
            Gets the min delta. Exposed for testing purposes.
            </summary>
        </member>
        <member name="M:Telerik.Charting.NumericalAxisModel.GetStackSumValue(Telerik.Charting.DataPoint,System.Boolean@,System.Double@,System.Double@)">
            <summary>
            Gets the stack sum value for each DataPoint in a stack group used by a CombineStrategy.
            The result is the transformed value of the stack sum of the DataPoint values.
            </summary>
            <param name="point"></param>
            <param name="positive">Determines whether the point value is positive relative to the plot origin.</param>
            <param name="positiveValuesSum">The present sum of positive DataPoint values in the stack. Updated if the DataPoint value is positive.</param>
            <param name="negativeValuesSum">The present sum of negative DataPoint values in the stack. Updated if the DataPoint value is negative.</param>
            <returns>The transformed value of the stack sum of the DataPoint values.</returns>
        </member>
        <member name="M:Telerik.Charting.NumericalAxisModel.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.DesiredTickCount">
            <summary>
            Gets or sets the number of the ticks available on the axis. If a value less than 2 is set, the property is reset to its default value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.RangeExtendDirection">
            <summary>
            Gets or sets a value that specifies how the auto-range of this axis will be extended so that each data point is visualized in the best possible way.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.MajorStep">
            <summary>
            Gets or sets the user-defined major step of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.Minimum">
            <summary>
            Gets or sets the user-defined minimum of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.Maximum">
            <summary>
            Gets or sets the user-defined maximum of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NumericalAxisModel.ActualRange">
            <summary>
            Gets the actual range (minimum and maximum values) used by the axis.
            </summary>
        </member>
        <member name="P:Telerik.Charting.LogarithmicAxisModel.LogarithmBase">
            <summary>
            Gets or sets the base of the logarithm used for normalizing data points' values.
            </summary>
        </member>
        <member name="T:Telerik.Charting.NumericalAxisRangeExtendDirection">
            <summary>
            Specifies how a numerical axis auto-range will be extended so that each data point is visualized in the best possible way.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.None">
            <summary>
            The range will be rounded but not extended.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Positive">
            <summary>
            The range maximum will be extended with one major step so that the data's maximum is at least 5% away from the range maximum.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Negative">
            <summary>
            The range minimum will be extended with one major step so that the data's minimum is at least 5% away from the range minimum.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NumericalAxisRangeExtendDirection.Both">
            <summary>
            The range will be extended in both negative and positive direction.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ValueRange`1">
            <summary>
            Represents a structure that defines a range of two IComparable structures - like Single or Double.
            </summary>
            <typeparam name="T">Must implement the <see cref="T:System.IComparable"/> interface.</typeparam>
        </member>
        <member name="F:Telerik.Charting.ValueRange`1.Empty">
            <summary>
            Empty value range where minimum and maximum are set to their default(T) value.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ValueRange`1"/> struct.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.op_Equality(Telerik.Charting.ValueRange{`0},Telerik.Charting.ValueRange{`0})">
            <summary>
            Determines whether two ranges are equal.
            </summary>
            <param name="r1"></param>
            <param name="r2"></param>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.op_Inequality(Telerik.Charting.ValueRange{`0},Telerik.Charting.ValueRange{`0})">
            <summary>
            Determines whether two ranges are not equal.
            </summary>
            <param name="r1"></param>
            <param name="r2"></param>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.IsInRangeExclusive(`0)">
            <summary>
            Determines whether the specified value is within the range, excluding its minimum and maximum values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.IsInRangeInclusive(System.Double)">
            <summary>
            Determines whether the specified value is within the range, including its minimum and maximum values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.ValueRange`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Telerik.Charting.ValueRange`1.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ValueRange`1.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AxisLabelModel">
            <summary>
            This class represents the axis label data model.
            </summary>
        </member>
        <member name="T:Telerik.Charting.TickType">
            <summary>
            Defines the possible types of an axis tick.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TickType.Major">
            <summary>
            Identifies major ticks.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TickType.Minor">
            <summary>
            Identifies minor ticks.
            </summary>
        </member>
        <member name="T:Telerik.Charting.AngleRange">
            <summary>
            Represents a structure that defines the starting and sweeping angles of an ellipse Arc.
            </summary>
        </member>
        <member name="F:Telerik.Charting.AngleRange.Default">
            <summary>
            The default structure value with its starting angle set to 0 and its sweep angle set to 360.
            </summary>
        </member>
        <member name="M:Telerik.Charting.AngleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.AngleRange"/> struct.
            </summary>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Telerik.Charting.AngleRange.op_Equality(Telerik.Charting.AngleRange,Telerik.Charting.AngleRange)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The first range.</param>
            <param name="r2">The second range.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.AngleRange.op_Inequality(Telerik.Charting.AngleRange,Telerik.Charting.AngleRange)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The first range.</param>
            <param name="r2">The second range.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.AngleRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.AngleRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Telerik.Charting.AngleRange.StartAngle">
            <summary>
            Gets or sets start angle from which the arc starts.
            </summary>
        </member>
        <member name="P:Telerik.Charting.AngleRange.SweepAngle">
            <summary>
            Gets or sets the angle that defines the length of the Arc.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartAreaModelWithAxes">
            <summary>
            Represents a chart area that needs two <see cref="T:Telerik.Charting.AxisModel"/> instances to plot its points.
            Such chart areas are the <see cref="T:Telerik.Charting.CartesianChartAreaModel"/> and <see cref="T:Telerik.Charting.PolarChartAreaModel"/>.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAreaModel.Arrange">
            <summary>
            Arranges the area using a rectangle located at (0, 0) and with Size equal to the current view's Viewport.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.PlotArea">
            <summary>
            Gets the area where data points are plotted.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.Series">
            <summary>
            Gets the collection with all the series currently plotted by this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.Annotations">
            <summary>
            Gets the collection with all the annotations currently plotted by this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.IsTreeLoaded">
            <summary>
            Determines whether the node is loaded.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.IsSuspended">
            <summary>
            Gets a value indicating whether updates are currently suspended.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModel.Dispatcher">
            <summary>
            Gets the dispatcher used to broadcast messages among tree nodes.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartAreaModelWithAxes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ChartAreaModelWithAxes"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartAreaModelWithAxes.IsTreeLoaded">
            <summary>
            Determines whether the plot area is fully loaded and may be visualized.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CartesianChartAreaModel.Grid">
            <summary>
            Gets the <see cref="T:Telerik.Charting.CartesianChartGridModel"/> instance that decorates the background of this plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartPlotAreaModel">
            <summary>
            Base class for plot areas in different charts.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PolarChartAreaModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.PolarChartAreaModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PolarChartAreaModel.NormalizeAngle(System.Double)">
            <summary>
            Normalizes the specified angle so that it reflects the counter-clockwise plot direction as well as the starting angle of the polar axis.
            </summary>
            <param name="angle"></param>
        </member>
        <member name="P:Telerik.Charting.PolarChartAreaModel.StartAngle">
            <summary>
            Gets or sets the angle, measured counter-clockwise at which the PolarAxis is anchored.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PolarChartAreaModel.PolarAxis">
            <summary>
            Gets or sets the radius axis of the polar coordinate system.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PolarChartAreaModel.AngleAxis">
            <summary>
            Gets or sets the angle axis of the polar coordinate system.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IDataPointProcessor">
            <summary>
            Defines a type that may enrich a <see cref="T:Telerik.Charting.DataPoint"/> with additional properties.
            </summary>
        </member>
        <member name="M:Telerik.Charting.IDataPointProcessor.Process(Telerik.Charting.DataPoint)">
            <summary>
            Performs the core action over the specified point.
            </summary>
            <param name="dataPoint"></param>
        </member>
        <member name="P:Telerik.Charting.IDataPointProcessor.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the processor is currently enabled.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DateTimeExtensions">
            <summary>
            Collection of helper methods for retrieving unique (year-wise) values for some date/time components besides the ones provided by DateTime class.  
            </summary>
        </member>
        <member name="M:Telerik.Charting.DateTimeExtensions.GetWeekOfYear(System.DateTime)">
            <summary>
            Gets the week component of the date represented by the DateTime instance.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DateTimeExtensions.GetQuarterOfYear(System.DateTime)">
            <summary>
            Gets the quarter component of the date represented by the DateTime instance.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ElementCollection`1">
            <summary>
            Represents a typed collection of <see cref="T:Telerik.Charting.ChartNode"/> instances. For example an <see cref="T:Telerik.Charting.AxisModel"/> aggregates two typed collections - Ticks and Labels.
            </summary>
            <typeparam name="T">Must be a <see cref="T:Telerik.Charting.ChartNode"/>.</typeparam>
        </member>
        <member name="M:Telerik.Charting.ElementCollection`1.#ctor(Telerik.Charting.ChartElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.ElementCollection`1"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Charting.ElementCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Charting.ElementCollection`1.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ElementCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Telerik.Charting.EventHandlerList">
            <summary>
            Represents a list of delegates.
            </summary>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.Clear">
            <summary>
            Clears the list.
            </summary>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.AddHandler(System.Object,System.Delegate)">
            <summary>
            Adds the specified delegate associated with the provided key.
            </summary>
            <param name="key"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Telerik.Charting.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
            <summary>
            Removes the specified delegate associated with the provided key.
            </summary>
            <param name="key"></param>
            <param name="handler"></param>
        </member>
        <member name="P:Telerik.Charting.EventHandlerList.Item(System.Object)">
            <summary>
            Retrieves the delegate, associated with the provided key.
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Telerik.Charting.RadThickness">
            <summary>
            Represents a structure that defines margins (or padding) of an element.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadThickness"/> instance with Left, Top, Right, and Bottom components equal to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Left">
            <summary>
            Left length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Top">
            <summary>
            Top length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Right">
            <summary>
            Right length.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadThickness.Bottom">
            <summary>
            Bottom length.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadThickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadThickness"/> struct.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.op_Equality(Telerik.Charting.RadThickness,Telerik.Charting.RadThickness)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadThickness"/> structures are equal.
            </summary>
            <param name="thickness1"></param>
            <param name="thickness2"></param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.op_Inequality(Telerik.Charting.RadThickness,Telerik.Charting.RadThickness)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadThickness"/> structures are not equal.
            </summary>
            <param name="thickness1"></param>
            <param name="thickness2"></param>
        </member>
        <member name="M:Telerik.Charting.RadThickness.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadThickness.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Telerik.Charting.ReferenceDictionary`2">
            <summary>
            A dictionary, based on a List is faster and with smaller footprint for several items - e.g. 2 to 9.
            In .NET there is the HybridDictionary class which actually uses LinkedList for up to 9 items.
            </summary>
        </member>
        <member name="T:Telerik.Charting.StringToAngleRangeConverter">
            <summary>
            Converts a string to an AngleRange object.
            </summary>
        </member>
        <member name="M:Telerik.Charting.StringToAngleRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Charting.StringToAngleRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Converters.StringToDoubleConverter">
            <summary>
            Represents a value converter that converts strings into double values by using the double.TryParse method.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Converters.StringToDoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:Telerik.Charting.ScatterDataPoint">
            <summary>
            Represents a data point that may be visualized by a Scatter series in a CartesianChart.
            Generally this is a point that provides values for both X and Y axes and may be plotted by two numerical axes - Linear or Logarithmic.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataPoint">
            <summary>
            Base class for all points that may be plotted by a <see cref="T:Telerik.Charting.ChartPlotAreaModel"/>.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.DataPoint"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Charting.DataPoint.SetDataItem(System.Object)">
            <summary>
            Sets the data item when data point is data bound.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Telerik.Charting.DataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>True if the point should not be ploted, otherwise false</returns>
        </member>
        <member name="M:Telerik.Charting.DataPoint.GetTooltipValue">
            <summary>
            Gets the object that may be displayed for this data point by the chart tooltip.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataPoint.Label">
            <summary>
            Gets or sets the label associated with this point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataPoint.DataItem">
            <summary>
            Gets the object instance that represents the data associated with this point. Valid when the owning ChartSeries is data-bound.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataPoint.IsSelected">
            <summary>
            Gets or sets a value indicating whether the data point is currently in a "Selected" state.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataPoint.IsInPlotRange">
            <summary>
            Gets a value indicating whether the data point may be plotted correctly.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ScatterDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="M:Telerik.Charting.ScatterDataPoint.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.ScatterDataPoint.XValue">
            <summary>
            Gets or sets the value that is provided for the X-axis of the cartesian chart.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScatterDataPoint.YValue">
            <summary>
            Gets or sets the value that is provided for the X-axis of the cartesian chart.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ScatterDataPoint.IsInPlotRange">
            <summary>
            Determines whether the data point may be plotted correctly.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Charting.BezierDataPoint.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.BezierDataPoint.ControlPoint1XValue">
            <summary>
            Gets or sets the value that is provided for the X-axis of the first control point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.BezierDataPoint.ControlPoint1YValue">
            <summary>
            Gets or sets the value that is provided for the Y-axis of the first control point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.BezierDataPoint.ControlPoint2XValue">
            <summary>
            Gets or sets the value that is provided for the X-axis of the second control point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.BezierDataPoint.ControlPoint2YValue">
            <summary>
            Gets or sets the value that is provided for the Y-axis of the second control point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.BubbleDataPoint.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.BubbleDataPoint.Value">
            <summary>
            Gets or sets the value that is provided for the X-axis of the first control point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.CategoricalDataPoint">
            <summary>
            Defines a <see cref="T:Telerik.Charting.DataPoint"/> that has a single <see cref="P:Telerik.Charting.CategoricalDataPoint.Value"/> property, used by numerical axes.
            </summary>
        </member>
        <member name="T:Telerik.Charting.CategoricalDataPointBase">
            <summary>
            Represents a single-value data point, which may be plotted in a <see cref="T:Telerik.Charting.CartesianChartAreaModel"/> and has its second value defined as <see cref="P:Telerik.Charting.CategoricalDataPointBase.Category"/>.
            </summary>
        </member>
        <member name="F:Telerik.Charting.CategoricalDataPointBase.isInNumericalRange">
            <summary>
            Defines whether the datapoint is within its numerical axis range.
            </summary>
        </member>
        <member name="F:Telerik.Charting.CategoricalDataPointBase.isInCategoricalRange">
            <summary>
            Defines whether the datapoint is within its categorical axis range.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalDataPointBase.Category">
            <summary>
            Gets or sets the object instance that describes the category of the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalDataPointBase.IsInPlotRange">
            <summary>
            Determines whether the data point may be plotted correctly.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Charting.CategoricalDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="P:Telerik.Charting.CategoricalDataPoint.Value">
            <summary>
            Gets or sets the core value associated with the point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.DataPointCollection`1">
            <summary>
            Represents a typed element collection which accepts <see cref="T:Telerik.Charting.DataPoint"/> instances only.
            </summary>
            <typeparam name="T">Instances of type <see cref="T:Telerik.Charting.DataPoint"/>.</typeparam>
        </member>
        <member name="T:Telerik.Charting.FunnelDataPoint">
            <summary>
            Represents a single-value data point plotted by a funnel chart.
            </summary>
        </member>
        <member name="T:Telerik.Charting.SingleValueDataPoint">
            <summary>
            Defines a <see cref="T:Telerik.Charting.DataPoint"/> that has a single <see cref="P:Telerik.Charting.SingleValueDataPoint.Value"/> property, used by numerical axes.
            </summary>
        </member>
        <member name="M:Telerik.Charting.SingleValueDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="P:Telerik.Charting.SingleValueDataPoint.Value">
            <summary>
            Gets or sets the core value associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.FunnelDataPoint.LegendTitle">
            <summary>
            Gets or sets the string that will be displayed in the legend for the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.FunnelDataPoint.Path">
            <summary>
            Gets the path that defines the shape of the segment.
            </summary>
        </member>
        <member name="M:Telerik.Charting.HlcDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="P:Telerik.Charting.HlcDataPoint.High">
            <summary>
            Gets or sets the high associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.HlcDataPoint.Low">
            <summary>
            Gets or sets the low associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.HlcDataPoint.Close">
            <summary>
            Gets or sets the close associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.HlcDataPoint.IsInPlotRange">
            <summary>
            Determines whether the data point may be plotted correctly.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Charting.OhlcDataPoint">
            <summary>
            A High-Low-Open-Close data point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.OhlcDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="P:Telerik.Charting.OhlcDataPoint.IsRising">
            <summary>
            Gets a value indicating whether this instance is rising (Bullish).
            </summary>
        </member>
        <member name="P:Telerik.Charting.OhlcDataPoint.IsFalling">
            <summary>
            Gets a value indicating whether this instance is falling (Bearish).
            </summary>
        </member>
        <member name="P:Telerik.Charting.OhlcDataPoint.Open">
            <summary>
            Gets or sets the open associated with the point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.PieDataPoint">
            <summary>
            Represents a single-value data point plotted by a pie chart.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.LegendTitle">
            <summary>
            Gets or sets the string that will be displayed in the legend for the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.Percent">
            <summary>
            Gets the value which indicates the percentage of the total points sum this point's value is.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.OffsetFromCenter">
            <summary>
            Gets or sets the offset of the point from the center of the pie.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.RadiusAspectRatio">
            <summary>
            Gets or sets the radius aspect ratio of the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.StartAngle">
            <summary>
            Gets the starting angle of this point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieDataPoint.SweepAngle">
            <summary>
            Gets the sweep angle of this point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.PolarDataPoint">
            <summary>
            Represents a data point that is plotted on charts, using Polar coordinate system and two linear axes.
            </summary>
        </member>
        <member name="M:Telerik.Charting.PolarDataPoint.CheckIsEmpty">
            <summary>
            Checks if the databound data point is empty.
            </summary>
            <returns>
            True if the point should not be ploted, otherwise false
            </returns>
        </member>
        <member name="M:Telerik.Charting.PolarDataPoint.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.PolarDataPoint.Angle">
            <summary>
            Gets or sets the angle of the data point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PolarDataPoint.Value">
            <summary>
            Gets or sets the value (radius) of the data point.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RangeDataPoint">
            <summary>
            A High-Low data point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RangeDataPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RangeDataPoint"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RangeDataPoint.High">
            <summary>
            Gets or sets the high associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RangeDataPoint.Low">
            <summary>
            Gets or sets the low associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RangeDataPoint.IsInPlotRange">
            <summary>
            Determines whether the data point may be plotted correctly.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Charting.WaterfallDataPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.WaterfallDataPoint"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Charting.WaterfallDataPoint.IsSummary">
            <summary>
            Gets or sets a value defining whether this point is a Summary point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.WaterfallDataPoint.IsTotal">
            <summary>
            Gets or sets a value defining whether this point is a Total point.
            </summary>
        </member>
        <member name="P:Telerik.Charting.WaterfallDataPoint.IsInPlotRange">
            <summary>
            Determines whether the data point may be plotted correctly.
            </summary>
            <value></value>
        </member>
        <member name="F:Telerik.Charting.RadLine.X1">
            <summary>
            The X-coordinate of the line start point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.X2">
            <summary>
            The X-coordinate of the line end point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.Y1">
            <summary>
            The Y-coordinate of the line start point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadLine.Y2">
            <summary>
            The Y-coordinate of the line end point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadLine"/> struct.
            </summary>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="y1">The y1.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Telerik.Charting.RadLine.#ctor(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadLine"/> struct.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Charting.RadLine.Round(Telerik.Charting.RadLine)">
            <summary>
            Rounds the line's values to the closed whole number.
            </summary>
            <param name="line"></param>
        </member>
        <member name="T:Telerik.Charting.ChartAreaInvalidateFlags">
            <summary>
            Defines the possible impact a chart node property may have over the entire chart area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.None">
            <summary>
            Property does not affect the chart element tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.ResetAxes">
            <summary>
            Invalidates the visual presentation of the axes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAxes">
            <summary>
            Resets the plot information of the axes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateSeries">
            <summary>
            Invalidates the visual presentation of the series.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateGrid">
            <summary>
            Invalidates the visual presentation of the chart grid (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.ResetAnnotations">
            <summary>
            Resets the plot information of the annotations.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAnnotations">
            <summary>
            Invalidates the visual presentation of the chart annotations (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAxesAndGrid">
            <summary>
            Invalidates each axis plus the chart grid (if any).
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.InvalidateAll">
            <summary>
            All invalidate flags are specified.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartAreaInvalidateFlags.All">
            <summary>
            All flags are specified.
            </summary>
        </member>
        <member name="T:Telerik.Charting.NodeCollection">
            <summary>
            Represents a collection of a <see cref="T:Telerik.Charting.ChartNode"/> instances.
            </summary>
        </member>
        <member name="M:Telerik.Charting.NodeCollection.GetEnumerator">
            <summary>
            Gets the <see cref="T:System.Collections.IEnumerator"/> instance that allows for traversing all the items.
            </summary>
        </member>
        <member name="M:Telerik.Charting.NodeCollection.IndexOf(Telerik.Charting.ChartNode)">
            <summary>
            Gets the index of the specified node within the collection.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Telerik.Charting.NodeCollection.Contains(Telerik.Charting.ChartNode)">
            <summary>
            Determines whether the specified node is contained within the collection.
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Telerik.Charting.NodeCollection.Owner">
            <summary>
            Gets the <see cref="T:Telerik.Charting.ChartElement"/> instance that owns this collection.
            </summary>
        </member>
        <member name="P:Telerik.Charting.NodeCollection.Count">
            <summary>
            Gets the count of all the items.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadPropertyEventArgs">
            <summary>
            Encapsulates all the data associated with a change in a <see cref="T:Telerik.Charting.PropertyBagObject"/> property store.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadPropertyEventArgs.#ctor(System.Int32,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Charting.RadPropertyEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the property change can be accepted. Valid during the Changing pass.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.Key">
            <summary>
            Gets the key of the property associated with the event.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.PropertyName">
            <summary>
            Gets the name of the property that has changed. This member is not set if the property is associated with a valid key.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.OldValue">
            <summary>
            Gets the old value of the associated property.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadPropertyEventArgs.NewValue">
            <summary>
            Gets or sets the new value of the associated property.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.Handled">
            <summary>
            Gets or sets a value indicating whether the message is handled (processed) by some receiver.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.StopDispatch">
            <summary>
            Gets or sets a value indicating whether message may continue being dispatched or not.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.DispatchPhase">
            <summary>
            Gets or sets the current phase of the dispatch process.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.DispatchMode">
            <summary>
            Gets or sets the mode which determines how this message is dispatched.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.Id">
            <summary>
            Gets the unique id for this message.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.Sender">
            <summary>
            Gets the <see cref="T:Telerik.Charting.ChartNode"/> instance which generated this message.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.PreviousReceiver">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.ChartNode"/> instance that previously received the message.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartMessage.Data">
            <summary>
            Gets or sets the raw data associated with the message.
            </summary>
        </member>
        <member name="M:Telerik.Charting.MessageDispatcher.DispatchMessage(Telerik.Charting.ChartMessage)">
            <summary>
            Dispatches the provided message to the logical tree, starting from the Sender as a leaf.
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Telerik.Charting.MessageDispatcher.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the dispatcher is currently enabled.
            </summary>
        </member>
        <member name="T:Telerik.Charting.MessageDispatchMode">
            <summary>
            Defines how a message should be dispatched in the element tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.Bubble">
            <summary>
            Message is dispatched to the direct target and its ancestors.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.Tunnel">
            <summary>
            Message is dispatched to the direct target all its descendants.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchMode.BubbleAndTunnel">
            <summary>
            Message is dispatched to the direct target, its ancestors and all its descendants.
            </summary>
        </member>
        <member name="T:Telerik.Charting.MessageDispatchPhase">
            <summary>
            Defines the possible phases a message dispatch process may enter.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchPhase.Bubble">
            <summary>
            Message is being dispatched up in the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.Charting.MessageDispatchPhase.Tunnel">
            <summary>
            Message is being dispatched down to all descendants.
            </summary>
        </member>
        <member name="T:Telerik.Charting.NodeState">
            <summary>
            Defines the possible states a <see cref="T:Telerik.Charting.ChartNode"/> may enter.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Initial">
            <summary>
            The node is created.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Loading">
            <summary>
            The node is loading on the visual scene.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Loaded">
            <summary>
            The node is loaded and ready to be visualized.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Unloading">
            <summary>
            The node is in a process of being unloaded from the visual scene.
            </summary>
        </member>
        <member name="F:Telerik.Charting.NodeState.Unloaded">
            <summary>
            The node is detached from teh visual scene.
            </summary>
        </member>
        <member name="T:Telerik.Charting.TreeTraversalMode">
            <summary>
            Defines possible approaches when traversing a tree.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TreeTraversalMode.DepthFirst">
            <summary>
            Depth-first traversal.
            </summary>
        </member>
        <member name="F:Telerik.Charting.TreeTraversalMode.BreadthFirst">
            <summary>
            Breadth first traversal.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartLegendModel.Items">
            <summary>
            Gets the collection, containing all the items present on this legend.
            </summary>
        </member>
        <member name="P:Telerik.Charting.LegendItemModel.Label">
            <summary>
            Gets or sets the label associated with this item.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadCircle">
            <summary>
            Represents a logical definition of a circle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadCircle.Center">
            <summary>
            The center of the circle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadCircle.Radius">
            <summary>
            The radius of the circle.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadCircle.#ctor(Telerik.Charting.RadPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadCircle"/> struct.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="P:Telerik.Charting.RadCircle.Bounds">
            <summary>
            Gets the rectangle that encloses this circle.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadMath">
            <summary>
            Provides static mathematical functions and constants.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.DegToRadFactor">
            <summary>
            The factor used to convert degrees to their radians equivalent.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.RadToDegFactor">
            <summary>
            The factor used to convert radians to their degree equivalent.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadMath.Epsilon">
            <summary>
            Smallest unit such that 1.0+DBL_EPSILON != 1.0.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsZero(System.Double)">
            <summary>
            Determines whether the specified value is close to 0 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsZero(System.Decimal)">
            <summary>
            Determines whether the specified value is close to 0 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsOne(System.Double)">
            <summary>
            Determines whether the specified value is close to 1 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.IsOne(System.Decimal)">
            <summary>
            Determines whether the specified value is close to 1 within the order of EPSILON.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.AreClose(System.Double,System.Double)">
            <summary>
            Determines whether the two specified values are close within the order of EPSILON.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.AreClose(System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the two specified values are close within the order of tolerance.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="tolerance"></param>
        </member>
        <member name="M:Telerik.Charting.RadMath.GetPointDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the distance between two points in a plane.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Charting.RadMath.GetArcPoint(System.Double,Telerik.Charting.RadPoint,System.Double)">
            <summary>
            Gets the point that lies on the arc segment of the ellipse, described by the center and radius parameters.
            </summary>
            <param name="angle"></param>
            <param name="center"></param>
            <param name="radius"></param>
        </member>
        <member name="T:Telerik.Charting.RadPoint">
            <summary>
            Represents a structure that defines a location (X, Y) in a two-dimensional space.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadPoint"/> instance which X and Y values are set to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.X">
            <summary>
            The X-coordinate of the point.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadPoint.Y">
            <summary>
            The Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadPoint"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.op_Equality(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadPoint"/> structures are equal.
            </summary>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.op_Inequality(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are not equal.
            </summary>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.Round(Telerik.Charting.RadPoint)">
            <summary>
            Rounds the X and Y members of the specified <see cref="T:Telerik.Charting.RadPoint"/>.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Charting.RadPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadPoint.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Telerik.Charting.RadRect">
            <summary>
            Represents a Rectangle in the Euclidean plane geometry.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Invalid">
            <summary>
            Invalid rectangle, which Width and Height properties are set to (-1).
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Empty">
            <summary>
            Empty rectangle which values are zeroes.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.X">
            <summary>
            The X-coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Y">
            <summary>
            The Y-coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Width">
            <summary>
            The length of the rectangle along the X-axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadRect.Height">
            <summary>
            The length of the rectangle along the Y-axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(Telerik.Charting.RadPoint,Telerik.Charting.RadPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect"/> struct.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Charting.RadRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadRect"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Charting.RadRect.Round(Telerik.Charting.RadRect)">
            <summary>
            Rounds the rectangle's values by respecting the Width and Height.
            </summary>
            <param name="rect">The <see cref="T:Telerik.Charting.RadRect"/> that will be rounded.</param>
            <returns>A new instance of <see cref="T:Telerik.Charting.RadRect"/> with rounded values.</returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.Floor(Telerik.Charting.RadRect)">
            <summary>
            Rounds the rectangle's value to the closest less than or equal to whole numbers.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.op_Equality(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadRect"/> structures are equal.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.op_Inequality(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadRect"/> structures are not equal.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.Subtract(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Gets the difference between two <see cref="T:Telerik.Charting.RadRect"/> structures.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.ToSquare(Telerik.Charting.RadRect,System.Boolean)">
            <summary>
            Gets a rectangle that has equal width and height and is centered within the specified rect.
            </summary>
            <param name="rect"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.CenterRect(Telerik.Charting.RadRect,Telerik.Charting.RadRect)">
            <summary>
            Centers the specified rectangle within the provided available one.
            </summary>
            <param name="rect"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.IntersectsWith(Telerik.Charting.RadRect)">
            <summary>
            Determines whether the current rect intersects with the specified one.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Telerik.Charting.RadRect.IsSizeValid">
            <summary>
            Determines whether the size of this rect is valid - that is both Width and Height should be bigger than zero.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadRect.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.Contains(System.Double,System.Double)">
            <summary>
            Determines if this RadRect instance contains the point that is described by the arguments.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>Returns true if this rectangle contains the point from the arguments and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadRect.RoundByRespectingLocation(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Rounds the rectangle's values by respecting the X and Right and respecting the Y and Bottom.
            (0.4, 0, 2.2, 0) results in (0, 0, 3, 0). Note: original width = 3, result width = 2.2; original right = 2.6, result right = 3.
            (0.4, 0, 2.0, 0) results in (0, 0, 2, 0). 
            (0.6, 0, 1.8, 0) results in (1, 0, 1, 0). Note: original width = 1.8, result width = 1; original right = 2.4, result right = 2.
            (0.6, 0, 2.0, 0) results in (1, 0, 2, 0). 
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Bottom">
            <summary>
            Gets the Y-coordinate of the bottom side of the rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Right">
            <summary>
            Gets the X-coordinate of the right side of the rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Center">
            <summary>
            Gets the center of this rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RadRect.Location">
            <summary>
            Gets the location (Top-Left corner) of the rectangle.
            </summary>
        </member>
        <member name="T:Telerik.Charting.RadSize">
            <summary>
            Represents a structure that defines a size in the two-dimensional space.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Empty">
            <summary>
            A <see cref="T:Telerik.Charting.RadSize"/> instance which Width and Height are set to 0.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Invalid">
            <summary>
            A <see cref="T:Telerik.Charting.RadSize"/> instance which Width and Height are set to -1.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Width">
            <summary>
            The length along the horizontal axis.
            </summary>
        </member>
        <member name="F:Telerik.Charting.RadSize.Height">
            <summary>
            The length along the vertical axis.
            </summary>
        </member>
        <member name="M:Telerik.Charting.RadSize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.RadSize"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Charting.RadSize.op_Equality(Telerik.Charting.RadSize,Telerik.Charting.RadSize)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are equal.
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
        </member>
        <member name="M:Telerik.Charting.RadSize.op_Inequality(Telerik.Charting.RadSize,Telerik.Charting.RadSize)">
            <summary>
            Determines whether two <see cref="T:Telerik.Charting.RadSize"/> structures are not equal.
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
        </member>
        <member name="M:Telerik.Charting.RadSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Charting.RadSize.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Telerik.Charting.DataPointSeriesModel`1">
            <summary>
            Represents chart series that consist of data points.
            </summary>
            <typeparam name="T">Must be a <see cref="T:Telerik.Charting.DataPoint"/>.</typeparam>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesModel">
            <summary>
            Base non-generic class used for non-generic declarations.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesModel.GetCombinedPlotStrategy">
            <summary>
            Gets the strategy that will be used when series of this type are combined - for example Stacked - on the plot area.
            </summary>
        </member>
        <member name="M:Telerik.Charting.ChartSeriesModel.GetCombinedRoundLayoutStrategy">
            <summary>
            Gets the strategy that will apply layout rounding for combined series of this type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ChartSeriesModel.DefaultPlotMode">
            <summary>
            Gets the default <see cref="T:Telerik.Charting.AxisPlotMode"/> for this series.
            </summary>
        </member>
        <member name="P:Telerik.Charting.DataPointSeriesModel`1.DataPoints">
            <summary>
            Gets the collection of data points contained in this instance.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ISupportCombineMode">
            <summary>
            Identifies chart series that can be combined with other <see cref="T:Telerik.Charting.ISupportCombineMode"/> instances of same type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ISupportCombineMode.CombineMode">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.ChartSeriesCombineMode"/> value for this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.ISupportCombineMode.StackGroupKey">
            <summary>
            Gets or sets the key of the stack where this instance is plotted.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalSeriesModel.CombineMode">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.ChartSeriesCombineMode"/> value that specifies whether this instance should be combined with other instances of same type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.CategoricalSeriesModel.StackGroupKey">
            <summary>
            Gets or sets the key that identifies the stack this instance should be put into.
            </summary>
        </member>
        <member name="T:Telerik.Charting.BezierSeriesModel">
            <summary>
            The model that arranges bezier points on the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.BubbleSeriesModel">
            <summary>
            The model that arranges bubble points on the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesCombineMode">
            <summary>
            Defines how multiple series of same type are combined on the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesCombineMode.None">
            <summary>
            No combining. Each series is plotted independently.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesCombineMode.Cluster">
            <summary>
            Series are combined next to each other.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesCombineMode.Stack">
            <summary>
            Series form stacks.
            </summary>
        </member>
        <member name="F:Telerik.Charting.ChartSeriesCombineMode.Stack100">
            <summary>
            Series for stacks that occupy 100% of the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.ChartSeriesCombineStrategy">
            <summary>
            Handles combination of chart series that are <see cref="T:Telerik.Charting.ISupportCombineMode"/> instances and have their <see cref="P:Telerik.Charting.ISupportCombineMode.CombineMode"/> member specified.
            </summary>
        </member>
        <member name="T:Telerik.Charting.CombineGroup">
            <summary>
            Stores one or more data points of combined chartseries within a group.
            </summary>
        </member>
        <member name="M:Telerik.Charting.FunnelSeriesModel.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Charting.Hlc">
            <summary>
            Represents a struct, which defines a set of three values - High, Low, Close.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Hlc.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.Hlc"/> structure.
            </summary>
            <param name="high">The high value.</param>
            <param name="low">The low value.</param>
            <param name="close">The close value.</param>
        </member>
        <member name="P:Telerik.Charting.Hlc.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="P:Telerik.Charting.Hlc.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:Telerik.Charting.Hlc.Close">
            <summary>
            Gets or sets the close value.
            </summary>
            <value>The close value.</value>
        </member>
        <member name="T:Telerik.Charting.Ohlc">
            <summary>
            Represents a struct, which defines a set of four values - High, Low, Open, Close.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Ohlc.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.Ohlc"/> structure.
            </summary>
            <param name="high">The high value.</param>
            <param name="low">The low value.</param>
            <param name="open">The open value.</param>
            <param name="close">The close value.</param>
        </member>
        <member name="P:Telerik.Charting.Ohlc.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="P:Telerik.Charting.Ohlc.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:Telerik.Charting.Ohlc.Open">
            <summary>
            Gets or sets the open value.
            </summary>
            <value>The open value.</value>
        </member>
        <member name="P:Telerik.Charting.Ohlc.Close">
            <summary>
            Gets or sets the close value.
            </summary>
            <value>The close value.</value>
        </member>
        <member name="M:Telerik.Charting.PieSeriesModel.OnPropertyChanged(Telerik.Charting.RadPropertyEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Charting.RadPropertyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Charting.PieSeriesModel.Range">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.AngleRange"/> structure that defines the starting and sweep angles of the pie.
            </summary>
        </member>
        <member name="P:Telerik.Charting.PieSeriesModel.MaxOffsetFromCenter">
            <summary>
            Gets the maximum point offset from the center.
            </summary>
        </member>
        <member name="T:Telerik.Charting.Range">
            <summary>
            Represents a struct, which defines a set of two values - High, Low.
            </summary>
        </member>
        <member name="M:Telerik.Charting.Range.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Charting.Range"/> structure.
            </summary>
            <param name="low">The low value.</param>
            <param name="high">The high value.</param>
        </member>
        <member name="M:Telerik.Charting.Range.op_Equality(Telerik.Charting.Range,Telerik.Charting.Range)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="range1">The first <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <param name="range2">The second <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.Range.op_Inequality(Telerik.Charting.Range,Telerik.Charting.Range)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="range1">The first <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <param name="range2">The second <see cref="T:Telerik.Charting.Range"/> struct.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Charting.Range.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal
            to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Charting.Range.Equals(Telerik.Charting.Range)">
            <summary>
            Determines whether the specified <see cref="T:Telerik.Charting.Range"/> is equal
            to the current <see cref="T:Telerik.Charting.Range"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            True if the specified <see cref="T:Telerik.Charting.Range"/> is equal to the
            current <see cref="T:Telerik.Charting.Range"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Charting.Range.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="P:Telerik.Charting.Range.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:Telerik.Charting.Range.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="M:Telerik.Charting.RangeBarSeriesModel.GetCombinedRoundLayoutStrategy">
            <summary>
            Gets the strategy that will apply layout rounding for combined series of this type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RangeBarSeriesModel.CombineMode">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.ChartSeriesCombineMode"/> value that specifies whether this instance should be combined with other instances of same type.
            </summary>
        </member>
        <member name="P:Telerik.Charting.RangeBarSeriesModel.StackGroupKey">
            <summary>
            RangeBarSeries do not support stacking and this property is disregarded. 
            </summary>
        </member>
        <member name="T:Telerik.Charting.ScatterSeriesModel">
            <summary>
            The model that arranges scatter points on the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IChartElementPresenter">
            <summary>
            Defines a type which may visualize a logical chart element.
            </summary>
        </member>
        <member name="M:Telerik.Charting.IChartElementPresenter.RefreshNode(Telerik.Charting.ChartNode)">
            <summary>
            Invalidates the visual representation of the specified logical node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Telerik.Charting.IChartElementPresenter.MeasureContent(Telerik.Charting.ChartNode,System.Object)">
            <summary>
            Retrieves the desired size of the specified logical node's content.
            </summary>
            <param name="owner"></param>
            <param name="content"></param>
        </member>
        <member name="M:Telerik.Charting.IChartElementPresenter.InvalidatePalette">
            <summary>
            Forces re-evaluation of the palette of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartElementPresenter.IsVisible">
            <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
        </member>
        <member name="T:Telerik.Charting.IChartSeries">
            <summary>
            Identifies a special <see cref="T:Telerik.Charting.IChartElementPresenter"/> that visualizes <see cref="T:Telerik.Charting.DataPoint"/> instances.
            </summary>
        </member>
        <member name="M:Telerik.Charting.IChartSeries.OnDataPointIsSelectedChanged(Telerik.Charting.DataPoint)">
            <summary>
            Occurs when a <see cref="T:Telerik.Charting.DataPoint"/> owned by the series has its IsSelected property changed.
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:Telerik.Charting.IChartView">
            <summary>
            Defines the root of the whole chart.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.ViewportWidth">
            <summary>
            Gets the visible width of the chart view.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.ViewportHeight">
            <summary>
            Gets the visible height of the chart view.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.ZoomWidth">
            <summary>
            Gets the current scale applied along the horizontal direction.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.ZoomHeight">
            <summary>
            Gets the current scale applied along the vertical direction.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.PlotOriginX">
            <summary>
            Gets the X-coordinate of the top-left corner where the layout should start from.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.PlotOriginY">
            <summary>
            Gets the Y-coordinate of the top-left corner where the layout should start from.
            </summary>
        </member>
        <member name="P:Telerik.Charting.IChartView.PlotAreaClip">
            <summary>
            Gets the rect that encloses the plot area in view coordinates - that is without the zoom factor applied and with the pan offset calculated.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.RadChartLocalizationProvider">
            <summary>
            Provides localization services for RadChartView.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.RadChartStringId">
            <summary>
            Represents localization strings in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.ShowDrillNavigation">
             <summary>
             Gets or sets a value indicating whether DrillBackButton is displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.ShowTitle">
            <summary>
            Gets or sets a value indicating whether title is displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.ShowLegend">
            <summary>
            Gets or sets a value indicating whether legend is displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.TitlePosition">
            <summary>
            Gets or sets the position of the chart title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.TitleElement">
            <summary>
            Gets the chart title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.LegendOffset">
            <summary>
            Determines the position of the legend element. This property only works if LegendPosition is set to Float.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.LegendPosition">
            <summary>
            Determines the position of the legend element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.LegendElement">
            <summary>
            Gets the legend element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.View">
            <summary>
            Gets the chart view displayed in the chart element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartElement.Views">
            <summary>
            Gets the chart view displayed in the chart element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.CurrentViewIndexChanged">
            <summary>
            Occurs when the Current View Index is changed
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.CreateRenderer">
            <summary>
            Fires when the area requies a renderer for the first time.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.LabelFormatting">
            <summary>
            Fires when the content of a point label needs to be formatted for display.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.CreatePoint">
            <summary>
            Occurs when a new DataPoint is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.Drill">
            <summary>
            Fires when the Drilling.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.ContextMenuOpening">
            <summary>
            Occurs when context menu is opening.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartElement.CreatePointElement">
            <summary>
            Occurs when a new DataPointElement is created.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartDataPointCollection.Filter(Telerik.WinControls.UI.IDataPointFilter)">
            <summary>
            
            </summary>
            <param name="filterInterface"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartDataPointCollection.Sort(System.Collections.Generic.IComparer{Telerik.Charting.DataPoint})">
            <summary>
            
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartDataPointCollection.Add(System.Double[])">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartViewControllerCollection.AddRange(Telerik.WinControls.UI.Controller[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartDataPointElementController.ShowContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartTooltipController.DataPointTooltipTextNeeded">
            <summary>
            Occurs when tooltip text for a data point is about to be shown.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ChartTrackballController"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.InitializeFields">
            <summary>
            Initializes the Trackball controller with the default settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.CreateInfoElement">
            <summary>
            Creates the element that is displaying the trackball information.
            </summary>
            <returns>An instance of the <see cref="T:Telerik.WinControls.UI.TrackballInfoElement"/></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetCartesianTrackballElementLocation(System.Drawing.PointF)">
            <summary>
            Gets the location where the info element should be positioned.
            </summary>
            <param name="location">The mouse location.</param>
            <returns>Returns the position of the upper left corner of the info element.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.BuildCartesianPointsDictionary">
            <summary>
            Creates lists of datapoints grouped by their X or Y coordinate depending on the orientation of the chart.
            </summary>
            <returns>The grouped collection of data ponts.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetClosestCartesianPoints(System.Drawing.PointF)">
            <summary>
            Gets the points along horizontal or vertical line closest to the given location depending on the orientation of the chart.
            </summary>
            <param name="location">The location near which to search.</param>
            <returns>List of data point infos on the nearest vertical or horizontal line.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetRadialTrackballElementLocation(System.Drawing.PointF)">
            <summary>
            Gets the location where the info element should be positioned.
            </summary>
            <param name="location">The mouse location.</param>
            <returns>Returns the position of the upper left corner of the info element.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.BuildRadialPointsDictionary">
            <summary>
            Creates lists of datapoints grouped by the angle between the point and the Polar axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.BuildRadarPointsDictionary">
            <summary>
            Creates lists of datapoints grouped by the angle between the point and the Polar axis.
            </summary>
            <returns>The grouped collection of data ponts.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetClosestPolarPoints(System.Drawing.PointF)">
            <summary>
            Gets the points on a radius line closest to the given location.
            </summary>
            <param name="location">The location near which to search.</param>
            <returns>List of data point infos on the nearest radius line.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetTrackballElementLocation(System.Drawing.PointF)">
            <summary>
            Gets the trackball element location.
            </summary>
            <param name="location">The mouse location.</param>
            <returns>The location for the trackball element.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.BuildPointsDictionary">
            <summary>
            Creates lists of datapoints grouped by their X, Y or angle coordinate depending on the type of the chart.
            </summary>
            <returns>The grouped collection of data ponts.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetClosestPoints(System.Drawing.PointF)">
            <summary>
            Gets the points along horizontal, vertical or radius line closest to the given location depending on the type of the chart.
            </summary>
            <param name="location">The location near which to search.</param>
            <returns>List of data point infos on the nearest vertical or horizontal line.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetTrackballText(System.Collections.Generic.List{Telerik.WinControls.UI.DataPointInfo})">
            <summary>
            Gets the text to be displayed in the trackball info element.
            </summary>
            <param name="points">A list of all the points that are on the trackball line.</param>
            <returns>The text to be displayed.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetColorForDataPoint(Telerik.WinControls.UI.ChartSeries,Telerik.Charting.DataPoint)">
            <summary>
            Gets the back color of a given data point from its element.
            </summary>
            <param name="series">The series to which the point belongs.</param>
            <param name="point">The point to get the color for.</param>
            <returns>The color of the point element.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.GetPointText(Telerik.Charting.DataPoint)">
            <summary>
            Gets the text for a specific data point.
            </summary>
            <param name="point">The point.</param>
            <returns>The formatted text for the point.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.MoveTrackball(System.Drawing.PointF)">
            <summary>
            Changes the location of the trackball according to the location.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.OnTextNeeded(Telerik.WinControls.UI.TextNeededEventArgs)">
            <summary>
            Raises the <see cref="E:TextNeeded"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.TextNeededEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartTrackballController.OnLocationChanged(Telerik.WinControls.UI.LocationChangedEventArgs)">
            <summary>
            Raises the <see cref="E:LocationChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.LocationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.Element">
            <summary>
            Gets the info element of the controller.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.LineWidth">
            <summary>
            Gets or sets the width of the trackball line.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.PointsFill">
            <summary>
            Gets or sets the trackball points fill.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.OuterPointsSize">
            <summary>
            Gets or sets the size of the outer circle of the trackball points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.InnerPointSize">
            <summary>
            Gets or sets the size of the inner circle of the trackball points.
            </summary>      
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.IsFixedSize">
            <summary>
            Gets or sets a value indicating whether this trackball info element is with fixed size.
            You have to set the FixedSize property to specify the size.
            </summary>        
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.FixedSize">
            <summary>
            Gets or sets the size to be used when IsFixedSize is set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.InfoElementOffset">
            <summary>
            Gets or sets the offset of the info element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.InteractiveTrackball">
            <summary>
            Gets or sets a value indicating whether trackball will move while the mouse hovers the info element.
            </summary>
            <value>
             If <c>true</c> the trackball will not move while the mouse is inside the bounds of the 
             info element, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.PointFormatString">
            <summary>
            Gets or sets a format string which will be used to format the text for each data point in the info element.
            The defaul value is "{0}:{1}".
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartTrackballController.DrawPoints">
            <summary>
            Gets or sets a value indicating whether points shoudl be drawn on the trackball line.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartTrackballController.TextNeeded">
            <summary>
            Occurs when the text of the trackball info element is changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartTrackballController.LocationChanged">
            <summary>
            Occurs when the location of the trackball is changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.DataPointInfo.#ctor(Telerik.Charting.DataPoint,Telerik.WinControls.UI.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.DataPointInfo"/> class.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="series">The series of the data point.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.DataPointInfo.DataPoint">
            <summary>
            Gets the data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DataPointInfo.Series">
            <summary>
            Gets the series of the current data point.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartPalette">
            <summary>
            Defines the palette semantic for a <see cref="T:Telerik.WinControls.UI.ChartView"/> instance.
            The palette contains <see cref="P:Telerik.WinControls.UI.ChartPalette.GlobalEntries"/>, which are <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> objects, not related to any particular series
            and the <see cref="P:Telerik.WinControls.UI.ChartPalette.SeriesEntries"/> collection, which may be used to define a palette for a series family - e.g. Area.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPalette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ChartPalette"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPalette.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartPalette.Changed">
            <summary>
            Occurs upon a change in some of the entries or when an entry is added/removed/replaced.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartPalette.IsPredefined">
            <summary>
            Gets a value indicating whether the specified palette is predefined and may not be modified by the user.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartPalette.Name">
            <summary>
            Gets or sets the user-friendly identifier for the palette.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartPalette.GlobalEntries">
            <summary>
            Gets the collection that stores entries not related to any particular series.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartPalette.SeriesEntries">
            <summary>
            Gets the collection with all the per-series definitions registered with the palette.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartPaletteConverter">
            <summary>
            Represents a converter that may convert string value to a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>  not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can
            be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />
            should be called to find a common set of values the object supports; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartPaletteConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type
            converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context that can be used to extract additional information
            about the environment from which this converter is invoked. This parameter or
            properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            that holds a standard set of valid values, or null if the data type does not
            support a standard set of values.
            </returns>
        </member>
        <member name="T:Telerik.WinControls.UI.KnownPalette">
            <summary>
            Contains all the predefined palettes for <see cref="T:Telerik.WinControls.UI.ChartView"/>. A predefined palette may not be further modified once loaded.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.ArcticPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Arctic"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.AutumnPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Autumn"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.ColdPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Cold"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.FlowerPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Flower"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.ForestPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Forest"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.GrayscalePaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Grayscale"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.GroundPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Ground"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.LilacPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Lilac"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.MetroPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Metro"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.NaturalPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Natural"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.PastelPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Pastel"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.RainbowPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Rainbow"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.SpringPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Spring"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.SummerPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Summer"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.WarmPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Warm"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.Windows8PaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Warm"/> palette.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.KnownPalette.SunPaletteName">
            <summary>
            Defines the name of the <see cref="P:Telerik.WinControls.UI.KnownPalette.Sun"/> palette.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Arctic">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Autumn">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Cold">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Flower">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Forest">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Grayscale">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Ground">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Lilac">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Metro">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Natural">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Pastel">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Rainbow">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Spring">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Summer">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Warm">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series Family. Colors are warm and soft.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Windows8">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 17 distinctive entires per series Family. Colors are warm and soft.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KnownPalette.Sun">
            <summary>
            Represents a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> with 8 distinctive entires per series family. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PaletteEntry">
            <summary>
            Defines an entry in a <see cref="T:Telerik.WinControls.UI.ChartPalette"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> struct.
            </summary>
            <param name="fill">The fill.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> struct.
            </summary>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> struct.
            </summary>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="additionalFill">The secondary fill.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> struct.
            </summary>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="additionalFill">The secondary fill.</param>
            <param name="additionalStroke">The secondary stroke.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.op_Equality(Telerik.WinControls.UI.PaletteEntry,Telerik.WinControls.UI.PaletteEntry)">
            <summary>
            Determines whether the two palette entries are equal.
            </summary>
            <param name="entry1"></param>
            <param name="entry2"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.op_Inequality(Telerik.WinControls.UI.PaletteEntry,Telerik.WinControls.UI.PaletteEntry)">
            <summary>
            Determines whether the two palette entries are not equal.
            </summary>
            <param name="entry1"></param>
            <param name="entry2"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PaletteEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteEntry.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Brush"/> instance that defines the fill of the corresponding visual objects.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteEntry.Stroke">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Brush"/> instance that defines the stroke of the corresponding visual objects.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteEntry.AdditionalFill">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Brush"/> instance that defines the up-fill of the corresponding visual objects.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteEntry.AdditionalStroke">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Brush"/> instance that defines the stroke of the corresponding visual objects.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteEntry.IsPredefined">
            <summary>
            Gets a value indicating whether the specified palette is predefined and may not be modified by the user.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PaletteEntryCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.WinControls.UI.PaletteEntry"/> objects that target particular <see cref="T:Telerik.WinControls.UI.ChartSeries"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PaletteFamily.Name">
            <summary>
            Gets or sets the family of <see cref="T:Telerik.WinControls.UI.ChartSeries"/> targeted by this collection.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.RadChartViewDesigner.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartViewDesigner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartViewDesigner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RangeSelectorViewElement.SeriesInitializing">
            <summary>
            Occurs when series is Initializing.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RangeSelectorViewElement.SeriesInitialized">
            <summary>
            Occurs when series is Initialized.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RangeSelectorViewElement.RefreshNeeded">
            <summary>
            Occurs when [refresh needed].
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RangeSelectorViewElement.LabelInitializing">
            <summary>
            Occurs when labels in scale element are initializing. This event firing only for the labels that are displaying in RadRangeSelector.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.CartesianChartAnnotation">
            <summary>
            This is the base class for all chart annotations in a <see cref="T:Telerik.WinControls.UI.CartesianArea"/>.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartAnnotation">
            <summary>
            This is the base class for all chart annotations.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Level">
            <summary>
            Gets the level.
            </summary>
            <value>The level.</value>
            
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Children">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderLeftColor">
            <summary>
            Gets and sets the left border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderTopColor">
            <summary>
            Gets and sets the top border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderRightColor">
            <summary>
            Gets and sets the right border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderBottomColor">
            <summary>
            Gets and sets the bottom border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderLeftShadowColor">
            <summary>
            Gets and sets the left shadow color. This option applies only if
            fourBorders is chosen, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderTopShadowColor">
            <summary>
            Gets and sets the top shadow color. This option applies only if
            fourBorders is chosen, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderRightShadowColor">
            <summary>
            Gets and sets the right shadow color. This option applies only if
            fourBorders is chosen, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderBottomShadowColor">
            <summary>
            Gets and sets the bottom shadow color. This option applies only if
            fourBorders is chosen, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderBoxStyle">
            <summary>
            	<para class="MsoNormal" style="MARGIN: 0in 0in 0pt">
            		<span style="FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: Verdana">Gets or sets the
                Border style. The two possible values are SingleBorder and FourBorder. In the
                single border case, all four sides share the same appearance although the entire
                border may have gradient. In four border case, each of the four sides may differ in
                appearance. For example, the left border may have different color, shadowcolor, and
                width from the rest. When SingleBorder is chosen, you should use the general
                properties such as width and color, and respectively, when the FourBorder style is
                chosen you should use properties prefixed with the corresponding side, for example,
                LeftColor, LeftWidth for the left side.</span></para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderDrawMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderWidth">
            <summary>
            Gets or sets a float value width of the left border. This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property and
            affects only the width of the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderLeftWidth">
            <summary>
            Gets or sets a float value width of the left border. This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property and
            affects only the width of the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderTopWidth">
            <summary>
            Gets or sets a float value width of the top border . This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property,
            and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderRightWidth">
            <summary>
            Gets or sets a float value width of the right border. This
            property has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em>
            property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderBottomWidth">
            <summary>
            Gets or sets a float value width. This property has effect only if
            <em>FourBorders</em> style is used in <em>BoxStyle</em> property, and affects only the
            bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderGradientAngle">
            <summary>
            Gets or sets gradient angle for linear gradient measured in degrees.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderGradientStyle">
            <summary>
            Gets or sets gradient style. Possible styles are solid, linear, radial, glass,
            office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderInnerColor">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderInnerColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderInnerColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderInnerColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BorderDashPattern">
            <summary>
            Specifies the style of dashed lines drawn with a border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Size">
            <summary>
                Gets or sets the size of the element which is the height and width of the visual
                rectangle that would contain the graphics of the element. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Shape">
            <summary>
            Gets or sets an instance of the Shape object of an element. The shape of the
            element is both responsible for clipping the element's children and for providing its'
            border(s) with custom shape.
            </summary>
            <remarks>
            Value of null (or Nothing in VisualBasic.Net) indicates that element has rectangular (or no) shape.
            Shape is an object that defines the bounding graphics path of an element. Graphics clip is always applied when an element has shape.
            Shape is considered when painting the border element, and when hit-testing an element.
            Some predefined shapes are available, like <see cref="T:Telerik.WinControls.RoundRectShape"/> or <see cref="T:Telerik.WinControls.EllipseShape"/>.
            <see cref="T:Telerik.WinControls.CustomShape"/> offers a way to specify element's shape with a sequance of points and curves using code 
            or the design time <see cref="T:Telerik.WinControls.ElementShapeEditor"/>
            	<see cref="T:System.Drawing.Design.UITypeEditor"/>.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.BackgroundShape">
            <summary>
            Gets or sets the RadImageShape that describes the background of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.Padding">
            <summary>
            Gets or sets the padding of the element.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.UIChartElement.SmoothingMode">
            <summary>
            Gets or sets the SmoothingMode of the element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartAnnotation.OnAttached(Telerik.WinControls.UI.UIChartElement)">
            <summary>
            Occurs when the annotation has been successfully attached to its owning <see cref="T:Telerik.WinControls.UI.ChartView"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartAnnotation.OnDettached">
            <summary>
            Occurs when the annotation has been successfully detached from its owning <see cref="T:Telerik.WinControls.UI.ChartView"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartAnnotation.ClipToPlotArea">
            <summary>
            Gets or sets a value indicating whether this instance will be clipped to the bounds of the plot area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartAnnotation.DrawMode">
            <summary>
            Gets or sets a value indicating the position of the annotation in the chart draw stack.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartAnnotation.PositonOffset">
            <summary>
            Gets or sets the offset of the label of the annotations in pixels.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.CartesianGridLineAnnotation">
            <summary>
            Allows you to place a straight line at a specific place in your cartesian chart. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianGridLineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianGridLineAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianGridLineAnnotation.#ctor(Telerik.WinControls.UI.CartesianAxis,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianGridLineAnnotation"/> class.
            </summary>
            <param name="axis">The axis against which the annotation will be ploted.</param>
            <param name="value">The value on the axis where the annotation will be plotted.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGridLineAnnotation.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGridLineAnnotation.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGridLineAnnotation.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.#ctor(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation"/> class.
            </summary>
            <param name="horizontalFrom">The value of the horizontal axis where the annotation will start.</param>
            <param name="horizontalTo">The value of the horizontal axis where the annotation will end.</param>
            <param name="verticalFrom">The value of the vertical axis where the annotation will start.</param>
            <param name="verticalTo">The value of the vertical axis where the annotation will end.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.HorizontalAxis">
            <summary>
            Gets or sets the horizontal axis.
            </summary>
            <value>The horizontal axis.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.VerticalAxis">
            <summary>
            Gets or sets the vertical axis.
            </summary>
            <value>The vertical axis.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.HorizontalFrom">
            <summary>
            Gets or sets the horizontal value that the marked zone will be drawn from. If this value is null the marked zone will reach the plot area's end.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.HorizontalTo">
            <summary>
            Gets or sets the horizontal value that the marked zone will be drawn to. If this value is null the marked zone will reach the plot area's end.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.VerticalFrom">
            <summary>
            Gets or sets the vertical value that the marked zone will be drawn from. If this value is null the marked zone will reach the plot area's end.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianMarkedZoneAnnotation.VerticalTo">
            <summary>
            Gets or sets the vertical value that the marked zone will be drawn to. If this value is null the marked zone will reach the plot area's end.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.CartesianPlotBandAnnotation">
            <summary>
            Allows you highlight the area between two values drawn by the <see cref="P:Telerik.WinControls.UI.CartesianPlotBandAnnotation.Axis"/> in a cartesian chart.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianPlotBandAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianPlotBandAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianPlotBandAnnotation.#ctor(Telerik.WinControls.UI.CartesianAxis,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CartesianPlotBandAnnotation"/> class.
            </summary>
            <param name="axis">The axis agains which the annotation will be plotted.</param>
            <param name="from">The value of the axis where the annotation will start.</param>
            <param name="to">The value of the axis where the annotation will end.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianPlotBandAnnotation.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianPlotBandAnnotation.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianPlotBandAnnotation.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianPlotBandAnnotation.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.PolarChartAnnotation">
            <summary>
            This is the base class for all chart annotations in a Polar chart.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarChartAnnotation.ChartAxisChanged(Telerik.WinControls.UI.Axis,Telerik.WinControls.UI.Axis)">
            <summary>
            Occurs when one of the axes of the owning Polar chart has been changed.
            </summary>
            <param name="oldAxis">The old axis.</param>
            <param name="newAxis">The new axis.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarChartAnnotation.OnAttached(Telerik.WinControls.UI.UIChartElement)">
            <summary>
            Occurs when the presenter has been successfully attached to its owning <see cref="T:Telerik.WinControls.UI.ChartView"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.RadialAxisGridLineAnnotation">
            <summary>
            Allows you to place an ellipse at a specific place in your polar chart. This annotation uses the polar chart's polar axis.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadialAxisGridLineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RadialAxisGridLineAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadialAxisGridLineAnnotation.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RadialAxisGridLineAnnotation"/> class.
            </summary>
            <param name="value">The value on the radial axis where the annotation will be plotted.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RadialAxisGridLineAnnotation.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation">
            <summary>
            Allows you highlight the area between two values drawn by the polar chart's polar axis.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation"/> class.
            </summary>
            <param name="from">The value on the polar axis where the annotation will start.</param>
            <param name="to">The value on the polar axis where the annotation will end.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxisPlotBandAnnotation.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.PolarAxisGridLineAnnotation">
            <summary>
            Allows you to place a straight line at a specific place in your polar chart. This annotation uses the polar chart's radial axis.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarAxisGridLineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PolarAxisGridLineAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolarAxisGridLineAnnotation.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PolarAxisGridLineAnnotation"/> class.
            </summary>
            <param name="value">The value on the polar axis where the annotation will be plotted.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxisGridLineAnnotation.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation">
            <summary>
            Allows you highlight the area between two values drawn by the polar chart's radial axis.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation"/> class.
            </summary>
            <param name="from">The value on the radial axis where the annotation will start.</param>
            <param name="to">The value on the radial axis where the annotation will end.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadialAxisPlotBandAnnotation.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.AxisTitleElement.Text">
            <summary>
            Gets or sets the element text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelFitMode">
            <summary>
            Gets or sets a value that determines how the axis labels will be laid out when they are overlapping each other.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelFormat">
            <summary>
            Gets or sets the format used to format all the labels present on the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelFormatProvider">
            <summary>
            Gets or sets the format provider to be used for the labels of the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelInterval">
            <summary>
            Gets or sets the step at which labels are positioned.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelOffset">
            <summary>
            Gets or sets index-based offset of the first tick to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LabelRotationAngle">
            <summary>
            Gets or sets index-based offset of the first tick to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LastLabelVisibility">
            <summary>
            Gets or sets the strategy that defines the last axis label visibility.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.LineWidth">
            <summary>
            Gets or sets the thickness used to display the line of the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.MajorTickOffset">
            <summary>
            Gets or sets index-based offset of the first tick to be displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.ShowLabels">
            <summary>
            Gets or sets a value indicating whether labels will be displayed on this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.TickLength">
            <summary>
            Gets or sets the length of a single tick present on the axis. Useful when custom tick templates are specified.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.TickWidth">
            <summary>
            Gets or sets the thickness of a single tick present on the axis. Useful when custom tick templates are specified.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.Title">
            <summary>
            Gets or sets the title of the associated logical axis model.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Axis.TitleElement">
            <summary>
            Gets or sets the title element of the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LineAxis.IsInverse">
            <summary>
            Gets or sets a value that indicates whether the axis is inverse.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DataPointElement.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PiePointElement.LegendTitle">
            <summary>
            Gets or sets the title that will be used by chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PiePointElement.IsVisibleInLegend">
            <summary>
            Gets or sets whether this series will be used in chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelPointElement.LegendTitle">
            <summary>
            Gets or sets the title that will be used by chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelPointElement.IsVisibleInLegend">
            <summary>
            Gets or sets whether this series will be used in chart legend.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ILegendInfoProvider">
            <summary>
            Represents provider for <see cref="T:Telerik.WinControls.UI.LegendItem"/> objects.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ILegendInfoProvider.LegendInfos">
            <summary>
            Collection of <see cref="T:Telerik.WinControls.UI.LegendItem"/> objects that hold the information required to display legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartArea.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartArea.Axes">
            <summary>
            Gets the collection containing all the axes presented by this instance.
            </summary>
            <value>The axes.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartArea.Series">
            <summary>
            Gets the collection containing all the series presented by this instance.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartArea.Annotations">
            <summary>
            Gets the collection containing all the annotations presented by this instance.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.LabelFormat">
            <summary>
            Gets or sets the format used to format all the labels present on the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.ShowLabels">
            <summary>
            Gets or sets a value indicating whether the series will display a label associated with each data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.LabelFormatProvider">
            <summary>
            Gets or sets the format provider to be used for the labels of the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.PointSize">
            <summary>
            Gets or sets the size of the points of the series
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.DrawLinesToLabels">
            <summary>
            Gets or sets a value indicating whether to draw lines between data points and labels.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.SyncLinesToLabelsColor">
            <summary>
            Gets or sets a value indicating whether to sync the color of the line connecting a data point and its label.
            </summary>
            <value>
            <c>true</c> if color is synced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.LinesToLabelsColor">
            <summary>
            Gets or sets the color of the lines connecting data points to their labels.
            </summary>
            <value>
            The color of the lines.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.DataSource">
            <summary>
            Gets or sets the data source of the <see cref="T:Telerik.WinControls.UI.ChartSeries"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.DataMember">
            <summary>
            Gets or sets the name of the list or table in the data source for which the <see cref="T:Telerik.WinControls.UI.ChartSeries"/> is bound. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.Family">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.Bounds">
            <summary>
            Gets the bounds of the series
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartSeries.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartSeries.CreatePoint">
            <summary>
            Occurs when a new DataPoint is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartSeries.TrackballPointTextNeeded">
            <summary>
            When the trackball is shown, this event is fired for every point that is being currently shown.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianSeries.GetColorForMultiAxis">
            <summary>
            Gets the color that would be used to draw the series axes when in multi axis mode.
            </summary>
            <returns>The axes color.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.LegendTitle">
            <summary>
            Gets or sets the title that will be used by chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.IsVisibleInLegend">
            <summary>
            Gets or sets whether this series will be used in chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.HorizontalAxis">
            <summary>
            Gets or sets the visual <see cref="T:Telerik.WinControls.UI.CartesianAxis"/> instance that will be used to plot points along the horizontal (X) axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.VerticalAxis">
            <summary>
            Gets or sets the visual <see cref="T:Telerik.WinControls.UI.CartesianAxis"/> instance that will be used to plot points along the vertical (Y) axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.StackGroupKey">
            <summary>
            Gets or sets the key that defines in which stack group this series will be included if its <see cref="P:Telerik.WinControls.UI.CartesianSeries.CombineMode"/> equals Stack or Stack100.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianSeries.CombineMode">
            <summary>
            Gets or sets the combination mode to be used when data points are plotted.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LineSeries.Spline">
            <summary>
            Gets or sets a value indicating whether the series will be drawn as a spline.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LineSeries.SplineTension">
            <summary>
            Gets or sets a value indicating the tension of the spline. Spline property must be set to true for this property to have effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AreaSeries.StrokeMode">
            <summary>
            Gets or sets the mode that defines how the area is stroked.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ScatterLineSeries.Spline">
            <summary>
            Gets or sets a value indicating whether the series will be drawn as a spline.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ScatterLineSeries.SplineTension">
            <summary>
            Gets or sets a value indicating the tension of the spline. Spline property must be set to true for this property to have effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BubbleSeries.Scale">
            <summary>
            Gets or sets a fixed scale for the relation between the size of the bubbles and their value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BubbleSeries.AutoScale">
            <summary>
            Defines whether the size of the bubbles is calculated automatically by the chart engine. If set to false bubble values are scaled using the Scale property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BubbleSeries.AutoScaleMaxWidth">
            <summary>
            Gets or sets the maximum size in pixels of a single bubble when AutoScale is true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.DrawVerticalStripes">
            <summary>
            Gets or sets a value indicating whether vertical stripes will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.DrawHorizontalStripes">
            <summary>
            Gets or sets a value indicating whether horizontal stripes will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.DrawVerticalFills">
            <summary>
            Gets or sets a value indicating whether the space between vertical stripes will be filled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.DrawHorizontalFills">
            <summary>
            Gets or sets a value indicating whether the space between horizontal sripes will be filled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.AlternatingHorizontalColor">
            <summary>
            Gets or sets a value indicating whether horizontal space between stripes should be filled with alternating color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianGrid.AlternatingVerticalColor">
            <summary>
            Gets or sets a value indicating whether vertical space between stripes should be filled with alternating color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadialAxis.SweepDirection">
            <summary>
            Gets or sets the sweep direction.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CategoricalRadialAxis.MajorTickInterval">
            <summary>
            Gets or sets the step at which ticks are positioned.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartView.DeferRefresh">
            <summary>
            Defers the refresh.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartView.OnLabelFormatting(System.Object,Telerik.WinControls.UI.ChartViewLabelFormattingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.WinControls.UI.ChartView.LabelFormatting"/> event
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartView.OnAxisLabelFormatting(System.Object,Telerik.WinControls.UI.ChartAxisLabelFormattingEventArgs)">
            <summary>
            Called when formatting axes' labels.
            </summary>
            <param name="sender">The label element.</param>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.ChartAxisLabelFormattingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartView.DataSource">
            <summary>
            Gets or sets the data source of the <see cref="T:Telerik.WinControls.UI.ChartSeries"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartView.DataMember">
            <summary>
            Gets or sets the name of the list or table in the data source for which the <see cref="T:Telerik.WinControls.UI.ChartSeries"/> is bound. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartView.UseDataSource">
            <summary>
            Automatically setup DataSource of ChartSeries on attaching using this DataSource only when DataSource property of ChartSeries is null
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.SelectedPointChanging">
            <summary>
            Occurs when the selected point is changing
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.SelectedPointChanged">
            <summary>
            Occurs when the selected point changes
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.CreateRenderer">
            <summary>
            Fired when the area requies an renderer for the first time.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.DataError">
            <summary>
            Occurs when a data error is detected.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.CreatePointElement">
            <summary>
            Occurs when a new DataPointElement is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.CreatePoint">
            <summary>
            Occurs when a new DataPoint is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.LabelFormatting">
            <summary>
            Fires when the content of a point label needs to be formatted for display.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.AxisLabelFormatting">
            <summary>
            Occurs when the content of a axis label needs to be formatted for display.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.ZoomChanging">
            <summary>
            Occurs when [zoom changing].
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.ZoomChanged">
            <summary>
            Occurs when [zoom changed].
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.PanChanging">
            <summary>
            Occurs when [pan changing].
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ChartView.PanChanged">
            <summary>
            Occurs when [pan changed].
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianAxis.SyncVisualSettings">
            <summary>
            Syncs the visual settings of the first series plotted upon this axis and the axis.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CartesianAxis.GetLocationOfValue(System.Object)">
            <summary>
            Gets the location in pixels for the given value along the axis. The method takes into account whether the axis is vertical or horizontal.
            </summary>
            <param name="value">A value from the axis values range.</param>
            <returns>The location in pixesls.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.HorizontalLocation">
            <summary>
            Gets or sets the horizontal location of the axis in relation to the plot area.
            </summary>
            <value>The horizontal location.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.VerticalLocation">
            <summary>
            Gets or sets the vertical location of the axis in relation to the plot area.
            </summary>
            <value>The vertical location.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.AutomaticBorderColor">
            <summary>
            When in multi-axis mode this property gets or sets a value indicating whether the color of the axis and the series will be synced.
            </summary>
            <value>
            <c>true</c> if color is taken from the series otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.IsMultiAxis">
            <summary>
            Gets a value indicating whether this axis is part of a vertical or horizontal multi axis layout.
            </summary>
            <returns>
              <c>true</c> if this is part of multi axis chart otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ClipLabels">
            <summary>
            Gets or sets a value indicating whether axis labels will be clipped to the axis width for horizontal and the axis height for vertical axes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.StartPositionAxis">
            <summary>
            Gets or sets the axis aling which this axis will be aligned.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.StartPositionValue">
            <summary>
            Gets or sets the value of the StartPositionAxis where this axis should be aligned.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ScaleBreaks">
            <summary>
            Allows adding and removing scale breaks to this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.HasScaleBreaks">
            <summary>
            Gets a value indicating whether the axis has scale breaks added to it.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ScaleBreakStyle">
            <summary>
            Gets or sets the style of the scale breaks of this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ScaleBreakSize">
            <summary>
            Gets or sets the size of the gap drawn for each of the scale breaks of this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ScaleBreakBorderColor">
            <summary>
            Gets or sets the border color of the scale breaks of this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CartesianAxis.ScaleBreakBackColor">
            <summary>
            Gets or sets the back color of the scale breaks of this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CategoricalAxis.GapLength">
            <summary>
            Gets or sets the gap (in the range [0, 1]) to be applied when calculating each plotted <see cref="T:Telerik.WinControls.UI.CartesianSeries"/> position.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CategoricalAxis.PlotMode">
            <summary>
            Gets or sets the plot mode used to position points along the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.CategoricalAxis.MajorTickInterval">
            <summary>
            Gets or sets the step at which ticks are positioned.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeCategoricalAxis.DateTimeComponent">
            <summary>
            Gets or sets the <see cref="P:Telerik.WinControls.UI.DateTimeCategoricalAxis.DateTimeComponent"/> used to determine how data points will be grouped.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.DateTimeContinuousAxis.GetLocationOfValue(System.Object)">
            <summary>
            Gets the location in pixels for the given value along the axis. The method takes into account whether the axis is vertical or horizontal.
            </summary>
            <param name="value">A DateTime value from the axis values range.</param>
            <returns>The location in pixesls.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.MaximumTicks">
            <summary>
            Gets or sets the maximum ticks that might be displayed on the axis.
            This property is useful in some corner cases when ticks may become a really big number.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.GapLength">
            <summary>
            Gets or sets the gap (in the range [0, 1]) to be applied when calculating each plotted <see cref="T:Telerik.WinControls.UI.ChartSeries"/> position.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.MajorStep">
            <summary>
            Gets or sets the user-defined step between two adjacent ticks on the axis. Specify TimeSpan.Zero to clear the value.
            If not specified, the step will be automatically determined, depending on the smallest difference between any two dates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.MajorStepUnit">
            <summary>
            Gets or sets the unit that defines the custom major step of the axis.
            If no explicit step is defined, the axis will automatically calculate one, depending on the smallest difference between any two dates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.Minimum">
            <summary>
            Gets or sets the custom minimum of the axis.
            Specify DateTime.MinValue to clear the property value so that the minimum is auto-generated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.Maximum">
            <summary>
            Gets or sets the custom maximum of the axis.
            Specify DateTime.MaxValue to clear the property value so that the maximum is auto-generated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.PlotMode">
            <summary>
            Gets or sets the mode which determines how points are plotted by this axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.ActualRange">
            <summary>
            Gets the actual range used by the axis to plot data points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DateTimeContinuousAxis.TickOrigin">
            <summary>
            Gets or sets a value that in combination with the value of the <seealso cref="P:Telerik.WinControls.UI.DateTimeContinuousAxis.MajorStep"/> determines 
            the position of the ticks on the axis. The axis will generate the ticks and labels in a way so 
            that a label would be positioned at the given <c>TickOrigin</c>. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PieSeries.RadiusFactor">
            <summary>
            Gets or sets a fraction, which multiplied by the diameter of the series, produces the final size of the chart. The property can increase and descrease the size of the draw parts.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PieSeries.LabelMode">
            <summary>
            Gets or sets label mode of the Pie RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PieSeries.LabelsOffsetFromCenter">
            <summary>
            Gets or sets the distance factor by which the labels are offset from the center.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PieSeries.Range">
            <summary>
            Gets or sets the <see cref="T:Telerik.Charting.AngleRange"/> structure that defines the starting and sweep angles of the pie.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.DonutSeries.InnerRadiusFactor">
            <summary>
            Gets or sets the radius of the DonutSeries hole. The value should range from 0 to 1.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartViewContextMenuOpeningEventHandler">
            <summary>
            Represents the method that will handle the ContextMenuOpening events of a RadChartView.
            </summary>
            <param name="sender">The event sender, typicaly this is RadChartView</param>
            <param name="e">Instance of ContextMenuOpeningEventArgs containing the data related with this event</param>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartViewContextMenuOpeningEventArgs">
            <summary>
            Provides data for the ContextMenuOpening event
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartViewContextMenuOpeningEventArgs.#ctor(Telerik.WinControls.UI.RadContextMenu)">
            <summary>
            Initializes a new instance of the GridViewRowEventArgs class.
            </summary>
            <param name="contextMenu">the context menu which is associated with this provider</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewContextMenuOpeningEventArgs.ContextMenu">
            <summary>
            Gets or sets the context menu which is associated with this provider
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs">
            <summary>
            Provides data for the SelectedPointChanged event
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs.OldSelectedSeries">
            <summary>
            Gets the selected data point chart series.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs.NewSelectedSeries">
            <summary>
            Gets the new selected data point chart series.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs.OldSelectedPoint">
            <summary>
            Gets the selected data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs.NewSelectedPoint">
            <summary>
            Gets the new selected data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangedEventArgs.SelectionMode">
            <summary>
            Gets the current selection mode
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs">
            <summary>
            Provides data for the SelectedPointChanging event
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs.OldSelectedSeries">
            <summary>
            Gets the selected data point chart series.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs.NewSelectedSeries">
            <summary>
            Gets the new selected data point chart series.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs.OldSelectedPoint">
            <summary>
            Gets the selected data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs.NewSelectedPoint">
            <summary>
            Gets the new selected data point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewSelectedPointChangingEventArgs.SelectionMode">
            <summary>
            Gets the current selection mode
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartViewDataErrorEventArgs.Exception">
            <summary>
            Gets the exception that represents the error.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TrackballPointTextNeededEventArgs.Text">
            <summary>
            Gets the default format string that will be used for formatting the text for the given point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.TrackballPointTextNeededEventArgs.Point">
            <summary>
            Gets the point for which text is needed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ValuePeriodIndicatorBase.Period">
            <summary>
            Gets or sets the indicator period.
            </summary>
            <value>The period.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.AdaptiveMovingAverageKaufmanIndicator.SlowPeriod">
            <summary>
            Gets or sets the "SlowPeriod" parameter of the <see cref="T:Telerik.WinControls.UI.AdaptiveMovingAverageKaufmanIndicator"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AdaptiveMovingAverageKaufmanIndicator.FastPeriod">
            <summary>
            Gets or sets the "FastPeriod" parameter of the <see cref="T:Telerik.WinControls.UI.AdaptiveMovingAverageKaufmanIndicator"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.HighLowClosePeriodIndicatorBase.Period">
            <summary>
            Gets or sets the indicator period.
            </summary>
            <value>The period.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.IndicatorHlcValueDataPoint.High">
            <summary>
            Gets or sets the high associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.IndicatorHlcValueDataPoint.Low">
            <summary>
            Gets or sets the low associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.IndicatorHlcValueDataPoint.Close">
            <summary>
            Gets or sets the close associated with the point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RelativeMomentumIndexIndicator.MomentumPeriod">
            <summary>
            Gets or sets the shift. This is the momentum period.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MacdIndicatorBase.SignalPeriod">
            <summary>
            Gets or sets the indicator signal period.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UltimateOscillatorIndicator.Period2">
            <summary>
            Gets or sets the second period.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.UltimateOscillatorIndicator.Period3">
            <summary>
            Gets or sets the third period.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.StackElement">
            <summary>
            Gets the stack element used for organizing the legend items.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.TitleElement">
            <summary>
            Gets the title element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.LegendTitle">
            <summary>
            Gets or sets the legend title text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.TitlePosition">
            <summary>
            Gets or sets the position of the legend title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.Provider">
            <summary>
            Gets or sets the provider for the items that will be displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChartLegendElement.Items">
            <summary>
            Collection of <see cref="T:Telerik.WinControls.UI.LegendItem"/> objects that hold the information required for display in a legend.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LegendItem">
            <summary>
            Data representation of the legend items displayed in the chart legend.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.LegendItem.#ctor(Telerik.WinControls.UI.UIChartElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.LegendItem"/> class.
            </summary>
            <param name="element">The element this legend item represents.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItem.Title">
            <summary>
            Gets and set the Legend Title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItem.Element">
            <summary>
            Gets the element that this legend item represents.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItemElement.LegendItem">
            <summary>
            Gets the legend item that holds the data displayed in this element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItemElement.MarkerElement">
            <summary>
            Gets the marker element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItemElement.TitleElement">
            <summary>
            Gets the title element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItemElementCreatingEventArgs.ItemElement">
            <summary>
            Gets or sets the item element that will be created.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LegendItemElementCreatingEventArgs.LegendItem">
            <summary>
            Gets the legend item which holds the data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericRadialAxis.DesiredTickCount">
            <summary>
            Gets or sets the user-defined number of ticks presented on the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericRadialAxis.MajorStep">
            <summary>
            Gets or sets the major step between each axis tick.
            By default the axis itself will calculate the major step, depending on the plotted data points.
            </summary>
            <remarks> You can reset this property by setting it to 0 to restore the default behavior.</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericRadialAxis.RangeExtendDirection">
            <summary>
            Gets or sets a value that specifies how the auto-range of this axis will be extended so that each data point is visualized in the best possible way.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelSeries.LabelAlignment">
            <summary>
            Gets or sets the alignemnt of the label of each funnel segment.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelSeries.NeckRatio">
            <summary>
            Gets or sets the ratio between the top and the bottom bases of the whole funnel series. The property can take effect only if the DynamicSlopeEnabled property is set to false.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelSeries.DynamicSlope">
            <summary>
            Gets or sets whether the form of each segment will be based on the ratio between the value from the current and the next segment. Default value is false.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelSeries.DynamicHeight">
            <summary>
            Gets or sets how segments height is calculated. When false all the segments will share the same height. When true the height of each segment is determined according to its value. Default value is true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.FunnelSeries.SegmentSpacing">
            <summary>
            Gets or sets the space between the different segments of the funnel chart in pixels.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarSeries.LegendTitle">
            <summary>
            Gets or sets the title that will be used by chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarSeries.IsVisibleInLegend">
            <summary>
            Gets or sets whether this series will be used in chart legend.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarSeries.PolarAxis">
            <summary>
            Gets or sets the polar axis of the radar chart.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarSeries.RadialAxis">
            <summary>
            Gets or sets the radial axis of the radar chart.
            </summary>
            
        </member>
        <member name="P:Telerik.WinControls.UI.PolarLineSeries.Spline">
            <summary>
            Gets or sets a value indicating whether the series will be drawn as a spline.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarLineSeries.SplineTension">
            <summary>
            Gets or sets a value indicating the tension of the spline. Spline property must be set to true for this property to have effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.DrawPolarStripes">
            <summary>
            Gets or sets a value indicating whether polar stripes will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.DrawRadialStripes">
            <summary>
            Gets or sets a value indicating whether radial stripes will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.DrawPolarFills">
            <summary>
            Gets or sets a value indicating whether the space between polar stripes will be filled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.DrawRadialFills">
            <summary>
            Gets or sets a value indicating whether the space between radial sripes will be filled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.AlternatingRadialColor">
            <summary>
            Gets or sets a value indicating whether radial fills between stripes should be filled with alternating color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarGrid.AlternatingPolarColor">
            <summary>
            Gets or sets a value indicating whether polar fills between stripes should be filled with alternating color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadarLineSeries.Spline">
            <summary>
            Gets or sets a value indicating whether the series will be drawn as a spline.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadarLineSeries.SplineTension">
            <summary>
            Gets or sets a value indicating the tension of the spline. Spline property must be set to true for this property to have effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RangeSeries.Spline">
            <summary>
            Gets or sets a value indicating whether the series will be drawn as a spline.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RangeSeries.SplineTension">
            <summary>
            Gets or sets a value indicating the tension of the spline. Spline property must be set to true for this property to have effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ScatterAreaSeries.StrokeMode">
            <summary>
            Gets or sets the mode that defines how the area is stroked.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartAxisCollection.AddRange(Telerik.WinControls.UI.Axis[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartAxisCollection.Purge">
            <summary>
            Remove all unused axes from the collection
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartSeriesCollection.AddRange(Telerik.WinControls.UI.ChartSeries[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChartViewCollection.AddRange(Telerik.WinControls.UI.ChartView[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.NumericalAxis.GetLocationOfValue(System.Object)">
            <summary>
            Gets the location in pixels for the given value along the axis. The method takes into account whether the axis is vertical or horizontal.
            </summary>
            <param name="value">A value from the axis values range.</param>
            <returns>The location in pixesls.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericalAxis.ActualRange">
            <summary>
            Gets the actual range used by the axis to plot data points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericalAxis.DesiredTickCount">
            <summary>
            Gets or sets the user-defined number of ticks presented on the axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericalAxis.Minimum">
            <summary>
            Gets or sets the user-defined minimum of the axis. 
            By default the axis itself will calculate the minimum, depending on the minimum of the plotted data points.
            </summary>
            <remarks> You can reset this property by setting it to double.NegativeInfinity to restore the default behavior.</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericalAxis.Maximum">
            <summary>
            Gets or sets the user-defined maximum of the axis. 
            By default the axis itself will calculate the maximum, depending on the maximum of the plotted data points.
            </summary>
            <remarks> You can reset this property by setting it to double.PositiveInfinity to restore the default behavior.</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.NumericalAxis.RangeExtendDirection">
            <summary>
            Gets or sets a value that specifies how the auto-range of this axis will be extended so that each data point is visualized in the best possible way.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.GetArea``1">
            <summary>
            Returns an area of the desired type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.GetSeries``1(System.Int32)">
            <summary>
            Returns a seria of the desired type, at specified index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.OnThemeChanged">
            <summary>
            Called when the theme is changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.Zoom(System.Double,System.Double)">
            <summary>
            Zoom by a specified horizontal and vertical factor
            </summary>
            <param name="horizontalScaleFactor"></param>
            <param name="verticalScaleFactor"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.Pan(System.Double,System.Double)">
            <summary>
            Pans with the specific x and y values 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.DrillDown(Telerik.Charting.DataPoint)">
            <summary>
            Drill to next Chart View
            </summary>
            <param name="point">Entry point for Drill operation</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.DrillUp">
            <summary>
            Drill to previous Chart View
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.DrillToTop">
            <summary>
            Drill to the first Chart View
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.Print">
            <summary>
            Directly prints the <see cref="T:Telerik.WinControls.UI.RadChartView"/> to the default printer.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.Print(System.Boolean)">
            <summary>
            Directly prints the <see cref="T:Telerik.WinControls.UI.RadChartView"/> to the default printer or shows printer settings and then prints the <see cref="T:Telerik.WinControls.UI.RadChartView"/>.
            </summary>
            <param name="showPrinterSettings">Indicates whether printer settings dialog should be shown.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.Print(System.Boolean,Telerik.WinControls.UI.RadPrintDocument)">
            <summary>
            Directly prints the <see cref="T:Telerik.WinControls.UI.RadChartView"/> to the default printer or shows printer settings and then prints the <see cref="T:Telerik.WinControls.UI.RadChartView"/>.
            </summary>
            <param name="showPrinterSettings">Indicates whether printer settings dialog should be shown.</param>
            <param name="document">As instance of <see cref="T:Telerik.WinControls.UI.RadPrintDocument"/> used to control the print process.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.PrintPreview">
            <summary>
            Shows a <see cref="T:Telerik.WinControls.UI.RadPrintPreviewDialog"/> for editing print settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.PrintPreview(Telerik.WinControls.UI.RadPrintDocument)">
            <summary>
            Shows a <see cref="T:Telerik.WinControls.UI.RadPrintPreviewDialog"/> for editing print settings.
            </summary>
            <param name="document">As instance of <see cref="T:Telerik.WinControls.UI.RadPrintDocument"/> used to control the print process.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.ExportToImage(System.String,System.Drawing.Size)">
            <summary>
            Exports the chart view into the specified file using the PNG image format.
            </summary>
            <param name="filePath">The file to which the chart will be exported.</param>
            <param name="size">The size of the exported file.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.ExportToImage(System.String,System.Drawing.Size,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Exports the chart view into the specified file.
            </summary>
            <param name="filePath">The file to which the chart will be exported.</param>
            <param name="size">The size of the exported file.</param>
            <param name="imageFormat">The image format in which to export the chart.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.ExportToImage(System.IO.Stream,System.Drawing.Size)">
            <summary>
            Exports the chart view into the specified stream using the PNG image format.
            </summary>
            <param name="stream">The stream to which to write the chart image</param>
            <param name="size">The size of the exported image.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadChartView.ExportToImage(System.IO.Stream,System.Drawing.Size,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Exports the chart view into the specified stream.
            </summary>
            <param name="stream">The stream to which to write the chart image</param>
            <param name="size">The size of the exported image.</param>
            <param name="imageFormat">The image format in which to export the chart.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.AutoSize">
            <summary>
            Gets or sets whether the edit control is auto-sized
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ChartElement">
            <summary>
            Gets the chart element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.View">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.UI.ChartView"/> associated with the chart element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Views">
            <summary>
            Gets the collection of<see cref="T:Telerik.WinControls.UI.ChartView"/> associated with the chart element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Area">
            <summary>
            Returns the current visible area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowPanZoom">
            <summary>
            Show or hide PanZoom controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowSmartLabels">
            <summary>
            Show or hide Smart labels controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowStillIndicators">
            <summary>
            Show or hide chart still indicators controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.DrillNavigationMode">
            <summary>
            Show or hide Smart labels controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowTrackBall">
            <summary>
            Show or hide TrackBall controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowToolTip">
            <summary>
            Show or hide ToolTip controller in RadChartView.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.SelectionMode">
            <summary>
            Set the selection mode in the control. Available options are None, SingleDataPoint or MultipleDataPoints
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.AreaType">
            <summary>
            Set the desired area type. Available options are - Cartesian, Pie and Polar
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Series">
            <summary>
            Collection of the ChartSeries
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Annotations">
            <summary>
            Collection of the ChartAnnotations
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Axes">
            <summary>
            Collection of the Axes
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Controllers">
            <summary>
            Collection of the Controllers
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.DataSource">
            <summary>
            Gets or sets the data source of the <see cref="T:Telerik.WinControls.UI.ChartSeries"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.DataMember">
            <summary>
            Gets or sets the name of the list or table in the data source for which the <see cref="T:Telerik.WinControls.UI.ChartSeries"/> is bound. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowItemToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are shown for the RadItem objects contained in 
            the RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowLegend">
            <summary>
            Gets or sets a value indicating whether legend is shown.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.LegendTitle">
            <summary>
            Gets or sets the legend title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowTitle">
            <summary>
            Gets or sets a value indicating whether chart title is shown.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.Title">
            <summary>
            Gets or sets the chart title.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowGrid">
            <summary>
            Gets or sets a value indicating whether chart grid should be shown.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.ShowDrillNavigation">
             <summary>
             Gets or sets a value indicating whether DrillNavigation is displayed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RadChartView.UseDataSource">
            <summary>
            Automatically setup DataSource of ChartSeries on attaching using this DataSource only when DataSource property of ChartSeries is null.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.Drill">
            <summary>
            Fires when started Drill operation.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.ContextMenuOpening">
            <summary>
            Occurs when context menu is opening.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.CreateRenderer">
            <summary>
            Fires when the area requies a renderer for the first time.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.SelectedPointChanging">
            <summary>
            Occurs when the value of the IsSelected property of a DataPoint is changing.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.SelectedPointChanged">
            <summary>
            Occurs when the value of the IsSelected property of a DataPoint is changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.LabelFormatting">
            <summary>
            Fires when the content of a point label needs to be formatted for display.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.CreatePoint">
            <summary>
            Occurs when a new DataPoint is created.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.RadChartView.CreatePointElement">
            <summary>
            Occurs when a new DataPointElement is created.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartAreaType">
            <summary>
            Defines the type of the chart area
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Cartesian">
            <summary>
            Cartesian Area supports Bar, Line, Area, Scatter, Ohlc, Candlestick series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Polar">
            <summary>
            Polar Area supports PolarPoint, PolarLine, PolarArea, RadarPoint, RadarLine and RadarArea series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Pie">
            <summary>
            Pie Area supports Pie and Donut series.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartAreaType.Funnel">
            <summary>
            Funnel Area supports Funnel series.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AreaSeriesStrokeMode">
            <summary>
            Defines how an <see cref="T:Telerik.WinControls.UI.AreaSeries"/> shape is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.None">
            <summary>
            No outlining.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.LeftLine">
            <summary>
            The left line (from plotline to the first point) is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.Points">
            <summary>
            The line that connects all points is outlined. This is the default mode.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.RightLine">
            <summary>
            The right line (from plotline to the last point) is outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.PlotLine">
            <summary>
            The plotline is outlines.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.LeftAndPoints">
            <summary>
            Left line and points are outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.RightAndPoints">
            <summary>
            Right line and points are outlined.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.AllButPlotLine">
            <summary>
            All members except the PlotLine are specified.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AreaSeriesStrokeMode.All">
            <summary>
            All enum members are defined and the area is fully outlined.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.GridLineVisibility">
            <summary>
            Defines the visibility of the major and minor lines within a <see cref="T:Telerik.WinControls.UI.CartesianAxis"/>.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.None">
            <summary>
            Lines are hidden.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.X">
            <summary>
            The lines along the X-axis are visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.Y">
            <summary>
            The lines along the Y-axis are visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.GridLineVisibility.XY">
            <summary>
            The lines are visible along both axes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartSelectionMode">
            <summary>
            Defines the selection modes of ChartSeries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.None">
            <summary>
            No DataPoints can be selected.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.SingleDataPoint">
            <summary>
            Single DataPoint can be selected.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartSelectionMode.MultipleDataPoints">
            <summary>
            Multiple DataPoints can be selected.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ChartPanZoomMode">
            <summary>
            Defines the pan and zoom mode of the chart view
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Horizontal">
            <summary>
            Allows horizontal pan and zoom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Vertical">
            <summary>
            Allows vertical pan and zoom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ChartPanZoomMode.Both">
            <summary>
            Allows both horizontal and vertical pan and zoom.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PieLabelModes">
            <summary>
            Defines positioning of labels in a Pie RadChartView.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.PieLabelModes.Horizontal">
            <summary>
            Each label is renderred horizontally. Its position from the center of its corresponding pie segment is determined by X property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.PieLabelModes.Radial">
            <summary>
            Each label is renderred radial to its corresponding Pie segment. Its position from the center of the chart is determined by X property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.BarLabelModes">
            <summary>
            Defines positioning of labels in BarSeries.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Default">
            <summary>
            Labels are positoned using the default strategy.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Center">
            <summary>
            Each label is renderred at the center of its corresponding bar.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.BarLabelModes.Top">
            <summary>
            Each label is renderred at the top of its corresponding bar. If the area orientation is horizontal, the labels appear on the right of each bar. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LegendPosition">
            <summary>
            Determines the position of the chart legend.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Right">
            <summary>
            Docks the right edge of the legend to the right edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Bottom">
            <summary>
            Docks the bottom edge of the legend to the bottom edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Left">
            <summary>
            Docks the left edge of the legend to the left edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Top">
            <summary>
            Docks the top edge of the legend to the top edge of the chart.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LegendPosition.Float">
            <summary>
            The legend floats over the chart. The position is determined by the LegendOffset property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.TitlePosition">
            <summary>
            Defines the position of the title.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Top">
            <summary>
            Places the title on the top side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Right">
            <summary>
            Places the title on the right side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Bottom">
            <summary>
            Places the title on the bottom side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.TitlePosition.Left">
            <summary>
            Places the title on the left side.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.DrillElementPosition">
            <summary>
            Defines the position of the Drill Navigator
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DrillElementPosition.Top">
            <summary>
            Places the title on the top side.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DrillElementPosition.Bottom">
            <summary>
            Places the title on the bottom side.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LineSide">
            <summary>
            Determines to which side of a Label element the line contecting it with its data point will be drawn.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Bottom">
            <summary>
            Draws the line to the bottom of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Top">
            <summary>
            Draws the line to the top side of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Right">
            <summary>
            Draws the line to the right side of the label element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.LineSide.Left">
            <summary>
            Draws the line to the left side of the label element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.SweepDirection">
            <summary>
            Defines the direction an elliptical arc is drawn.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SweepDirection.Counterclockwise">
            <summary>
            Specifies that arcs are drawn in a counter clockwise (negative-angle) direction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SweepDirection.Clockwise">
            <summary>
            Specifies that arcs are drawn in a clockwise (positive-angle) direction.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AnnotationDrawMode">
            <summary>
            Defines the position of the annotation in the chart draw stack.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AnnotationDrawMode.AboveSeries">
            <summary>
            Draws the annotation above the chart view series. This is the default mode.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.AnnotationDrawMode.BelowSeries">
            <summary>
            Draws the annotation below the chart view series.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ScaleBreakStyle">
            <summary>
            Defines the style of the lines draw for scale breaks of an axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LinearAxis.MajorStep">
            <summary>
            Gets or sets the major step between each axis tick.
            By default the axis itself will calculate the major step, depending on the plotted data points.
            </summary>
            <remarks> You can reset this property by setting it to 0 to restore the default behavior.</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.LinearAxis.TickOrigin">
            <summary>
            Gets or sets a value that indicates where the ticks originate. The position of the ticks is determined based
            on the combination of the <see cref="P:Telerik.WinControls.UI.LinearAxis.MajorStep"/> and <c>TickOrigin</c> values. The axis will 
            generate the ticks and labels in a way so that a label would be positioned at the given <c>TickOrigin</c>. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LogarithmicAxis.LogarithmBase">
            <summary>
            Gets or sets the base of the logarithm used for normalizing data points' values.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LogarithmicAxis.ExponentStep">
            <summary>
            Gets or sets the exponent step between each axis tick.
            By default the axis itself will calculate the exponent step, depending on the plotted data points.
            </summary>
            <remarks> You can reset this property by setting it to 0 to restore the default behavior.</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxis.Maximum">
            <summary>
            Gets or sets the maximum value displayed on the polar axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxis.Minimum">
            <summary>
            Gets or sets the minimum value displayed on the polar axis.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarAxis.MajorStep">
            <summary>
            Gets or sets a value indicating the frequency of the ticks.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarArea.ShowGrid">
            <summary>
            Gets or sets a value indicating whether a grid will be drawn in the chart area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarArea.Grid">
            <summary>
            Gets the grid that is displayed in the chart area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolarArea.StartAngle">
            <summary>
            Gets or sets a value indicating where the polar axis will be displayed and where the chart start point will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.SummaryMember">
            <summary>
            Gets or sets a value indicating the property in the data source that determines if a data point is a Summary point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.TotalMember">
            <summary>
            Gets or sets a value indicating the property in the data source that determines if a data point is a Total point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.DrawConnectionsBetweenBars">
            <summary>
            Gets or sets a value indicating whether connecting lines between the bars of the waterfall series will be drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.ConnectionWidth">
            <summary>
            Gets or sets the width of the connecting lines between bars. DrawConnectionsBetweenBars should be set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.ConnectionColor">
            <summary>
            Gets or sets the color of the connecting lines between bars. DrawConnectionsBetweenBars should be set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.ConnectionDashStyle">
            <summary>
            Gets or sets the dash style of the connecting lines between bars. DrawConnectionsBetweenBars should be set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.WaterfallSeries.ConnectionDashPattern">
            <summary>
            Gets or sets the dash pattern of the connecting lines between bars. DrawConnectionsBetweenBars should be set to true.
            </summary>
        </member>
    </members>
</doc>
