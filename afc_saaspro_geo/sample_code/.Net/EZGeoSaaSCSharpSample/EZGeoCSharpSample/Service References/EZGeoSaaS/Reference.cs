//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EZGeoCSharpSample.EZGeoSaaS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EZGeoFault", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
    [System.SerializableAttribute()]
    public partial class EZGeoFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputAddress", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
    [System.SerializableAttribute()]
    public partial class InputAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CassCertifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityStateZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinimumScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CassCertify {
            get {
                return this.CassCertifyField;
            }
            set {
                if ((this.CassCertifyField.Equals(value) != true)) {
                    this.CassCertifyField = value;
                    this.RaisePropertyChanged("CassCertify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityStateZip {
            get {
                return this.CityStateZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CityStateZipField, value) != true)) {
                    this.CityStateZipField = value;
                    this.RaisePropertyChanged("CityStateZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumScore {
            get {
                return this.MinimumScoreField;
            }
            set {
                if ((this.MinimumScoreField.Equals(value) != true)) {
                    this.MinimumScoreField = value;
                    this.RaisePropertyChanged("MinimumScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((this.OptionsField.Equals(value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnit {
            get {
                return this.SecondaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitField, value) != true)) {
                    this.SecondaryUnitField = value;
                    this.RaisePropertyChanged("SecondaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressLocation", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
    [System.SerializableAttribute()]
    public partial class AddressLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EZGeoCSharpSample.EZGeoSaaS.CassAddress CassAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CensusBlockGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CensusTractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FipsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FipsPlaceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncorporatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] InputAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetworkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryJurisdictionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryJurisdictionPCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialTaxDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecialTaxDistrictPCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StandardizedAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxJurisdictionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnderlyingFipsCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Alternate {
            get {
                return this.AlternateField;
            }
            set {
                if ((this.AlternateField.Equals(value) != true)) {
                    this.AlternateField = value;
                    this.RaisePropertyChanged("Alternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EZGeoCSharpSample.EZGeoSaaS.CassAddress CassAddress {
            get {
                return this.CassAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CassAddressField, value) != true)) {
                    this.CassAddressField = value;
                    this.RaisePropertyChanged("CassAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CensusBlockGroup {
            get {
                return this.CensusBlockGroupField;
            }
            set {
                if ((this.CensusBlockGroupField.Equals(value) != true)) {
                    this.CensusBlockGroupField = value;
                    this.RaisePropertyChanged("CensusBlockGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CensusTract {
            get {
                return this.CensusTractField;
            }
            set {
                if ((this.CensusTractField.Equals(value) != true)) {
                    this.CensusTractField = value;
                    this.RaisePropertyChanged("CensusTract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FipsCode {
            get {
                return this.FipsCodeField;
            }
            set {
                if ((this.FipsCodeField.Equals(value) != true)) {
                    this.FipsCodeField = value;
                    this.RaisePropertyChanged("FipsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FipsPlaceName {
            get {
                return this.FipsPlaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FipsPlaceNameField, value) != true)) {
                    this.FipsPlaceNameField = value;
                    this.RaisePropertyChanged("FipsPlaceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Incorporated {
            get {
                return this.IncorporatedField;
            }
            set {
                if ((this.IncorporatedField.Equals(value) != true)) {
                    this.IncorporatedField = value;
                    this.RaisePropertyChanged("Incorporated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] InputAddress {
            get {
                return this.InputAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.InputAddressField, value) != true)) {
                    this.InputAddressField = value;
                    this.RaisePropertyChanged("InputAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetworkID {
            get {
                return this.NetworkIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkIDField, value) != true)) {
                    this.NetworkIDField = value;
                    this.RaisePropertyChanged("NetworkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PCode {
            get {
                return this.PCodeField;
            }
            set {
                if ((this.PCodeField.Equals(value) != true)) {
                    this.PCodeField = value;
                    this.RaisePropertyChanged("PCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeExtension {
            get {
                return this.PostalCodeExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeExtensionField, value) != true)) {
                    this.PostalCodeExtensionField = value;
                    this.RaisePropertyChanged("PostalCodeExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryJurisdictionName {
            get {
                return this.PrimaryJurisdictionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryJurisdictionNameField, value) != true)) {
                    this.PrimaryJurisdictionNameField = value;
                    this.RaisePropertyChanged("PrimaryJurisdictionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryJurisdictionPCode {
            get {
                return this.PrimaryJurisdictionPCodeField;
            }
            set {
                if ((this.PrimaryJurisdictionPCodeField.Equals(value) != true)) {
                    this.PrimaryJurisdictionPCodeField = value;
                    this.RaisePropertyChanged("PrimaryJurisdictionPCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnit {
            get {
                return this.SecondaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitField, value) != true)) {
                    this.SecondaryUnitField = value;
                    this.RaisePropertyChanged("SecondaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialTaxDistrictName {
            get {
                return this.SpecialTaxDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialTaxDistrictNameField, value) != true)) {
                    this.SpecialTaxDistrictNameField = value;
                    this.RaisePropertyChanged("SpecialTaxDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecialTaxDistrictPCode {
            get {
                return this.SpecialTaxDistrictPCodeField;
            }
            set {
                if ((this.SpecialTaxDistrictPCodeField.Equals(value) != true)) {
                    this.SpecialTaxDistrictPCodeField = value;
                    this.RaisePropertyChanged("SpecialTaxDistrictPCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StandardizedAddress {
            get {
                return this.StandardizedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardizedAddressField, value) != true)) {
                    this.StandardizedAddressField = value;
                    this.RaisePropertyChanged("StandardizedAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetNumber {
            get {
                return this.StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNumberField, value) != true)) {
                    this.StreetNumberField = value;
                    this.RaisePropertyChanged("StreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxJurisdictionName {
            get {
                return this.TaxJurisdictionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxJurisdictionNameField, value) != true)) {
                    this.TaxJurisdictionNameField = value;
                    this.RaisePropertyChanged("TaxJurisdictionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnderlyingFipsCode {
            get {
                return this.UnderlyingFipsCodeField;
            }
            set {
                if ((this.UnderlyingFipsCodeField.Equals(value) != true)) {
                    this.UnderlyingFipsCodeField = value;
                    this.RaisePropertyChanged("UnderlyingFipsCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CassAddress", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
    [System.SerializableAttribute()]
    public partial class CassAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressQualityFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityStateZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryPointValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhancedLineOfTravelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReliabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USPSBarCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Zip4Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine {
            get {
                return this.AddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLineField, value) != true)) {
                    this.AddressLineField = value;
                    this.RaisePropertyChanged("AddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressQualityFlags {
            get {
                return this.AddressQualityFlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressQualityFlagsField, value) != true)) {
                    this.AddressQualityFlagsField = value;
                    this.RaisePropertyChanged("AddressQualityFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRoute {
            get {
                return this.CarrierRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteField, value) != true)) {
                    this.CarrierRouteField = value;
                    this.RaisePropertyChanged("CarrierRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityStateZip {
            get {
                return this.CityStateZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CityStateZipField, value) != true)) {
                    this.CityStateZipField = value;
                    this.RaisePropertyChanged("CityStateZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountyCode {
            get {
                return this.CountyCodeField;
            }
            set {
                if ((this.CountyCodeField.Equals(value) != true)) {
                    this.CountyCodeField = value;
                    this.RaisePropertyChanged("CountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryPointValidation {
            get {
                return this.DeliveryPointValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryPointValidationField, value) != true)) {
                    this.DeliveryPointValidationField = value;
                    this.RaisePropertyChanged("DeliveryPointValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnhancedLineOfTravel {
            get {
                return this.EnhancedLineOfTravelField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhancedLineOfTravelField, value) != true)) {
                    this.EnhancedLineOfTravelField = value;
                    this.RaisePropertyChanged("EnhancedLineOfTravel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Reliability {
            get {
                return this.ReliabilityField;
            }
            set {
                if ((this.ReliabilityField.Equals(value) != true)) {
                    this.ReliabilityField = value;
                    this.RaisePropertyChanged("Reliability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USPSBarCode {
            get {
                return this.USPSBarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.USPSBarCodeField, value) != true)) {
                    this.USPSBarCodeField = value;
                    this.RaisePropertyChanged("USPSBarCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip4 {
            get {
                return this.Zip4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Zip4Field, value) != true)) {
                    this.Zip4Field = value;
                    this.RaisePropertyChanged("Zip4");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EZGeoSaaS.ILocatorService")]
    public interface ILocatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorService/GetServerTime", ReplyAction="http://tempuri.org/ILocatorService/GetServerTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EZGeoCSharpSample.EZGeoSaaS.EZGeoFault), Action="http://tempuri.org/ILocatorService/GetServerTimeEZGeoFaultFault", Name="EZGeoFault", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
        string GetServerTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorService/GeocodeAddress", ReplyAction="http://tempuri.org/ILocatorService/GeocodeAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EZGeoCSharpSample.EZGeoSaaS.EZGeoFault), Action="http://tempuri.org/ILocatorService/GeocodeAddressEZGeoFaultFault", Name="EZGeoFault", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
        EZGeoCSharpSample.EZGeoSaaS.AddressLocation GeocodeAddress(EZGeoCSharpSample.EZGeoSaaS.InputAddress inputAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorService/GeocodeAllMatches", ReplyAction="http://tempuri.org/ILocatorService/GeocodeAllMatchesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EZGeoCSharpSample.EZGeoSaaS.EZGeoFault), Action="http://tempuri.org/ILocatorService/GeocodeAllMatchesEZGeoFaultFault", Name="EZGeoFault", Namespace="http://schemas.datacontract.org/2004/07/EZGeoSaaS")]
        EZGeoCSharpSample.EZGeoSaaS.AddressLocation[] GeocodeAllMatches(EZGeoCSharpSample.EZGeoSaaS.InputAddress inputAddress, int matchCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorService/GeocodeLatLong", ReplyAction="http://tempuri.org/ILocatorService/GeocodeLatLongResponse")]
        EZGeoCSharpSample.EZGeoSaaS.AddressLocation GeocodeLatLong(double latitude, double longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocatorServiceChannel : EZGeoCSharpSample.EZGeoSaaS.ILocatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocatorServiceClient : System.ServiceModel.ClientBase<EZGeoCSharpSample.EZGeoSaaS.ILocatorService>, EZGeoCSharpSample.EZGeoSaaS.ILocatorService {
        
        public LocatorServiceClient() {
        }
        
        public LocatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetServerTime() {
            return base.Channel.GetServerTime();
        }
        
        public EZGeoCSharpSample.EZGeoSaaS.AddressLocation GeocodeAddress(EZGeoCSharpSample.EZGeoSaaS.InputAddress inputAddress) {
            return base.Channel.GeocodeAddress(inputAddress);
        }
        
        public EZGeoCSharpSample.EZGeoSaaS.AddressLocation[] GeocodeAllMatches(EZGeoCSharpSample.EZGeoSaaS.InputAddress inputAddress, int matchCount) {
            return base.Channel.GeocodeAllMatches(inputAddress, matchCount);
        }
        
        public EZGeoCSharpSample.EZGeoSaaS.AddressLocation GeocodeLatLong(double latitude, double longitude) {
            return base.Channel.GeocodeLatLong(latitude, longitude);
        }
    }
}
